From: ISMB-96 Proceedings. Copyright © 1996, AAAI (www.aaai.org). All rights reserved.

A Generalized

Hidden Markov Model for the Recognition Genes in DNA

of Human

David Kulp David Haussler
Baskin Center for Computer Engineering and Information Sciences
University of California
Santa Cruz, CA 95064 {dkulp,haussler}@cse.ucsc.edu

Martin G. Reese Frank H. Eeckman
Genome Informatics Group Lawrence Berkeley National Laboratory
1 Cyclotron Road Berkeley, CA 94720 { marti nr,eeck man) @genomei.bl .gov

Abstract
Wepresent a statistical model of genes in DNA.
A Generalized Hidden Markov Model (GtlMM) provides the framework for describing the grasn-
mar of a legal parse of a DNAsequence (Stormo & Haussler 1994). Probabilities are assigned to
transitions between states in tile GItMMand to the generation of each nucleotide base given a particular state. Machinelearning techniques are applied to optimize these probabilities using a standardized training set. Given a new candidate sequence, the best parse is deduced from the
model using a dynamic programlning algorithm to identify the path through the model with maximum probability. Tile GHMMis flexible and modular, so new sensors and additional states can be inserted easily. In addition, it provides simple solutions for integrating cardinality constraints, reading frame constraints, "indels', and homology searching. The description and results of an implementation of such a gene-finding model, called Genie, is presented. The exon sensor is a codon frequency model conditioned on windowed nucleotide frequency and the preceding eodon. Two neural networks are used, as in (Brunak, Engelbrecht, & Knudsen 1991), for splice site prediction. Weshow that this simple model perforins quite well. For a cross-validated standard test set of
304 genes [ftp://www-hgc.lbl.gov/pub/genesets] in human DNA,our gene-finding system identified up to 85%of protein-coding bases correctly with a specificity of 80%. 58%of exons were exactly identified with a specificity of 51%.Genieis shown to perform favorably compared with several other gene-finding systems.
Introduction
Genomic DNA from human and model organisms is
being sequenced at an exponentially increasing rate, making it all the more important to have the right tools
for analyzing and annotating such sequences. It is par-
ticularly useful to identify coding regions from which one can deduce the structure of genes and the result-
ing proteins. Over the past decade, a large body of re-
search has accumulated that deals with the recognition

of translational and transcriptional features. Functional sites and regions include promoter, start codon, splice sites, stop codon, 3' and 5' untranslated regions, introns, and initial, internal and terminal exons. Research historically could be categorized as either statistical or homology based, and most research until recently aimed to characterize a single feature. Fickett(Fickett & Tung 1992) provides an overview and evaluation of many statistical measures for signal and content sensors. Recently, gene-finding systems have been developed that employ many of the known recognition tecimiques in concert. Current state-of-the-art gene-finding methods combine multiple statistical measures with database homology searching to identify gene features (see, for example, FGENEH(Solovyev, A., & Lawrence 1994), GRAILII (Xu et al. 1994), GenLang (Dong & Searls 1994), GENMARK(Borodovsky & Mclninch 1993), and GenelD (Guigo et al. 1992)). The development of gene-finding systems raises research questions regarding the effective and efficient implementation of the system separate from the efficacy of its components. In this paper, we present the results of the implementation of a gene-finding system as a Generalized Hidden Markov Model. Our system is similar in design to GeneParser (Snyder & Stormo 1993), but is based on a rigorous probabilistic framework. We show how a GHMMoffers a simple elegant model of genes in eukaryotic DNA. The probabilistic framework provides meaningfid answers (in a probabilistic sense) to the problem of predicting a complete gene structure or individual components. We present an implementation that is efficient in both time and space, and is general and flexible enough so as to facilitate a modular approach to the use of sensors. We show that an implementation with fairly simple sensors performs as well as the better published gene-finding systems when compared against a standard test set.
Methods
System Framework
llidden Markov Models have been used for decades in pattern recognition (Rabiner & Juang 1986). More recently, their applicability to computational biology

134 ISMB-96

has gained recognition, see e.g. (Kroghel al. 1994). Ill (Krogh, Mian, & Haussler 1994), an HMMwas built
for identifying gene structure in E. coli. HMMhsave been generalized to allow one state in the model to generate more than one symbol (Stormo & Haussler 1994). This generalized frameworkseparates the overall structure of the HMMfrom the embedded component submodels. Generalized HMMpsrovide an intuitive frameworkfor representing genes with their various functional features, and efficient algorithms can be built to use such models to recognize genes.
Figure 1 shows a simplified GHMfMor multiple exon genes. Arcs correspond to states ill the state machine and the nodes represent transitions between states. The labeled states are JS' - 5' untranslated region; J3' - 3' non-coding, EI - Initial Exon; E - Internal Exon; I - Intron; EF- Final Exon; ES - Single Exon. Nodes correspond to signals: D - Donor site, A - Acceptor
site, S - Start Translation; T - Terminate Translation. B (Begin) and F (Finish) are special source and nodes, respectively, for the entire graph. Weconceptualize the GHMMas a machine in which each state generates zero or more symbols. Given a candidate DNAsequence, X, we define the predicted gene structure as the ordered set of states, ¢, called tile parse, such that the probability of generating X according to ¢ is maximalover all possible parses.
To formalize these concepts, we first define a standard hidden Markovmodel in which each state generates a single symbol. Wethen generalize this model to accommodatemultiple symbols per state. Let

M = model
x = {x[1]..... x[,,]}
¢ -=- {ql,q2,...,qn}

(1)
(2)
(3)

where X[i] is the ith base in the sequence Xof length n and qi is the ith state in tim parse ¢. Werequire ql
to be an arc leaving the Begin node B and and q, to be an arc leading to the Finish node F. The parameters of Mspecify for each node a probability distribution over
the arcs leaving that node, and for each arc (state), probability distribution over strings that are generated by that state.
To parse X we find ¢ to maximize P(X, elM). In
a standard hidden Markov model, we can write this probability as the independent joint probabilities of transitioning to each state and generating tile base X[i] in state qi- It is implicitly conditional on M. So, we have (see Rabiner (Rabiner & Juang 1986))

P(X, ~) = P(q, IB) (,=~P(X[i][q,))(~ P(qi+llnode(q,))) (4)
where node(qi) is the node that the arc qi leads to. The generalization of HMMtso accommodatetile generation of multiple symbols per state just introduces

an ordered set of subsequences of X, {xl, x2,..., zk}, such that
X = xlxu.., xk (the concatenation of subsequences)
and a redefinition of the parse as an ordered set of state/sequence pairs:
~b= {(ql, xl), (q2, x2),..., (qk, 2:k)}.
Then equation 4 can be generalized (Fong 1995; Auger & Lawrence 1989; Sankoff 1992; Bengio 1996) as
k k-1
(s)
Each term P(xilqi) can be further decomposedusing
P(xilqi) = P(xi If@i), qi)P(l(zi)lqi)
wherei(xi) is the length of the subsequence xi. Each term, PO:ill(zO,qi)P(l(zOIqO, can be de-
scribed conceptually as a "content sensor" that returns a probability of generating xi according to the model of state qi. Note that a state's model can be arbitrarily complex and might be, itself, an HMMor GIIMM. Our frameworkallows us to define an abstract systemlevel relationship independent of sensor implementation details. The "optimar' parse of X is defined as the parse ¢ that maximizes P(X, ¢). GHMMasre strictly more powerful than standard HMMs.For example, in a GHMtMhe length distribution P(i(xi)}qO can be defined by arbitrary histograms, whereas in standard HMMtshey are simple geometric distributions.
Gene Structure Constraints
Cardinality Constraints By generalizing HMMs as described in the previous section, weare able to replace the implicit geometric distribution on the lengths of features with an arbitrary distribution. Wewish to describe the distribution of occurrences of a feature in a similar manner. For example, given the simplified GItMMin figure 1, and a fixed probability for P(E]I) - i.e., the transition probability from an acceptor to an internal exon - then the distribution of the number of internal exons is geometric over P(E]A). Experimental evidence indicates that the number of exons in a gene is not geometric (Hawkins 1988)(Smith 1988). Hencewe wouldlike to impose an arbitrary distribution constraint on the "cardinality" of exons (Wu 1995). The solution requires the removal of all cycles in the GttMMby virtually "unspooling" the graph. Figure 2 shows the unspooled version of figure 1. The transition probabilities P(F~+llA0can be arbitrarily assigned to each state transition i either through a learning process or from experimental evidence such as frequency counts.

Kulp 135

Figure 1: A simple GHMMfor a sequence containing a multiple exon gene. The arcs represent multi-symbol states and nodes represent transitions between states. The arrows imply a generation of bases from 5' to 3'.
Figure 2: Shows the virtual model of an unspooled GIIMM. Transition probabilities can be assigned at each transition node. An arbitrary number of internal exon and intron states can be added.
Figure 3: A GHMMincluding frame constraints. The additional acceptor and donor transition nodes ensure that only syntactically correct parses are considcred. 136 ISMB-96

Frame Constraints The problem of maintaining a correct reading frame can be solved by adding additional states to the GHMMT.hirteen states are added to the state machinesuch that no legal parse is allowed that does not maintain a correct reading frame. Figure 3 showsa modified version of figure 1 that ensures correct reading frame. Three donor sites and three ac-
ceptor sites represent the nine possible ORFs. Wecan say that introns retain frame, and so there is only one intron state exiting from each of the three donor site nodes. But, an exon can change frame depending on
the length of the exon, and so there are three possible exon states exiting from each of the three acceptor sites. Note, however, that the first base of the initial exon and the last base of the final exon must always be in the same reading frame. Therefore, there is an effective source and sink at the S (Start Translation) and F (Terminate Translation) transitions. By placing reading frame length restrictions on each exon state, we ensure that only valid parses can be generated. For example, the states Elo, EI1, and El,, require that the subsequence must be of a length equal to 0, 1, and 2, modulo 3, respectively. That is, tlle content sen-
sor associated with each state wouldreturn a non-zero probability only if this condition is met. In this way, frame constraint is built into the system framework. Noadditional mechanismis needed to selectively eliminate parses with incorrect reading frames.
Signal Sensors aild Consensus Constraints A signal sensor is usually iml)lemented as a statistical discriminant function or a neural network that returns
a posterior probability of a functional site given a fixedlength subsequence at or surrounding the site. Within a parse, for each xi and xi+l we define a transition ti between the two states qi and qi+l. The transition ti
represents a signal, e.g. a donor site between an exon
xi and an intron xi+l. The location of the fixed-length functional site x~ partially overlaps zero or more bases of xi and Xi+l as shown in figure 4. A signal sensor returns a posterior probability of the form P(tilx~). consensus constraint is a restriction imposed by the model on the allowable symbols at relative positions with respect to a particular state. The dinucleotide consensus found at acceptor and donor sites is an example of a consensus constraint. Such constraints are often part of the modelof the signal sensors of functional sites. These constraints are implementedwithin the probabilistic frameworkby ensuring that non-zero posterior probabilities are returned only for those sites that agree with consensus constraints. The simplest signal sensor returns the frequency of the signal in the training set for all sites that agree with the consensus.
Ialtegrating Signal Sensors Figure 4 shows the regions and sensors corresponding to two adjacent subsequences xi and xi+l. In order to correctly compute the value of equation 5, it is necessary to convert the posterior probability P(tilx~) returned by the signal

sensor into the likelihood P(x~lti ). By Bayes Rule, we have

P(xilti ) = P(tilx~)P(x~)/P(t,)

(6)

Let ",ti be the "local null model"for a transition site

used whenthe signal sensor was trained to discriminate

true signals from non-signals. Using equation 6 twice we have the ratio

P(x~lti) P(tilx~)P(~ti) P(tilx~)(1 - P(ti))
P(x~l-~t~P) (-,t,lx~)P(t,)(1 - P(t,l::~))P(ti) (7)
Hence,

p(x~lt,) = P(ti[x~)(1 ~ P(t,))

Here, P(tilx~) is the posterior probability output from a signal sensor, and P(ti) can be interpreted as the observed frequency of ti in the training set used to train the signal sensor. The term P(x~]~tl) is sometimes problematic, since it is often not clear what null model is being implicitly used in manydiscriminative training methods, such as neural network methods. In these cases it must be estimated. For example, for donor sites we use a simple model in which all letters of x~ are independent and distributed according to the frequencies of nucleotides in a local window, except the consensus pattern 'GT' which is required. This is because the neural network we use to recognize donor sites was trained with negative examples with the consensus 'GT', but were otherwise random non-donor sites.
Once we have computed the likelihood P(x~lti), we need to integrate this value into the calculation of the overall joint likelihood P(X, ¢). Referring to figure wesee that in the absenceof the signal sensor for ti, the likelihood for this part of the parse wouldcontain the term P(xilqi)P(xi+llqi+l). With the output P) (x~lti from the signal sensor, this part of the likelihood can be refined to
P(Xab[qi)P(x~[li)P(Xde [qi+l
whereXaband Xde are the parts of xi and xi+l, respectively, not overlapped by xi.
Note, in the extreme case the signal sensor returns probability 0 for the transition ti fromstate qi to qi+l, P(x~lti ) = 0, and hence the refined likelihood of the parse drops to zero. This is howconsensus constraints are enforced by the probabilistic mechanism.
Correcting for Insertions and Deletions
Insertion and deletion of nucleotides ("indels") introduced by sequencing errors need to be corrected before applying the frame constraint. The system described in this paper does not explicitly address these errors at the GHMlMevel; rather this is left to the exon content sensors, where the problemcan be dealt with using varying degrees of sophistication. As discussed in the previous section, the frame constraint places absolute

Kulp 137

...............................................................

~ ........ ...~.............................-.-.-.-.-.-.-,-:,- ................................................................................................

:::. ...... -. ..::.

xt (ti}

b I

d

I

&

Xi {qi) c Xi+l (qi+l)

Figure 4: The location of two hypothetical content sensor regions, xi and x/+l, and the signal sensor region xil representing the transition ti. The transition occurs at position c with overlap from position b to d.

length restrictions on exons. Alternatively, probabilities can be assigned to subsequences whose length, modulo 3, do not match the required frame for a particular state. These probabilities can be easily derived from statistical estimation of indel frequencies. A more complicated approach models an exon as a GHMM.
This modelincludes an insertion and/or deletion state with a small probability of transitioning into this state, as in the codon models of Krogh et al (Krogh et al.
1994).
Dynamic Program for Optimizing Parse
The Viterbi algorithm is used to maximize equation 5 for ¢. This approach is well described elsewhere including (Snyder ~ Stormo 1993; Gelfand & Roytberg 1993; Auger & Lawrence 1989; Sankoff 1992; Gelfand & Roytberg 1995; Bengio 1996). Notable differences from the standard dynamic programming algorithm relate to accommodating the GHMMframework. Specifically, a first pass through the sequence establishes candidate transition sites and constructs a graph of the syntactically legal parses. With the addition of multisymbol states, the DP algorithm must iterate through all transitions ti, for l < i < k, considering all legal preceding states from each possible transition tj, for j < i. This implies that the running time is O2)(k where k is the numberof possible transitions. Experimental evidence shows that k ~ i-ridn, where n is tile total number of bases. The running time can be fur-
ther reduced by imposing maximumlength restrictions on certain states. For example, no exon region longer than 3,000 bases is considered in our implementation.
If all states include maximumlength restrictions, then the asymptotic running time becomes linear in k for large n.
The graph can be stored such that each transition node requires a number of pointers equal to the (constant) numberof possible states that can legally precede it. As a result, the space required to store the graph is also linear in k - the numberof nodes in the graph. The algorithm will scale well to accommodate large sequences as contiguous DNAon the order of 100Kbbecome available.
An advantage of the GHMgMene model is the ability to calculate the probability of a particular feature by using a dynamic program to sum over all possi-

ble parses with that feature. Suppose, for example, we wish to determine the probability that some subsequence x is an exon given the context of the full sequence X. As described under "System Framework", let E be the exon state, then formally, we wish to find P((x,E) E ¢IX, M). This requires that we sum P(¢IX, M) over all possible parses, ~, that contain the pair (x, E). Toefficiently calculate this probability, forward-backward algorithm is employed (Stormo Haussler 1994). Additionally, the best parse given the feature, (x,E), i.e. argmaxeP(¢lM, X,(x,E ) E ¢), can be simply deduced by applying a variation of the Viterbi algorithm which processes the two halfsequences on either side of x independently.

Implementation

A working system built according to the modeland design described here was implemented and experimen-
tally validated. Genie depends to a large extent on the quality of its individual content and signal sensors. Each component is designed and trained independently, and then combined into a modular system. More sophisticated training methods, e.g. like those used with hidden Markov models, can also be employed (Rabiner & Juang 1986; Stormo & Haussler 1994; Bengio 1996). Wedescribe briefly the key points in the current implementation of Genie.

Length Distributions

In a GHMMindividual

states can generate multi-symbol strings based on ar-

bitrary length distributions. In our implementation,

the state-specific length distributions were found by

generating a length histogram for each state. Figure 5

shows the smoothed and normalized distributions de-

rived from the first training set for introns and internal

exons.

Splice Site Model Two neural network recognizers were developed as described in (Brunak, Engelbrecht, g: Knudsen1991). Wetrained a backpropagation feedforward neural network with one layer of hidden units to recognize donor and acceptor sites, respectively. Different from Brunaket al., we only consider genes that had constraint consensussplice sites, i.e., 'GT'for the donor and 'AG'for the acceptor site. Hence, the neural network distinguishes between GTdonor sites (AGac-

138 ISMB-96

10~ 6

Prot~l~Ity of FeatureLen~'l

S
100 200 300 400 500 600 700 800 900 1000
LengOthops) Figure 5: Probability distributions of tile length of introns and internal exons.

ceptor sites) occurring in the DNAsequence that function as splice sites and those that do not. To achieve that goal, the sequence is coded using 4 input units for each nueleotide and one unit as the output. Empirical experiments similar to (Brunak, Engelbrecht,
Knudsen 1991) show that sequence windowsizes of 15bp for donor sites (-7..+8) and 41bp for acceptor sites (-21..+20) are optimal. In addition the number hidden units was experimentally optimized. The best results are achieved with 50 hidden units for donor and 40 hidden units for acceptor sites. Additional hidden layers do not improvethe results. It is interesting to note that the number of hidden units do not seem to play an important role. For example, the Correlation Coefficient for donor site prediction in a network with
50 hidden units is 0.855 whereas in a network with no hidden units it is 0.81. The output of the two networks are interpreted as the posterior probabilities for donor and acceptor sites at a given position in tile sequence.
laltron ModelThe intron model is essentially a windowednull model. For any base b at position i, the frequency of nucleotides in a windowof 300 bases, from
i- 150 to i+ 150 excluding position i, is computed. The probability of b is assigned according to the computed frequencies. The current implementation does not in-
clude any sophisticated knowledgeof introns, such as repeat detection. Intuition suggests that those features peculiar to introns, such as repeats, do not have high coding potential, so a good exon modelwill be unlikely to favor such regions.
Exon Model The exon model uses only two coding statistics to determine coding potential. First, GC-content and any other local frequency bias is considered by computing the frequency of the four nu-

cleotides within a windowof 300 bases, similar to the intron model. The size of the windowwas chosen experimentally. For larger windowsizes, local variation in base composition was less evident. Second, a firstorder Markovchain is used to condition the distribution over the 61 possible codons. These criteria are combinedas feature input into a 2-layer neural network with 17 hidden units, trained using standard backpropagation. (The numberof hidden units were experimentally optimized, and hidden units were found to have only a marginal effect.) Hence, the GC-content, codon usage, and previous codon are simply integrated in a single discriminator.
Results
For our studies we built a representative humangene data set using Genbank, release 89, 1995. The human gene set was selected from all knownhumangenes in Genbank. To obtain a representative set we preprocessed tile data using several filters. Werequired a correct species label, i.e. "Homosapiens", and at least one intron in the sequence. A valid CDSannotation must exist; coding must begin with "atg" and finish with one of three consensus stop codons, and splice sites must conformto the consensus dinucleotides. Sequences with alternative splicings and in-frame stop codons were discarded. Additionally, sequences were discarded if the sequenceidentity of the translated protein was greater than 50%using BLAST.The resultant data set of 304 genes was divided into seven groups to be used in cross-validation - one seventh of the data is used for testing. This data set (in Genbankflatfile format) is publicly available via anonymousFTPfrom www-hgc.lbl.gov in directory/pub/genesets/.
For comparison with other gene-finding systems, we

Kulp 139

also tested Genie against a second data set, provided by Burset and Guigo (Burset & Guigo 1996). This data set of 570 genes from many different organisms was used in (Burset & Guigo 1996) to compare the effectiveness of manydifferent gene-finders. Our system, like most of those tested in (Burset & Guigo1996), was trained on humangenes only, but it is still interesting to compare the relative predictive ability amongthe systems.
Table 1 shows statistical results from tests of the gene-finder against two (arbitrarily chosen) of the seven test sets using the 304-gene data set. Wealso tested Genie against the Burset/Guigo data set; results comparingour gene-finder with other gene-finding systems is shown in Table 2. In accordance with the testing scheme established by Burset and Guigo, we report sensitivity and specificity with respect to perbase prediction of coding]non-coding and with respect to exact prediction of exons. The per-base sensitivity is the fraction of true coding bases predicted as coding, and the specificity is the fraction of all predicted coding bases that were correct. Similarly, the exon sensitivity is the fraction of true exons predicted exactly, and the specificity is the fraction of predicted exons that were correct. In these tests, correct exon prediction requires identification of the exact position of splice sites. Fully or partially overlapping predictions are not accepted. The approximate coefficient (AC) is described by (Burset & Guigo 1996) as a preferred alternative over the correlation coefficient and defined by
AC=~(T1--.--~T-P~ + TT--P~-~ + ~TN+ T----ffT~N ) -- 1
where TP, FP, TN, and FN are true positives, false positives, true negatives, and false negatives.
In addition, wealso report the fraction of true exons that were not identified either exactly or overlapping (Missing Exons) and the fraction of predicted exons that did not overlap any true exon (WrongExons).
Discussion
The predictive ability of our gene-fimler is shownto be as goodas other gene-finding systems. In particular, in comparisons using the Burset/Guigo data set, Genie's performance is comparable to that of GenLaag (Dong & Searls 1994), which was the second best program for predicting exact exons amongthose tested. This is encouraging, since Genie is based on a rather simple probabilistic framework. However, a short-coming of the current implementation seems to be the proclivity to predict extraneous exons. Although up to 93%of true exons are identified, at least 29%of the total predictions do not overlap any knowncoding region. Observations suggest that the length of these predicted regions were often relatively small. Attempts to improve the specificity of exon prediction by artificially adjusting model parameters have not yet shown good

results. In this regard, there is still muchroomfor improvement.
Our research is currently focused on integrating homology-based searching into our GHMMgene model. Weconsider one of the most important advantages of homology-baseddiscrimination to be the ability to identify exon pairs, thus implyingthe exact location of splice sites. Therefore, a key feature in our proposed database model is the introduction of a "splice junction" sensor - a fixed-length sensor that identifies database matches from a putative splice. The second component is a new exon sensor as a linear HMMT. he HMMis built on-the-fly for each candidate exon and includes states for each database match. A database is interpreted very generally and includes protein motifs and collections of cDNA,DNA,and amino acid sequences.
Adding homology searching complicates the probabilistic interpretation of the parse. Weconsider a database match in an information theoretic sense as a bit cost for encoding the unique identification of the match. The probability of a match can then be derived from the encoding cost and integrated into the
joint probability of the complete parse. Additional current work includes designing a graphi-
cal interface for use by biologists at large-scale sequencing centers such as Lawrence Berkeley National Laboratory, incorporating a promoter signal sensor (Reese 1995), and providing multiple gene recognition capa-
bility. Wehope to report results regarding these enhancements by the time of the conference.
Acknowledgments
Wewish to thank Gary Stormo for his supportive advice and comments throughout the design and development of this work. Thanks is also extended to Gregg Helt for early workon the gene data set and NomiHHarris for her graphical interface, which proved helpful to study individual predictions. Wegratefully acknowledge Saira Mian, Michael Brown, Leslie Grate, Richard llughey and Kevin Karplus for helpful commentsand discussions on the topic.
This work was supported in part by DOEgrant no. DE-FG03-95ER62112 and DE-AC03-76SF00098. D. ltaussler acknowledges support of the Aspen Center for Physics, Biosequence Analysis Workshop.

140 ISMB--96

Data Set
Part 1 Part 2

Per Base Sn Sp AC 0.85 0.80 0.80 0.70 0.69 0.64

Exact Exon Sn Sp Avg ME 0.58 0.51 0.54 0.07 0.49 0.41 0.45 0.23

WE 0.29 0.39

Table 1: Sensitivity (Sn), Specificity (Sp), ApproximateCoefficient (AC), Average of Sensitivity and Specificity (Avg), Missing Exons (ME), and WrongExons (WE)as measured for two parts of a cross-validated test set a data set of 304 humangenes in DNA.

Gene-finder
Genie FGENEH GenelD GeneParser2 GenLang GRAILII SORFIND Xpound

Per Base Sn Sp AC
0.76 0.77 0.72 0.77 0.85 0.78 0.63 0.81 0.67 0.66 0.79 0.66 0.72 0.75 0.69 0.72 0.84 0.75 0.71 0.85 0.73 0.61 O.82 0.68

Sn
0.55 0.61 0.44 0.35 0.50 0.36 0.42 0.15

E~act Exon Sp Avg ME
0.48 0.51 0.17 0.61 0.61 0.15 0.45 0.45 0.28 0.39 0.37 0.29 0.49 0.50 0.21 0.41 0.38 0.25 0.47 0.45 0.24 0.17 0.16 0.32

WE
0.33 0.11 0.24 0.17 0.21 0.10 0.14 0.13

Table 2: A comparison of Genie with other gene-finding systems. Tests were run on a set of 570 annotated sequence from different organisms.

References
Auger, I. E., and Lawrence, C. E. 1989. Algorithms for the optimal identification of segment neighborhoods. Bull. Math. Biol. 51:39-54.
Bengio, Y. 1996. Neural Networks for Speech and Sequence Recognition. Thomson.
Borodovsky, M., and Mclninch, J. 1993. Genmark: Parallel gene recognition for both DNAstrands. Computers and Chemistry 17(2):123-133.
Brunak, S.; Engelbreeht, J.; and Knudsen, S. 1991. Prediction of humanmRNAdonor and acceptor sites from the dna sequence. JMB220:49-65.
Burset, M., and Guigo, R. 1996. Evaluation of gene structure prediction programs. Genomics (to appear). Data set and evaluation results can be found at http://www.imim.es/GeneIdentification/Evaluation/Index.html.
Dong, S., and Searls, D. B. 1994. Gene structure prediction by linguistic methods. Genomics 162:705708.
Fickett, J. W., and Tung, C.-S. 1992. Assessment of protein coding measures. Nucl. Acids Res. 20:64416450.
Fong, D. 1995. Parsing of DNAsequences using dynamic programming with a state machine model, unpublished manuscript.
Gelfand, M. S., and Roytberg, M. A. 1993. Prediction of the exon-intron structure by a dynamic programming approach. BioSystems 30:173-182.

Gelfand, M. S., and Roytberg, M. A. 1995. Dynamic programming for gene recognition. In Gene-Finding and Gene Structure Prediction Workshop.
Guigo, R.; Knudsen, S.; Drake, N.; and Smith, T. 1992. Prediction of gene structure. J. Mol. Biol. 226:141-157.
Hawkins, J. D. 1988. A survey on intron and exon lengths. Nucl. Acids Res. 16:9893-9908.
Krogh, A.; Brown,M.; Mian, I. S.; SjSlander, K.; and Haussler, D. 1994. Hidden Markov models in computational biology: Applications to protein modeling. JMB235:1501-1531.
Krogh, A.; Mian, I. S.; and Haussler, D. 1994. A Hidden Markov Model that finds genes in E. coli DNA. NA R 22:4768-4778.
Rabiner, L. R., and Juang, B. H. 1986. Anintroduction to hidden Markov models. IEEE ASSP Magazine 3(1):4-16.
Reese, M. G. 1995. Novel neural network prediction systems for humanpromoters and splice sites. In Gene-Finding and Gene Slructure Prediction Workshop.
Sankoff, D. 1992. Efficient optimal decomposition of a sequence into disjoint regions, each matched to some template in an inventory. Math. Biosci. 111:279-293.
Smith, M. W. 1988. Structure of vertebrate genes: a statistical analysis implicating selection. J. Moi. Evol. 27:45-55.
Snyder, E. E., and Stormo, G. D. 1993. Identification of coding regions in genomic DNAsequences:

Kulp 141

an application of dynamic programming and neural networks. Nucl. Acids Res. 21:607-613. Solovyev, V.; A., S.; and Lawrence, C. 1994. Predicting internal exons by oligonucleotide composition and discriminant analysis of splicable open reading frames. Nucl. Acids Res. 22:5156-5163. Stormo, G. D., and Haussler, D. 1994. Optimally parsing a sequence into different classes based on multiple types of information. In ISMB-94. Menlo Park, CA: AAAI/MIT Press. Wu, T. 1995. A phase-specific dynamic programming algorithm for parsing gene structure. In Gene-Finding and Gene Structure Prediction Workshop. Xu, Y.; Einstein, J. R.; Shah, M.; and Uberbacher, E. C. 1994. Animproved system for exon recognition and gene modeling in humandna sequences. In ISMB94. Menlo Park, CA: AAAI/MITPress.
142 ISMB-96

