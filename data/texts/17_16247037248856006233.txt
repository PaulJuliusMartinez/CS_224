PHYSICAL PIXELS

by

Kelly Bowman Heaton

B.A., Yale University (1994)

Submitted to the Program in Media Arts and Sciences,

School of Architecture and Planning, in partial fulfillment of the requirements

for the degree of

Master of Science in Media Arts and Sciences

at the

MASSACHUSETTS INSTITUTE OF TECHNOLOGY

June 2000

© Massachusetts Institute of Technology 2000.  All rights reserved.

Author

Certified by

Accepted by

Program in Media Arts and Sciences,
School of Architecture and Urban Planning
May 5, 2000

Michael Hawley
Assistant Professor of Media Arts and Sciences
Alex W. Dreyfoos (’54), Jr. Career Development Professor
of Media Arts and Sciences

Stephen A. Benton
Chair, Departmental Committee on Graduate Students
Program in Media Arts and Sciences

Abstract

The picture element, or pixel, is a conceptual unit of representation for
digital information.  Like all data structures of the computer, pixels are
invisible  and  therefore  require  an  output  device  to  be  seen.    The
physical unit of display, or physical pixel, can be any form that makes
the  pixel  visible.    Pixels  are  often  represented  as  the  electronically
addressable phosphors of a video monitor, but the potential for different
visualizations inspires the development of novel phenotypes.  Four new
systems  of  physical  pixels  are  presented:  Nami,  Peano, the  Digital
Palette  and  20/20  Refurbished.    In  each  case,  the  combination  of
material, hardware and software design results in a unique visualization
of  computation.    The  chief  contribution  of  this  research  is  the
articulation  of  a  mode  of  artistic  practice  in  which  custom  units  of
representation integrate physical and digital media to engender a new
art.

2

PHYSICAL PIXELS

Thesis Committee

Michael Hawley
Assistant Professor of Media Arts and Sciences
Alex W. Dreyfoos (’54), Jr. Career Development Professor
of Media Arts and Sciences

John Maeda
Assistant Professor of Design and Computation at the MIT Media Laboratory
Sony Career Development Professor of Media Arts and Sciences

Thesis Reader

Thesis Reader

Thesis Reader

William L. Verplank, PhD
CCRMA, Stanford University

3

Acknowledgments

Thank you to everyone who helped to reveal the physical pixel.

Charlotte Burgess

Carlos Cantu

Andrew Gallant, Peter Morley
and the MIT Central Machine Shop

Steve Gass, Deborah Helman
and the Barker Engineering Library

Steve Gray

Saul Griffith

Michael Hawley
and the Personal Information Architecture Group

Kristin Hall

Camilla Holten

Hiroshi Ishii
and the Tangible Media Group

Golan Levin

Carl Machover

Jacob K. Javits Fellowship Program

John Maeda
and the Aesthetics and Computation Group

Tim McNerny

NECSYS

Nicholas Negroponte

Maggie Orth

MIT Council for the Arts

Paul Pham

Robert Poor

Matt Reynolds

Joel Rosenberg

Scott Snibbe

Brygg Ullmer

Bill Verplank

My family and friends

4

Table of Contents

Introduction

The Slow Birth of New Media

The Evolution of Pixel

Beyond the Monitor

Four Physical Pixels

Nami
Digital Palette
Peano
20/20 Refurbished

Discussion

Conclusion

Appendix: The Design of a Modular Display System

Bibliography

21
26
29
37

7

8

12

17

20

39

42

44

48

5

6

Introduction

The effort to make computation visible will always be affected by the
material  interpretation  of  what  is  essentially  immaterial.    Yet,  like  all
forms  of  art,  it  is  through  the  revelatory  process  that  we  come  to
understand  that  which  cannot  be  revealed.    This  thesis  examines  the
picture element, or pixel, as one method for visualizing the numeric and
electronic abstraction of computation.

The deconstruction of images into a quantifiable unit of representation
is at least as old as the tile mosaics of ancient Greece.  In contrast to a
mosaic  tile,  which  has  an  appearance  intrinsic  to  its  physicality,  a
picture  element  begins  as  a  non-visible  quantum  of  information.    It
serves to represent, but has no appearance per se.

To  be  seen,  the  pixel  needs  a  physical  form  hereafter  termed  the
physical pixel.    To  date,  video  has  been  the  predominant  medium  for
making pixels visible, along with tapestry, punch cards and print.  All
of these forms are different visualizations of the same fundamental data
structure.  Due to variation in physical media, different output devices
will provide a unique experience of the same digital information.  The
physical  appearance  of  a  pixel  is  a  matter  of  interpretation,  a  specific
material manifestation of an invisible medium.

I present four research projects with four physical pixels, each of which
offers a different perspective on the computer as a medium for artistic
expression.    The  basic  organization  of  visible  data  is  consistent
throughout,  but  each  project  defines 
the  pixel  as  a  different
computational and material unit.  In the  Nami  example,  our  pixel  is  a
wireless  network  node  with  full-spectrum  colored  light.    The  Digital
Palette treats the pixel a source of electronic “paint” for coloring other
physical pixels.  In the Peano project, I demonstrate how the pixel can
be used as a building block for computer animated sculpture.  Finally,
20/20 Refurbished  presents  the  observer  with  a  reactive  surface  made
of  Furbies™  that  are  modified  to  behave  as  pixels  with  personality.
This  body  of  work  is  defined  by  a  mode  of  artistic  practice  in  which
custom units of representation unite physical and digital media.  Like
the painter’s brushstroke or sculptor’s touch, the physical pixel is the
mark of a new art.

is  presented  as  part  of  a 

This  research 
tradition  of  optical
deconstruction  in  the  visual  arts,  including  the  history  of  computer
graphics.    I  include  several  prior  examples  in  which  physical  pixels
have revealed a novel insight into the nature of computation.  Finally, I
endeavor  to  understand  what  is  consistent  about  the  pixel  throughout
any  material  manifestation,  and  therefore  any  art  made  with  a  pixel-
based organization of digital information.

The principle contributions of this thesis are:

1.  The articulation of a new media termed the physical pixel
2.  Four  examples  of  physical  pixels,  each  of  which  encapsulates  a

unique combination of physical and digital into a synthetic form
 A conceptual framework for the design of physical pixel media

3. 

Red, green, blue LED
Wireless network node

Touch responsive

Programmable

Nami

Red, green, blue LED

Touch responsive

Programmable by example

Digital Palette

Red, green, blue LED

Touch responsive

Modular network node

Programmable

Peano

Animatronic toy

Pop culture personality

Artificially sentient

Programmable

20/20 Refurbished

What is a pixel?  A pixel is a unit of
representation with a data structure
and a physical form.

Each of these circles encapsulates a
unit of representation with different
properties, as described in this thesis.
Italics indicate the display system.

7

The Slow Birth of New Media

Among Marshall McLuhan’s most important contributions to
twentieth  century  thought  is  “The  medium  is  the  message.”
His  statement  is  not  meant  to  proclaim  the  disappearance  of
content,  but  “merely  to  say  that  the  personal  and  social
consequences  of  any  medium  -that  is,  of  any  extension  of
ourselves- result from the new scale that is introduced into our
affairs  by  each  extension  of  ourselves,  or  by  any  new
technology.”1    In  other  words,  stories,  mythologies  and
characters  do  not  change  significantly  with  time,  but  media
change radically; and the way in which we perceive content is
equally  if  not  more  influenced  by  the  message  of  a  medium
than  the  narrative  itself.    The  skillful  use  of  a  medium  is
critical  to  the  success  of  an  artist.    Instinctively,  we  know
when there is a lack of true ownership over the material from
which  an  artwork  was  made.  A  message  inappropriately
delivered  in  paint  will  look  as  wrong  as  a  eulogy  written  in
icing  on  cake. 2    This  is  an  extreme  example,  but  the  more
subtle  situations  are 
inflict  our
communication with unwitting friction and misunderstanding.
In  the  best  case,  a  medium  will  enhance  a  message  by
contributing implicit meaning to an artist’s explicit intention;
but weak content in a strong vehicle, or strong content in the
wrong  vehicle,  will  not  be  delivered  effectively.    Content
aside,  the  misguided  media-vehicle  will  drive  our  attention
elsewhere.

those  which  regularly 

Unpacking  the  message  of  a  medium  is  essential  to  creative
work, enabling the artist to see the material for what it is and
not  what  it  seems  to  be.    In  his  essay  “The  Question
Concerning  Technology”,  Heidegger  describes  this  essential
technç,  the  Greek  root  for  the  word
pursuit  in  terms  of 
technology, originally associated with “knowing in the widest
sense  …  to  be  entirely  at  home  in  something,  to  understand
and to be an expert in it.” 3  Technç embodies the wisdom that
precedes poiçsis, or the “poetical bringing into appearance and
concrete imagery”.4  In the absence of technç, an artist will be
hindered from this poetic process of revealing truth, for “Only
the  true  brings  us  into  a  free  relationship  with  that  which
concerns us from out of its essence.” 5

The computer monitor. From the Conrac
Corporation’s Raster Graphics Handbook  (Second
Edition). Van Nostrand Reinhold Company, Inc.,
New York, NY. 1985. Note the similarities in the
television and desktop computer interfaces.

At  this  early  stage  in  development,  art  made  with  the
computer6  is  still  undergoing  differentiation  from  previous
modes of expression.  Work in new media typically involves a
                                                                
1 McLuhan, Marshall. Understanding Media: the extensions of man. The MIT Press, Cambridge, MA, 1994.  Page 7.
2 Note that a failure of this type is due to both societal perception and the impracticality of cake icing for permanent record.  The
inappropriateness of the medium is partly cultural, and partly essential to the material.
3 Heidegger, Martin.  The Question Concerning Technology and Other Essays. Harper and Row Publishers, Inc., New York, NY,
1977 (Hereafter referred to as TQCT).  Page 14.
4 TQCT, page 10.
5 TQCT, page 6.
6 As Charlotte Burgess astutely observes , “art made with a computer” has no strict definition at this time.  Use of the phrase
“computer art” is avoided in this document because it merits careful definition, an exercise that extends beyond the scope of this
thesis.

Bush Model TV56 405 Line TV

8

transposition of previous experience, regardless of whether or
not  the  content  is  appropriate  or  interesting  in  the  new
medium.    In  his  1932  article,  A  New  Instrument  of  Vision,
Mohology-Nagy  summarizes  the  influence  of  “the  aesthetic-
philosophic concepts that circumscribed painting” on the early
years of photography:

Up to now, photography has remained in rather rigid
dependence on the traditional forms of painting; and
like  painting  it  has  passed  through  the  successive
stages of all the various 'isms'; though ill no sense to
its advantage. Fundamentally new discoveries cannot
for long be confined to the mentality and practice of
bygone periods with impunity. When that happens all
productive activity is arrested.7

that 

their 

ideas 

into 

“The 

stated 

Art made with a computer is no exception to this tendency.  In
1975,  Anne  Murray 
first  decade  of
experimentation  has  shown 
the  computer  can  be
programmed to simulate the styles of previously existing art,” 8
as though emulating pre-existing art is somehow a prerequisite
to  work  in  a  new  medium.  Murray  continues,  “graphic
designers, printmakers, sculptors, film makers, architects and
choreographers…  prefer  to  work  in  conjunction  with  a
programmer  who  can 
the
mathematical language of the machine.” 9    Her  description  of
the  programmer  as  translator  for  the  artist  is  reminiscent  of
Muybridge’s “specific intention” in photography “to create an
atlas  for  the  use  of  artists,  a  visual  dictionary  of  human  and
animal  forms  in  action.” 10    In  both  cases,  the  technologist  –
programmer  or  photographer-  was  not  considered  the  artist,
but servant to an artist and his/her preconceived notions about
art in an unfamiliar medium.

translate 

Eadweard  Muybridge’s  The Horse in Motion
(1878).  Developed as part of an “atlas for the use
of artists.”

The  computer  is  often  treated  as  a  means  for  representing
traditional  forms  of  art.    This  perception  can  be  dangerous
insofar  as  it  can  mistake  art  represented  on  a  computer  with
the  original  form,  not  unlike  the  confusion  of  printed
reproduction with an authentic painting.11  The visual narrative
may be the same, but the media of one art is not necessarily
interchangeable  with  another.    In  Being  Digital,  Nicholas
Negroponte writes,

Computers  and  art  can  bring  out  the  worst  in  each
other  when  they  first  meet.    One  reason  is  that  the
signature  of  the  machine  can  be  too  strong.    It  can
overpower the intended expression … The flavor of

                 

This is not a painting.  Adapted from René
Magritte, The Betrayal of Images (1929).

                                                                
7 Moholy-Nagy, Laszlo . A New Instrument of Vision, 1932.
8 Anne H. Murray quoted from: Leavitt, Ruth. Artist and Computer. Crown Publishers, Inc., New York, NY, 1976 (Hereafter
abbreviated A&C).  Page 3.
9 Anne H. Murray quoted from A&C, page 1.
10 Newhall, Beaumont, The history of photography : from 1839 to the present.  Museum of Modern Art, New York, NY, 1982.
11 Walter Benjamin discusses the profound implications of printed media for painting in his famous essay, “The Work of Art in
the Age of Mechanical Reproduction.”

9

the  computer  can  drown  the  subtler  signals  of  the
art.12

That art made in other media does not jibe with the computer
is no fault of the machine.  To view a painting on a monitor is
to alter the identity of the work entirely, although certainly not
to  transform  the  work  into  “computer  art.”    In  his  1965-66
Brushstrokes 
series,  Roy  Lichenstein  made  brilliant
commentary  on  the  transposition  of  painting  into  the  print
medium  by  returning  the  brushstroke  to  the  canvas  as  a
subject, rendered in paint as it  appears  in  print.    Lichenstein
reminds us that the substance of one medium is simulacrum in
another.  Although 
are
compositionally  predominant,  the  paintings  are  about  a
relationship  to  print.    The  “flavor  of  the  computer”  that
drowns “the subtler signals of the art” is the essence of media
that Lichenstein harnesses to make his art.

brushstroke 

his 

subjects 

Numerous  artists  have  emerged  with  no  distinction  between
computer scientist and creator, producing artworks that have
no  comparable  identity  in  any  other  medium.  Nevertheless,
computer  graphics  is  nearly  synonymous  with  screen-based,
and  the  pixel  is  commonly  perceived  as  a  phosphor  of  a
desktop  monitor. 13  To  be  sure,  the  popularity  of  the  video
monitor has much to do with its availability and high-quality
image, but a normative concept of image representation is also
involved.    The  rectangular  monitor,  the  flat  screen,  the
uniform surface texture, high realism and the Cartesian image
plane, characterize the majority of computer graphics.  It is no
coincidence  that  these  are  descriptors  that  could  be  equally
applied to a high Renaissance painting, also heavily influenced
by the philosophy of René Descartes.  Perhaps it is the very
same  fear  of  infinite  reality  that  inspired  Descartes  to  seek
proof  of  the  existence  of  everything,  including  God,  which
motivates the contemporary thinker to seek Cartesian order in
the approximate infinity of digital information.14

Roy Lichenstein’s  Big Painting VI (1965).  Oil
and Magna on canvas, 92.5 x 129 inches.
Kunstsammlung Nordrhein-Westfalen,
Dusseldorf.

The Cartesian grid of computer graphics
illustrated in full glory.  Image from the
videotape “Study of a Numerically Modeled
Severe Storm,” National Center for
Supercomputing Applications, University of
Illinois at Urbana-Champaign.  Caption and
illustration adapted from Edward Tufte’s Visual
Explanations: Images and Quantities, Evidence
and Narrative.  Graphics Press, Inc., Cheshire,
CT, 1997.

Although  innovative  art  has  been  made  with  the  computer,
metaphor impedes a deeper understanding.  In part, metaphor
is  our  only  access  to  an  invisible  medium;  most  concrete
representations of computation look  like something else.  The
monitor  is   like  the  frame,  the  screen  is   like  the  canvas,  the
software tools simulate brushes, and many peripheral devices
seek  comparison  to  instruments  of  the  draftsman.    This  is  a
challenge for every art form, made all the more treacherous as
simulation  by  one  medium  of  another  becomes  increasingly
facile.  In 1961, Clement Greenberg commented, “What had to
                                                                
12 Negroponte, Nicholas. Being Digital. Random House, Inc., New York, NY, 1996.  Page 223.
13 Many people mistake the RGB phosphor for the pixel as opposed to a material instance of a pixel.
14 Sean Cubitt traces the history of the grid through Descartes to the foundations of Christianity itself: “The grid derives its
onscreen presentations from modernist design practice, which itself can be traced back to Descartes’s invention of neutral space
defined only by coordinates rather than contents, and to Mercator’s redefinition of the map as a blank field of longitude and
latitude into which the marks of coordinate space can be drawn.  But behind this insipid, unmarked space can be glimpsed an
older grid deployed in the mediaeval scriptoria, a grid made up not of modular, transferable boxes, but of points and cruxes, in
each of which the divine and the sublunary met.  From: Cubitt, Sean. Digital Aesthetics. Sage Publications Ltd, London, 1998
(Hereafter referred to as DA).  Page 89.

10

be exhibited and made explicit was that which was unique and
irreducible  not  only  in  art  in  general  but  also  in  each
particular  art…”15  (Italics  mine).    To  the  extent  that  new
media  inspires  a  reinvention  of  traditional  expression,  a
connection  to  the  past  can  be  deeply  meaningful;  but  the
reproduction  of  old  ideas  is  tiresome.    Art  made  with  the
computer must consciously parry comparison to reveal a fresh
perspective  on  historic  art  forms  instead  of  mimicking
tradition.  The danger of metaphor derives from its purchase of
a mind frame from pre-existing media, as observed by Charles
Csuri,  “Most  people  are  inclined  to  think  of  computer  art  as
static graphics or animated film.”  The connection to painting,
film  and  video  is  further  affirmed  in  the  terminology  of
programming  itself. 16    Metaphor  may  be  a  useful  device  for
user  interface,  but  adherence  to  the  familiar  can  seduce  an
artist  to  “shut  [their]  eyes  to  the  constellation  of  truth  after
which we are  questioning.”17  As stated by Steven Holtzman,
“If virtual worlds are mere reflections of the natural, built on
borrowed metaphors from the real world, then indeed we may
create little more than the antithesis of the natural.” 18    When
questioning the computer as a creative medium, care should be
taken that preconceptions do not preempt a revelation.

Three (rather limited) options for visualizing
computation, adapted from the Conrac
Corporation’s Raster Graphics Handbook
(Second Edition). Van Nostrand Reinhold
Company, Inc., New York, NY. 1985.

                                                                
15 O’Brian, John (Editor). Clement Greenburg: The Collected Essays and Criticism Vol. 4 - Modernism With a Vengeance, 1957-
1969.
16 Metaphor permeates the semantics of programming languages.  The examples are too numerous to recount, but suffice a few:
Java contains methods for creating a canvas on which to draw, paint and repaint; Lingo conducts animation of cast members on
the stage.
17 TQCT ,  page 35.
18 Holtzman, Steven. Digital Mosaics: the aesthetics of cyberspace. Simon and Schuster, Inc., New York, NY, 1998.  Page 61.

11

The Evolution of Pixel

The origins of the picture element derive from the cathode-ray
tube  (CRT),  a  display  technology  popularized  by  television
and  later  co-opted  by  computer  graphics.    Pixel,  short  for
picture  element,  emerged  in  the  late  1960s  as  a  way  to
describe  video.1    Despite  the  comparatively  large  storage
requirements  of 
the  raster  display,  computer  scientists
recognized  that  specifically  addressing  the  entire  grid  of  a
CRT would lead to a dynamic and flicker-free, color image. 2
With  the  development  of  low-cost  memory  in  the  1970s,
bitmap  raster  graphics  replaced  vector  systems  as 
the
predominant paradigm of computer graphics and the concept
of  a  digital  pixel  was  born.    As  described  by  Nicholas
Negroponte,  “The  real  power  of  the  pixel  comes  from  its
molecular nature, in that a pixel can be part of anything, from
text to lines to photographs.  Pixels are pixels is as true as bits
are  bits.  (…)  The  same  bits  can  be  looked  at  by  the  viewer
from many perspectives.”3  Like any data, the digital pixel has
no  absolute  appearance;  it  is  a  mathematical  description  that
needs to be interpreted by a physical output device in order to
be  visible.    Nevertheless,  our  contemporary  concept  of  the
pixel  is  concretely  rooted  in  material  origins,  for  reasons
examined in this chapter.

The  history  of  video  has  played  a  dominant  role  in  the
definition  of  picture  element  and  thus  bitmapped  raster
graphics on the whole.  To understand this influence requires a
look  at  the  development  of  video  in  the  context  of  film
animation, print, painting and other forms of image creation,
which have influenced our traditional perception of the image.
In 1948, at the dawn of television, Theodore  Soller  describes
the cathode-ray tube like a form of electric painting,

The cathode-ray tube is a form of visual indicator that
permits  an  interpretation  of  electrical  phenomena  in
terms of a picture painted on a phosphorescent screen
which  is  controlled  in  position  and  intensity  by
electrical  signals.    Under  the  proper  conditions,  it
paints this picture in an extremely facile way, being
capable  of  utilizing  many  millions  of  separate  data
per second.4 (Italics mine)

Cathode-ray tube images, circa 1948.  From
Cathode Ray Tube Displays (Theodore Soller,
Editor).  McGraw-Hill Book Company, Inc.,
New York, NY, 1948.

This  notion  of  a  painting  made  by  “electrical  signals”  is
altogether  different  from  film  animation,  which  at  the  time
                                                                
1 Oxford English Dictionary.  The specific reference is to a 1969 article in Science, vol. 15 (August).  Further research into the
origins of pixel reveal a reference to the concept, if not the name, as early as 1940, in which M. W. Baldwin attributes image
sharpness to “the number of elemental areas in the image.”  He quantifies resolution of these elements in terms of “liminal units.”
(From: M. W. Baldwin’s “The Subjective Sharpness of Simulated Television Images.”  Proceedings of the I.R.E., 1940. Page
460.)  Thanks to Steve Gass for his generous assistance with the search for pixel etymology.
2 A. Michael Noll of Bell Telephone Laboratories published the seminal paper on this topic in 1971, “Scanned-Display Computer
Graphics.”  He uses the term “dot” or “point” instead of “pixel,” presumably an indication that the language of computer graphics
had yet to merge with video terminology.
3 Negroponte, Nicholas. Being Digital. Random House, Inc., New York, NY, 1996.  Page 107.
4 Soller, Theodore (Editor).  Cathode Ray Tube Displays. McGraw-Hill Book Company, Inc., New York, NY, 1948.  Page 1.

The pixel as we know it.

12

Soller made his observation, was the best-known medium for
dynamic  imagery  (and  is  still  popularly  considered  to  be  the
nearest  cousin  of  the  video  image).    Despite  the  superficial
similarities of film and video, Soller alludes to a critical divide
between the two media.  Whereas cinema creates the illusion
of motion using the mechanical sequencing of high-resolution
frames, video is the result of “many millions of separate data
per second” changing in unison to present a coordinated image
on  an  immobile  output  device.    In  this  respect,  video
participates  in  a  trend  of  pictorial  deconstruction  that  began
with the daguerreotype and Impressionism, was “echoed later
in Seurat’s pointillisme, and is still continued in the newspaper
mesh of dots that is called “wirephoto.”5  Through a reduction
of the image “into a fabric of tiny, uniform, color-bearing dots
… repeated over the surface of the canvas with machine-like
regularity,6” video unites the temporal image with the spatial
plasticity of painting.

While the cathode-ray tube was still undergoing development
in the hands of engineers, the notion of a video-like medium
occupied the minds of many artists.  Abstract animators such
as  Hans  Richter  and  Oskar  Fischinger  handmade  precious
frame  after  frame  of  film  to  create  the  moving  painting.
Notably, Alexander Alexeieff and Claire Parker painstakingly
crafted a physical screen of 1,000,000 pins that they sculpted
to achieve a movable surface for their film animation.  Kinetic
artists,  including  Alexander  Calder  and  Yakov  Agaam,
incorporated  motion  into  art  through  the  use  of  natural
phenomena  and  viewer 
  In
particular,  Agaam  experimented  with  a  wide  variety  of
moving parts, modular compositional elements and sculptural
surfaces in which an observer could participate to experience a
dynamic  artwork.    Beginning  in  the  1950s,  Mary  Ellen  Bute
and later,  Nam  Jun  Paik,  were  among  the  first  to  directly
manipulate  the  analog  signal  to  a  cathode-ray  tube,  using
electronics  for  abstract  effects  within  the  video  medium,  as
opposed to recorded by the film medium.  Through the use of
magnets and circuitry, Bute,  Paik and other early video artists
were  able  to  paint  with  time-varying  electrical  phenomena
directly onto the video medium itself.

interaction  with  sculpture. 

Whereas early work with the cathode-ray tube depended on an
analog source for the visible signal, computer science elevated
the  electronic  painting  to  a  new  level  of  mathematical
abstraction  and  discrete  control.  It  became  unnecessary  to
know  the  nuts  and  bolts  of  video  electronics;  programming
afforded linguistic access to the “black box” terminal.  Digital
processing was an attractive alternative to the time-consuming
process  of  film  animation  and  the  analog-dependency  of
television.    In  the  late  1950s,  artists  began  a  gradual  shift
towards  the  computer  as  a  medium,  as  explained  by  John
Whitney regarding his animation machine of 1958,

Detail from George Seurat’s The Circus (1891).
Oil on canvas, 73 x 59 1/8 inches.  Musee
d'Orsay, Paris.

Mary Ellen Bute (1954).  Photograph by Ted
Nemeth, from Robert Russett and Cecile Starr’s
Experimental Animation (Revised Edition). Da
Capo Press, Inc., New York, NY, 1976.

Yakov Agaam’s Lumiere de minuit (Midnight
Light) showing the visible changes as the same
piece is viewed from four different perspectives.
From Frank Popper’s Agaam (Third Revised
Edition). Harry N. Abrams, Inc., New York, NY,
1990.

                                                                
5 McLuhan, Marshall. Understanding Media: the extensions of man. The MIT Press, Cambridge, MA, 1994.  Page 190.
6 Anne H. Murray from: Leavitt, Ruth. Artist and Computer. Crown Publishers, Inc., New York, NY, 1976.  Page 1.

13

is  actually 

is  doing
[My  animation  machine] 
mechanically  what  an  oscilloscope  would  do;  and
that’s when I began to realize that what I was doing
mechanically could be done on the cathode ray tube
computer terminal. 7

Through the computer, mathematics provided a new means for
animating  an  electronic  image,  achieving  effects  that  were
previously  restricted  to  direct  manipulation  of  the  display
device.  Mathematics reduced the image to  information  from
which an illusion could be modeled numerically, as opposed
to  media  that  captured  or  physically  built  a  picture.    As
described by Richard Norman in his text Electronic Color,

Unlike the image on a television screen, the computer
picture is the invented image of its designer, a plastic
image that can be shaped and changed, an image that
is  alive  and  capable  of  responding  to  further
information.8 (Italics mine)

A critical shift occurred when the means by which information
was used to manipulate an image  transitioned from analog to
digital.  Although film, photography, print and television are
all  technological,  the  image-making  capabilities  of  these
media  are  accessible  through  manual  control,  even  if  such
physical craft necessitates electronic components.  In contrast,
the programmer’s art is abstract logic organized into computer
instructions, like a form of machine age poetry.  The computer
program is an intangible set of commands by which a machine
executes  logic;  and  according  to  this  logic,  a  system  of
physical pixels (or other display device) illustrates the state of
the  machine.    With  bitmap  raster  graphics,  the  video  pixel
evolved  from  an  analog  locale  on  a  cathode-ray  tube  into  a
point with mathematically specific syntax.

Logical access to every pixel of the video monitor, combined
with  sufficient  data  storage,  rapidly  broadened  the  pictorial
applications  of  the  medium.    Video  games  are  an  obvious
example,  but  nearly  every  other  form  of  graphical  user
interface  of  the  past  thirty  years  has  followed  in  the  video
tradition  as  well.    Bitmapped  raster  graphics  on  the  video
monitor 
the  popular  perception  of
computation.    Although  “jaggies”  were  a  nuisance  to  early
raster graphics, Frank Crow and other graphics pioneers of the
early  1970s  made  it  a  priority  to  “perfect”  the  computer-
controlled  video  image  through  the  elimination  of  pixel
evidence9.  Thanks to their emphasis on higher level content
and virtual realism, pixels have become practically invisible in
screen-based computer graphics.

rapidly  became 

Nam Jun Paik’s direct manipulation of the video
signal in Magnet TV (1965). Photograph taken
from the Guggenhiem Museum web site.

                    
Jaggies: the inevitable consequence of continuous
geometry on a finite grid. Conrac Corporation.
Raster Graphics Handbook (Second Edition).
Van Nostrand Reinhold Company, Inc., New
York, NY. 1985.

Realism in computer graphics.  Illustration from
Newman and Sproull’s  Principles of Interactive
Computer Graphics (Second Edition).  McGraw-
Hill Book Company, Inc., New York, NY, 1979.

                                                                
7 Russett, Robert and Starr, Cecile. Experimental Animation (Revised Edition). Da Capo Press, Inc., New York, NY, 1976.
Page 184.
8 Norman, Richard B. Electronic Color: the art of color applied to computer graphic computing. Van Nostrand Reinhold, New
York, NY, 1990.  Page 72.
9 Franklin C. Crow’s seminal paper on antialiasing was presented to the SIGGRAPH community in 1977, “The Aliasing Problem
in Computer-Generated Shaded Images.”

14

Nevertheless,  the  pixel  remains  integral  to  our  perception  of
the computer, just like the brushstroke, the tooth of paper, the
brand of film or the grit of clay.  Certain artworks specifically
bring our attention to the tiny physical pixels of the screen, as
exemplified  by  John  Maeda’s  Single  Pixel  (1995).    Other
screen-based work creates graphic representations of the pixel,
such  as  the  down-sampled  portraits  made  by  Ed  Manning’s
BLOCPIX™.    Similarly,  anyone  who  has  “zoomed  down  to
the level of the pixel” in Adobe Photoshop™ is familiar with
their  illustration  of  the  image  pixel  as  an  evenly  colored
square.    Leon  Harmon  and  Kenneth  Knowlton  (Studies  in
Perception,  1966-67),  later  followed  by  Robert  Silvers
(Photomosaics™,  1997),  substituted  the  uniformly  colored
square  with  digital  pictures,  treating  the  graphical  pixel  as
though it were a collage element.

As the center of attention, or the unit that constitutes an image,
the pixel will always represent digital fragmentation.  Part of
the  broader  trend  in  scientific  deconstruction,  the  pixel  is
considered  by  many  to  be  the  ultimate  form  of  visual
representation, as stated by Carl Sagan,

Any work of art is ultimately pointillist.  There are a
large  but  finite  number  of  atoms  or  molecules  in  a
painting or sculpture.  Color and brightness have no
meaning on any finer scale.  If you knew the position,
reflectivity, and “color” of every small molecule in a
work  of  art,  you  could,  in  principle,  reconstruct  as
many  identical  copies  as  you  wished,  each  of  them
equally original. 10

Ed Manning’s portrait of Ralph Nader using
BLOCPIX™ (1973).  From Ruth Leavitt’s
Artist and Computer. Crown Publishers, Inc.,
New York, NY, 1976.

  Of  course, 

This  mentality  goes  hand  in  hand  with  the  Cartesian
philosophy that reality is reducible to a mathematical equation,
and it is only a matter of time before we analyze the world into
tiny  bits  and  reconstitute  it  according  to  our  own  control
algorithms. 
to  visualize
computation  that  do  not  involve  the  reduction  of  everything
into  dots.    Digital  information  can  be  used  to  generate  a
continuous  representation  such  as  the  vector  display,  or  the
computer-generated  drawings  of  Harold  Cohen  and  Charles
Csuri.  The use of pixels to visualize computation is a choice
that affects the meaning of the art.

there  are  ways 

The digital image as pixel.  Robert Silvers,
“Portrait of George Washington from the one
dollar bill -- for Mastercard "The Future of
Money" promotion.” (c. 1997).  From:
http://www.photomosaic.com/gallery.htm

The physical qualities of the pixel also affect our perception.
The  flatness  and  luminescence  of  a  monitor  contribute  to  a
unique  experience  of  pixel  graphics,  no  matter  how
imperceptible  the  individual  units  of  representation  may  be.
The  structure  and  physical  properties  of  the  video  display
device  are  fundamental  to  any  screen-based  pixel,  be  it  an
actual physical pixel or a representation of the pixel.  In some
situations,  the  qualities  of  the  screen  are  problematic.    For
example, visualizations that are three-dimensional, modular or
tangible are hard to represent with a single monitor.  The need
                                                                
10 Prueitt, Melvin L.  Art and the Computer.  McGraw-Hill Book Company, Inc. New York , NY 1984., Page viii.

Silicon atoms: the ultimate pixel.  Photo from
P.W. Atkins’ Molecules.  W. H. Freeman and
Company, New York, NY, 1987.

15

for  alternate  visualizations  has  motivated  a  variety  of  new
output devices for computation.  In the next section, I discuss
the history of physical pixels beyond the monitor.

An image that was not made from pixels.
Charles Csuri’s  Sine-Curve Man (1966).
Silkscreen on plastic, 36 x 40”.

16

Beyond the Monitor

The digital pixel, often made physical as a phosphor element,
can just as well be visualized through light bulbs or actuated
tiles  or  swarming  ants  or  any  other  discrete  unit  that  can  be
made to change visibly in response to digital information.  For
example,  Eric  Staller’s  Lightmobile  (1985)  uses  1,700
computer-controlled light bulbs to animate a car.  The choice
of  form  is  a  matter  of  aesthetic  preference.    There  are  an
endless  variety  of  visualizations  made  possible  by  various
materials  and  organizations  of  pixels,  just  as  there  are
visualizations  made  possible  by  data  structures  other  than
pixels.

Pixels beyond the monitor are often static.  For example, the
printed  image  is  intended  to  create  a  permanent  artifact  of
computation 
to  further  digital
information.  By contrast, the research presented in this thesis
is  specifically  concerned  with  physical  pixels  that  change
visibly with the time-varying state of a computer.

that  does  not  respond 

John  Frazer  and  his  colleagues  at  the  London  Architectural
Association have been innovating alternate representations of
computation  since  the  late  1960s.    For  thirty  years,  Frazer’s
research has been motivated by an “evolutionary architecture”,
or  one  in  which  the  computer  contributes  generative  rules,
responsive  behavior  and  other  life-like  qualities  to  building
structures.  Not surprisingly, he finds the two-dimensionality
of  monitors  and  plotters  restrictive  for  his  exploration  of  a
three-dimensional  material  space,  and  his  background  in
architecture naturally leads him to physical modeling systems.
The 1978  Generator  Project  was  among  the  first  of  many
“intelligent physical  modelling”  systems  that  Frazer  would
construct in his quest to “get away from conventional, drawing
board dependent design approaches.”  He writes,

Important  new  ideas  emerged  from  the  Generator
project.    These  included  embedded  intelligence  and
learning 
the
isomorphism  of  processor  configuration  and  model
structure, and the question of consciousness.1

experience 

during 

from 

use, 

In  1989,  Anagnostou  (et  al.)  developed  a  similar  system  for
engineering  problems  wherein  the  use  of  a  two-dimensional
model  “remains  both  tedious  and  complex.” 2    In  their  paper
entitled “Geometry-defining processors for engineering design
and  analysis,”  Anagnostou  reinforces  Frazer’s  frustrations
with the flat interface, stating “Unfortunately, the intrinsically
two-dimensional graphics tablet is no longer an ideal interface
geometries.” 3
in 

three-dimensional 

context 

the 

of 

Eric Staller’s  Lightmobile (1985).  A computer
controls the 1,700 bulbs to flicker in twenty-three
different patterns of light.  From Goodman, Cynthia.
Digital Visions: Computers and Art.  Harry N.
Abrams, Inc., New York, NY. 1987.

Frazer’s Intelligent Beermats (1980) and Three-
dimensional Modelling System (1980). Photo from
Frazer, J. An Evolutionary Architecture. Architectural
Association: London, 1994.

                                                                
1 Frazer, J. An Evolutionary Architecture. Architectural Association: London, 1994 (Hereafter abbreviated AEA).  Page 41.
2 Anagnostou, G., Dewey, D., and Patera, A, “Geometry-defining processors for engineering design and analysis,” in: The Visual
Computer, 5:304-315.
3 Ibid.

17

Frazer’s Universal Constructor (1990), showing the
vertically stacking units of construction, each
approximately eight inches on a side.  Photo from
Photo from Frazer, J. An Evolutionary Architecture.
Architectural Association: London, 1994.

Rick Borovoy and Kwindla  Kramer’s  Stackables
(1997).  Photo from:
www.media.mit.edu/projects/beads/index.html.

Nevertheless,  the  early  building  systems  of  both  Frazer  and
Anagnostou  persist  with  a  video  display  to  visualize  the
computation.

In  1990,  in  his  “most  ambitious  of  these  models,”  Frazer
incorporated  colored  light  into  the  building  blocks  of  the
Universal  Constructor  making  the  virtual  relationships  and
behaviors of a three-dimensional structure visible without the
aid  of  a  monitor. 
the  revolutionary
advantages of display intrinsic to the objects themselves,

  Frazer  describes 

Each cube could have any one of 256  states  which  were
displayed by means of eight light-emitting diodes (LEDs).
Thus the eight-bit code could be used to map the state of
the  cell  to  any  form  or  structure;  to  environmental
conditions such as wind; to sound, or even to dance. (…)
The  range  of  different  applications  was  diverse  and
included three-dimensional cellular automata responding
to a site problem, a curve-fitting program controlled by a
Fibonacci  series,  and  an  encoding  of  the  Laban  dance
notation.4

Frazer’s  Universal  Constructor  uses  visual  feedback 
to
encourage  the  interactor  to  modify  the  quantity,  spatial
location  and  orientation  of  the  physical  pixels  that  he  calls
“cells”.  Frazer explains,

interactor 

In  a  typical  experimental  application  the  system  will
request  an 
to  configure  an  environment
consisting  of  cells  in  different  states.    Using  lights,  the
model then indicates its proposed response by asking the
interactor’s assistance in adding or removing units.  The
participator can in turn modify the environment.5

The computer and the display become an integral unit.  This
notion  of  the  graphics  embedded  in  a  system  of  networked
computers  has  also  been  implemented  in  Programmable
Beads  [Borovoy,  Kramer  1997]  and  Stackables  [Kramer,
Minar 1997].  In all of the cases described, patterns of colored
LED  light  are  used  to  reflect  the  state  of  a  network  that
operates  rule-based  programs  of  behavior,  such  as  cellular
automata.  As the building units are rearranged, the behavior
of  the  system  responds  to  the  new  network  geometry  in  the
way  that  flocking  birds  assume  flight  patterns,  traffic  jams
take  form  or  ant  colonies  self-organize.    Whereas  these
modular  systems  are  intended  for  physical  interaction  by  the
user, other artists have made the pixel a three dimensional unit
in  stand-alone  sculpture.    Artist  Nam  Jun  Paik  has  used  the
entire  television  as  a  unit  of  construction  and  graphical
representation in his sculpture. In Nicholas Negroponte’s Seek
(1969-70), a machine arm rearranges paper blocks to build a
dynamic  architecture  for  gerbils,  also  creating  an  interesting
display  system  wherein  the  blocks  are  movable  pixels.

                                                                
4 AEA, pages 45.
5 AEA, page 49.

Nicholas Negroponte's  Seek (1969-70).  Photo from
Cynthia Goodman’s Digital Visions: Computers and
Art.  Harry N. Abrams, Inc., New York, NY. 1987.

18

Computation  made  visible  by  a  modular  building  system  is
equally significant to sculpture as the computer has been for
video, albeit less explored at this time.

Artists  and  engineers  seek  new  forms  of  physical  pixels  to
solve  a  problem  or  create  a  personal  aesthetic.    Joseph
Jacobson  and  the  Micromedia  Group  at  the  MIT  Media
Laboratory  have  tailored  the  shape  of  electrophoretic  ink
pixels to suit the geometry of a particular display application.
Jacobson’s  physical  pixels  are  also  flexible,  suggesting  a
future for electronic display that compares with the look and
feel of paper.  Danny Rozen’s Wooden Mirror  (1999)  uses  a
computer to convert video input into a real-time video image
made  of  840  wooden  chips  and  the  noise  of  their  respective
motors.    The  result  is  a  unique  reflection  of  the  viewer  in
wood and sound.  In her wall installation Chorus (1999), Soda
member Lucy Kimbell created a grid of “sonic greeting cards
opening and closing in choreographed teams for a raucous and
unruly … choir.” 6  In each of these cases, the inventor desires
a  visualization  of  computation  that  cannot  be  achieved  with
pre-existing display technologies.  The physical pixel presents
a  valuable  opportunity  for  specializing,  personalizing  or
reinventing our perception of computation.

Danny Rozen’s Wooden Mirror (1999). Photo by
Marianne K. Yeung.

Detail of an early E Ink™ demonstration, revealing
the variable pixel geometry specialized for an
animated display of text, below.

                                                                
6 http://www.soda.co.uk/soda/chorus.htm

19

In the following sections, four systems of physical pixels are
described:  Nami,  the  Digital  Palette,  Peano  and  20/20
Refurbished.  The projects are presented in the order in which
they were built to reveal the processes that led from one to the
next, although the flow of research was not strictly linear.  The
idea  for  Peano  was  conceived  shortly  after  Nami,  but  long
before  a  mechanical  design  could  make  it  a  reality.    In  the
interim,  the  Digital  Palette  was  developed  to  enhance  the
interface  to  Nami.    20/20  Refurbished  was  motivated  by  a
desire to incorporate the observer into a “living” composition
made by pixels with personality.

20

Nami

Nami is a display system comprised of  untethered  pixels  that
wirelessly  link  to  form  an  amorphous  network 1.    The  name
Nami derives from the Japanese word for wave, describing the
radial  propagation  of  a  message  within  the  nodes  of  the
network,  like  ripples  made  by  raindrops  in  a  pond.    The
original impetus for Nami was Robert Poor’s Hyphos research
concerning  the  self-organization  of  wireless  nodes  into  a
network of amorphous structure.2  Nami was the first, physical
platform for demonstrating the  Hyphos  concept  to  a  broader
audience.

The design challenge for Nami centered on the most direct and
intuitive  way  to  illustrate  decentralized  networking.  An
advanced  topic  normally  communicated  through  technical
diagrams  and  graphical  simulation,  decentralized  networking
can be difficult to comprehend.  With Nami, we endeavored to
communicate  the  usefulness  of  a  decentralized  network  to
wirelessly linking toys, appliances and other physical objects
in the home.  This demonstration is best served in situ, where
the  viewer  can  directly  experience  the  wireless  objects
communicating  and  watch  how  the  system  changes  as  the
nodes  are  rearranged.    Further,  decentralized  networking  is
specifically liberated from central control, and simulation by a
single  computer  makes  this  point  difficult  to  appreciate.
Instead  of  building  the  physical  network  and  illustrating  it
through  screen-based  simulation,  it  was  decided  that  the
sensible approach would be a decentralized network that was
its own display device.  In this case, the physical pixels are the
network nodes themselves.

System Overview

Nami is comprised of an unspecified number of nodes that are
designed  to  self-organize  in  a  decentralized  network.    The
Nami network node, or orb,  is  approximately  the  size,  shape
and  heft  of  a  large  bagel.    The  physical  form  of  an  orb  was
purposefully  chosen  to  make  the  object  non-threatening  and
comfortable to touch.  The most prominent feature is a frosted
hemispherical  dome,  lit  from  within  by  a  glowing  colored
light that changes hue based on the state of the node.  When
the dome is touched, an orb picks a new color and emits an
infrared pulse to signal nearby orbs to change their color and
relay  the  message.    In  this  way,  colored  light  spreads  like  a
wave throughout the entire network, creating a visible pattern
of the communication pathways in a decentralized system.

The Nami Orb.

The Nami network.  Photograph by Robert Poor.

                                                                
1 Nami was developed by Robert Poor, Kelly Heaton, Andrew Wheeler and Anita Stout (1999).  The concept of an amorphous
network used in this discussion was described by: Coore, Daniel and Nagpal, Radhika, “Implementing Reaction Diffusion on an
Amorphous Computer,” in: 1998 MIT Student Workshop on High Performance Computing in Science and Engineering,
MIT/LCS/TR-737.
2 Poor, R. Hyphos: A Self-Organizing, Wireless Network. MS thesis, MIT Media Laboratory, 1997.

21

Anatomy of the Nami Orb

Each  orb  contains  five  major  subsystems:  light  generation,  a
controlling processor, touch sensing, wireless communications
and a power supply, as described in the following sections.

Light Generation

Beneath the plastic dome are eight high-intensity LEDs: three
red, two green and three blue.  Arranged in a ring, light from
the  LEDs  is  diffused  by  two  layers  of  frosted  mylar.    A
PIC12C673  microcontroller generates three channels of Pulse
Width Modulation (PWM) signals to control the brightness of
the red, green and blue LEDs.  Each channel is refreshed at a
rate of 112.5 Hz with eight bits of brightness resulting in 24
bits of low-flicker color.  Color commands are sent from the
controlling processor to the PWM-dedicated processor over a
4800  baud  serial  line,  specifying  the  brightness  for  the  RGB
channels and a rate to ramp from the current values to the final
values.    Ramp  rates  can  be  as  short  as  one  PWM  cycle  (8.9
mSec)  or  as  long  as  17  seconds.    At  each  PWM  cycle,  the
RGB brightness values are gamma corrected and converted to
corresponding PWM periods.

Controlling Processor

A PIC16C76  microcontroller  is  the  central  processor  for  an
orb.  It monitors touch sensing, sends commands to the light
generation  PIC,  receives  and  transmits  infrared  data  to  its
neighbors  and  controls  battery  recharging.    The  behavior  of
each  orb  is  encoded  in  the  controlling  processor's  program.
This program directs touch response, message relay, message
execution and color expression.  Except for a unique ID, every
orb  has  identical  software.    Consequently,  the  emergent
behavior in a Nami network is the visible product of multiple
instances of the same program.

Touch Sensing

An orb has a capacitive touch sensing system that is triggered
when direct contact is made with the dome.  A disk of  mylar
coated  with  conductive  Indium  Tin  Oxide  (ITO)  acts  as  one
plate of a capacitor while the ground plane of the orb's circuit
board serves as the other.  By measuring the time to charge the
capacitor,  the  controlling  processor  can  detect  a  change  in
capacitance.

Wireless Communication

A  Nami  network  node  is  equipped  with  a  bi-directional
infrared  (IR)  communication  link.    A  conical  mirror  at  the
center  of  each  circuit  board  disperses  IR  light  from  three
emitters  in  a  circular  plane,  parallel  to  the  surface  on  which
the orb is placed.  Similarly, the conical mirror collects light

Diagram of the Nami Orb that shows the red,
green and blue LEDs; touch sensitive dome
(capacitive); two microprocessors (one master
and one LED-dedicated); rechargeable batteries;
and infrared transmitter and receiver.

Illustration of the spread of a message within the
Nami network.

22

and directs it to an IR receiver on the circuit board. Using this
infrastructure,  an  orb  can  communicate  with  its  immediate
neighbors without regard to the rotation of sender or receiver.
Communication  is  25  KBaud  and  intentionally  limited  to
approximately eight inches.

Power Supply

At full brightness, the LEDs for a single orb consume over a
watt of power.  An orb uses three AAA  NiMH  rechargeable
batteries and a DC power jack for recharging.  A fully charged
orb  will  run  for  about  five  hours  and  can  be  recharged  in
twelve hours.

Visualizing the Nami Network

The  amorphous,  community-like  structure  of  Nami 
is
fundamental  to  the  aesthetic  of  computer  graphics  in  the
system.    Nami  can  reveal  many  insights  that  a  Cartesian
system  cannot,  and  vice  versa.    Applications  that  require
absolute  spatial  coordinates  are  not  well  suited 
to  a
decentralized  network,  making  Nami  inappropriate  for  the
pixelated image to which we are accustomed on the CRT.  The
determination  of  absolute  network  geometry  requires  many
more processors than are realistic for a physical pixel network
at the present time. 3  It  is  only  possible  to  know  the  relative
location of a picture element in a decentralized network, using
the following method.  The main processor for an orb carries a
unique ID that must be announced for the node to be known
by the other elements in the network.  This announcement is
relayed  through  the  standard  channels  of  communication
enabling  all  network  nodes  to  record  the  number  of  other
nodes traversed by the message prior to reaching them.  Thus,
the  coordinate  system  for  a  decentralized  network  is  a
relational map; a node will not know spatial coordinates, but it
will  know  the  messaging  distance  between  itself  and  other
members  of  the  network.    Given  the  known  radius  of
communication for the Nami infrared system, it is possible to
generalize  messaging  distances 
into  physical  distances.
Nevertheless, only directional systems of communication will
provide directional information and the Nami communication
infrastructure is not designed for this purpose.

There  are  two  general  categories  of  visualization  made
possible by the Nami network.  On the one hand, Nami  is  a
decentralized  network  made  visible.    Quite  literally,  Nami
embodies  the  spirit  of  computer  graphics:  computation  made
visible  in  a  direct  and  effective  manner.    This  is  particularly
critical  to  the  educational  value  of  Nami  because  the  actual
structure  of 
is  radically  different  from  a
simulation  run  by  one  central  processor  such  as  the  desktop
PC.  Although we were not able to conduct a user survey, it
seems  intuitive  that  a  concrete  learning  experience  would  be

the  network 

A house illustrated with a Cartesian system.

The same house illustrated with an amorphous
coordinate system.  Note that the recognizable
image of both illustrations can be created using
Nami, but only with an interface device such as
the Digital Palette (described in the next section).
Such images cannot be achieved using the
infrared communications network due to the
absence of absolute spatial coordinates for the
orbs.

                                                                
3 Coore, Daniel, “Establishing a Coordinate System on an Amorphous Computer,” in: 1998 MIT Student Workshop on High
Performance Computing in Science and Engineering, MIT/LCS/TR-737

23

more  immediately  meaningful  to  a  majority  of  people  than  a
symbolic  one.    Once  you  have  experienced  Nami,  it  is  much
easier  to  make  sense  of  the  complex  details  of  decentralized
networking.    At  the  very  least,  Nami  provides  an  invaluable
access to computation for young children or other people who
cannot comprehend the computer through “input devices” or
symbolic  abstraction. 
terms,  a
decentralized system; that it happens to be visible is an added
bonus  which  requires  no  conceptual  “leap  of  faith”  to
associate  with  the  network.    All  the  more,  missed  messages
and ignored touch signals are a humbling reality of hardware
that contributes a uniquely “real-world” flavor to the viewer’s
experience of an electronic system.

in  concrete 

  Nami 

is, 

From a more abstract approach, Nami provides a platform on
which  content  may  be  visualized.    The  content  suitable  for
Nami may be any behavior that occurs within a decentralized
system, such as the spread of gossip through a crowd, the flow
of  a  chemical  gradient,  a  gas  lattice  structure,  or  the
oscillations  of  particles  in  a  springy  mesh.    These  are
examples in which the entire network is necessary to witness
the  emergent  behavior.    Individual  nodes  carry  identical
software,  but  behave  differently  according  to  user  input  and
their  location  within  the  larger  system.    The  result  of
numerous  nodes  executing  the  same  instructions  in  an
amorphous organization is beautiful: patterns of behavior that
are  unique  to  the  system  and  impossible  to  predict  with
certainty.    Through  minor  modification  of  the  software,  an
entirely new experience will emerge out of the new rule set.
For  example,  if  the  orbs  are  programmed  to  change  color
immediately  upon  receipt  of  an  incoming  message,  the
network will behave much differently than if the orbs change
color very slowly.  In the case of a gradual color change, the
viewer can rearrange the orbs or initiate a new message as the
old  one  propagates,  thereby  creating  a  flood  of  color  in
multiple  directions.    Robert  Poor’s  Tri-state  touch  program
gives every orb three possible states: random color, opposite
color,  or  blue-to-black.    Each  time  an  orb  is  touched,  it  will
change state based on the cycle index and relay a message that
carries this index, a value between 0 - 2.  When another orb
receives  the  message  containing  the  index,  it  will  update  its
state  and  relay  the  message,  but  it  does  not  increment  its
internal cycle index.  An orb must be touched sequentially to
cycle through all of the Tri-touch states.  As a result, all of the
orbs in the network maintain some state in the cycle, but not
necessarily the same state at the same time.  It is up to the user
to  determine  the  current  state  of  an  orb  and  to  use  this
knowledge to initiate the desired effect in the network.

Children playing with Nami at the Tokyo Toy
Fair (1999).  Photograph by Robert Poor.

One orb will relay a color message until the

entire network shares the same hue.

Tri-state touch is one example of a program is adaptable to a
puzzle or game, such as Othello™.  Another application of a
smart network node is character modeling with graphic output
as  an  indication  of  emotional  state.    A  Nami  orb  can  be
programmed  with  preferences,  such  that  it  “wants”  to
communicate  with  some  orbs,  but  not  others.    This  effect  is
achieved  by  maintaining  an 
is

internal  counter 

that 

The Nami version of Othello.

24

incremented by messages that have “good” IDs and decrement
by “bad” ones.  If an orb receives more good messages than
bad ones, it will remain lit with color; but if it does not receive
messages from the desired source, or receives messages from
bad  sources,  it  will  eventually  cease  to  glow  with  colored
light.  A simple set of rules such as these take advantage of
Nami  as  a  living  community,  wherein  members  of  the
community  react  differently  to  each  other.    Suddenly,  the
meaning  of  Nami  changes 
from  a  visualization  of
decentralized  networking  to  an  illustration  of  society  with
social individuals.  By designing a physical form to reflect the
identity  of  unique  characters,  such  as  the  form  of  a  cow  to
enclose a bovine personality, a Nami orb could be transformed
into a doll with colorful emotional state, as suggested by the
conceptual illustration for The Color Farm.

The Color Farm.  Concept for a network in
which farm animals use colored light to
represent variable character and emotional
state.  Each character contains the same
basic hardware, but their software is
designed with unique preferences.  The
different software personalities are
reflected in the different designs of the
physical casings (a pig, chicken and cow
are example characters).  A children’s story
would come with the play environment to
help children relate to color mapping and
preferences of the networked characters,
including friends and enemies, hunger,
sleep and other desires.

25

Digital Palette

The  Digital  Palette  (1999)  is  a  device  for  mixing  colors  of
light  and  recording  temporal  sequences  of  colored  light.
Following the completion of Nami, Kelly Heaton and Steven
Gray  collaborated  to  develop  an  instrument  for  easily  and
intuitively  controlling  the  color  of  an  LED  physical  pixel
without  necessarily  writing  code  or  mapping  color  from  a
monitor.  As described by William  Finzer and Laura  Gould,
this method of “programming by demonstration” is motivated
by a belief that,

[I]t  should  be  possible  to  place  the  control  of  interactive
computer graphics in the hands of … designers, those with an
understanding  of 
the  power  of  such  systems  but  not
necessarily with the ability or willingness to write the complex
programs that are necessary to control the systems.1

Switch toggles
between “paint”
and “mix”
modes

Hidden from view:
The “learning”
button is located
beneath the palette

Knob for shifting
the color of
palette pixels

Indicates the
currently
selected
palette pixel

Palette pixel (LED “pot of
paint” for mixing colors and
creating chromanimation)

                                                                
1 Finzer, William F. and Gould, Laura, “Rehersal World: Programming by Rehersal.”  From:  Cypher, Allen (Editor);
co-edited by Daniel C. Halbert … [et al.].  Watch What I Do: programming by demonstration.  The MIT Press,
Cambridge, MA, 1994.

Anatomy of the Digital Palette

26

Our  answer  to  this  problem  is  a  hand-held,  infrared  remote
control  device  that  contains  five  physical  pixels,  made  of
mixing red, green and blue light-emitting diodes, which can be
used  to  program  the  color  or  color  animation  for  other
physical pixels.  The color of the palette pixels can be adjusted
using a knob that maps to a value on a wheel of 256 discrete
hues.    An  artist  selects  between  the  five  palette  pixels  using
direct  touch,  just  like  a  Nami  orb.    The  quantity  five  was
chosen to give the artist the ability to select and store multiple
colors, analogous to a paint palette.

referred 

(hereafter 

To  create  color  animation 
to  as
chromanimation),  the  Digital  Palette  requires  two  modes  of
operation, “mix” and “paint”, which may be accessed using a
flip  switch.    In  the  paint  mode,  the  color  or  chromanimation
seen in the touch-selected palette pixel is the data that will be
transmitted  to  by  the  Digital  Palette  via  infrared.    The  color
commands encoded in this transmission can be received and
executed by another infrared enabled physical pixel, such as a
Nami orb.  It is possible to change the hue of a palette pixel in
the  paint  mode  by  using  the  knob,  and  the  hue  of  temporal
color sequences may also be shifted.  A palette pixel may only
be  programmed  with  new  chromanimation  when  the  Digital
Palette is in the mix mode.

In  the  mix  mode,  all  of  the  palette  pixels  at  first  appear  as
solid colors.  These colors may be changed with the knob, just
like paint mode, but no data is transmitted to the outside world
while in mix mode.  The purpose of the palette pixels in mix
mode  is  to  provide  a  source  of  color  for  synthesizing  a  new
chromanimation.  To create a chromanimation, the artist first
sets the colors of all the palette pixels to the colors they wish
to use in their sequence.  Next, the artist touches the palette
pixel  they  wish  to  program.    Once  ready  to  create  the
chromanimation, the artist holds down the “learning button,”
located on the handle of the palette, and proceeds to touch up
to five colors in a temporal sequence that the palette records.
When the learning button is released, the recording process is
complete and the palette pixel will begin to animate with the
looping chromanimation, the duration of which is determined
by the total length of time the learning button was activated.
For  example,  if  the  learning  button  is  held  while  red,  green
and  yellow  are  touched  for  one,  three  and  one  seconds
respectively,  the  palette  pixel  will  display:  one  second  red,
three  seconds  green  and  one  second  yellow  with  a  loop
duration  of  five  seconds.    Similarly,  the  delay  between
changing  colors  in  the  chromanimation  is  determined  by  the
rate  at  which  the  colors  were  touch  selected  during  the
recording process.  The Digital Palette is programmed to fade
between selected colors according to the length of the delay,
such that long delays give a gentle transition and short delays
produce a blinking effect.

If the chromanimation is successful, the artist can switch back
to the paint mode and the recently programmed palette pixel
will animate with the new sequence.  All of the other palette

2: Touch the
target physical
pixel to introduce
the new color or
chromanimation.

1: Pick a color or create
a chromanimation.  The
palette will emit this
data via infrared.

How to use the Digital Palette.  Note that
the introduction of color into another
physical pixel requires direct selection of
the object.

27

 

If 

the  artist 

pixels  will  return  to  their  previous  paint-mode  color  or
chromanimation. 
is  unsatisfied  with  a
chromanimation, they can remain in mix mode and reprogram
a new sequence, or else chose a static color and return it to the
selected palette pixel in paint mode.  Whatever information is
contained in the touch selected palette pixel in mix mode will
be  returned  with  the  pixel  when  the  artist  switches  back  to
paint mode.

The Digital Palette aspires to be a simple device for assigning
color or creating color animation for a physical pixel.  In its
current  form,  the  Palette  cannot  be  used  to  design  animation
that changes across multiple pixels or responds to rules, such
as  an  interactive  graphics  algorithm.    Instead,  it  acts  like  a
source of electronic paint that is applicable one physical pixel
at a time.  For example, if an artist chooses the color red with
the Palette, they must then touch a physical pixel to apply that
color  to  the  object.    The  artist  may  continue  to  touch  other
physical pixels and color them red as well, or they may select
a  different  color.    The  important  link  between  the  Digital
Palette  and  a  physical  pixel  is  touch;  although  the  data  is
transmitted from the Palette continuously, a physical pixel will
only  respond  to  the  information  if  it  is  touched.    This
preserves the direct physical relationship that Hiroshi Ishii (et
al.) calls a “tangible user interface.”2  There are no command
lines or text menus associated with the Digital Palette, only the
direct response to color that is familiar to an artist from prior
media.

Our  use  of  the  painterly  metaphor  was  intended  to  ease  the
artist into use of an unfamiliar device, although the additional
function of animation may or may not be intelligible from our
current  design,  particularly  in  the  context  of  a  painter’s
palette.3  The Digital Palette’s association with painting also
threatens to impede a novel interpretation of the physical pixel
as  a  tool  or  display,  given  that  a  computer  and  painting  are
completely  different  media.    On  one  hand,  the  mixing  and
direct  application  of  colors  to  a  physical  pixel  seems
analogous  to  painting  with  real  pigment;  but  unlike  physical
paint, colored light is not permanent and not necessarily static.
The five physical pixels of the Digital Palette can become any
color or chromanimation.  Anecdotal experience indicated that
these  properties  could  be  confusing  in  the  context  of  a
painter’s  palette,  especially  without  text  labels  or  other
instructions on the tool itself.  Nevertheless, there is something
fundamental  about  the  artistic  experience  of  mixing  and
applying  color  to  objects.    Continued  work  with  physical
pixels  will  hopefully  reveal  what  aspects  of  the  painterly
experience are relevant and which are mere metaphors.

The Digital Palette with Nami

                                                                
2 Ishii, H. and Ullmer, B, “Tangible Bits: Towards Seamless Interfaces Between People, Bits and Atoms,” in: Proc. of
CHI97, pp. 234-241.
3 This observation is based on conversation with numerous visitors to the MIT Media Laboratory, notably Rachael
Strickland and Bill Verplank.

28

Peano

Peano  is  a  building  set  comprised  of  one-inch  cubes  that
connect  to  form  a  modular,  full-color  display  in  three-
dimensions.    The  original  inspiration  for  Peano  was  a  smart
molecule kit: a set of elements common to organic chemistry
that could be used to model and explore molecular structure.
With colored light as a visual indicator, the modeling system
was intended to provide feedback regarding formal charge or
other  properties  of  interest  to  the  student  of  chemistry.    A
chemistry  set  designed  as  a  system  of  physical  pixels  could
represent the electron distribution across the molecular model
as  a  continuous,  time-varying  effect  that  responds  to  the
addition  or  subtraction  of  atoms  in  real-time.    Simulations
exist  for  display  on  a  computer  monitor,  but  not  as  an
animated physical model.

Although  technically  feasible,  the  search  for  appropriate
connectors proved discouraging.  A fruitless quest for small,
reasonably  priced,  yet  durable  connectors  with  four  or  more
electrical conductors and radial symmetry motivated an effort
to build the simplest possible geometry with a modular, three-
dimensional structure.1    Further,  the  use  of  many  connectors
per  physical  pixel  threatened  to  obscure  the  desired  visual
effect. 
the  number  of
the  molecule  concept,  wherein
connections  eliminated 
numerous  bonds  per  element  would  be  required  for  accurate
modeling.

the  decision 

  Thus, 

to  restrict 

“Electrostatic Surface of Aspirin,” by Roger Sayle with
RasMol (Glaxo Welcome, 1995).
From: http://www.umass.edu/microbio/rasmol/
sayle3.htm.

Several others [Frazer  1978,  1990],  [Anagnostou  et  al  1989],
[Borovoy, Kramer 1997], [Kramer, Minar  1997],  [Gorbet et al
1998],  [Anderson  1999],  [McNerney,  1999]  have  developed
computational building kits, some of which reveal simple and
clever  solutions  to  the  problem  of  network  connectivity.
Frazer’s  Universal  Constructor  (1990)  and  Kramer  and
Minar’s  Stackables  (1997)  are  the  closest  precedents,  each
with  only  two  connectors  per  element  and  full  knowledge  of
network status and structure.  However, neither provides full-
spectrum  color  animation  and  both  systems  are  limited  to
stacking  objects  in  one  direction  only.    Frustrated  by  the
“mathy” feel of most computational building systems, not to
mention  the  flat  interface  of  graphics  on  a  monitor,  I
endeavored  to  create  an  organic,  sculptural  material  for
interactive computer animation.2

I soon discovered that organic forms are not easily translated
into  the  inflexible  structure  of  computer  electronics.    Basic
requirements,  such  as  power  and  data  communications,
continually  precipitated  engineering  solutions  that  were  too

Early stages in the Peano design process.

                                                                
1 For the molecule application, I considered the use of potentiometers at each connection.  A variable change in resistance could
be used to calculate basic information about molecular structure, such as “cis” and “trans” conformations.  For more information
on connectors, please refer to the “The Design of a Modular Display System” in the Appendix.
2 At first, I struggled to design an actuated sculptural system.  After investigating pneumatics, hydraulics, heat-actuated gels and
shape memory alloys, I decided that such a system is best accomplished with a biological model – an avenue for future research.

29

big, too rigid, too impractical or otherwise impossible.3    The
physical design challenge persisted through several iterations
until  a  satisfactory  solution  was  finally  achieved.    The
successful geometry was inspired by a string of beads, coiled
in  a  stack  to  create  a  three-dimensional  form  with  one-
dimensional  network  structure.    This  realization  led  to  the
notion of a close-packing curve, or Peano Curve, named after
the Italian Mathematician  Giuseppe  Peano  (1858-1932).    In
honor of  Giuseppe, “Peano” was chosen as the name for our
system.    A  Peano  Curve,  sometimes  referred  to  as  a  Hilbert
Curve,  is  a  linear  structure  that  turns  at  90-degree  angles  to
define  a  three-dimensional  space  with  Cartesian  coordinates.
The  usefulness  of  the  Peano  geometry  derives  from  the
simplicity  it  affords  a  modular  network.    Because  the  Peano
topology is linear, a  one,  two  or  three-dimensional  geometry
may  be  built  from  a  set  of  elements  that  have  only  two
connectors each.  Due  to  the  strict  rules  of  the  Peano  shape
grammar, a central processor can easily infer the structure of
the  display.    Like  Frazer’s  Universal  Constructor,  Peano’s
network  is  one  dimensional,  but  the  building  elements  can
rotate in space to define a complex geometry.

Despite  the  numerous  advantages  of  the  Peano  design,  it  is
undeniably  “mathy.”    To  compensate  for  this  character,  I
focused  on  development  of  smooth  color  animation  for  the
rigid structure.  Where the physical form of Peano is cubic and
strictly  rule-based,  the  computer  animation  of  colored  light
can  be  programmed  to  give  an  organic  illusion.    The  gentle
animation of color in Nami, as well as Golan  Levin’s drawing
program Aurora (1999), provided valuable inspiration for the
interactive  animation  I  sought  to  achieve  in  Peano.    In
particular,  Levin’s screen-based  Aurora  invites  the  interactor
to draw with a haze of multiple colors that blend with a soft
and  mutable  quality.    Peano  is  similarly  designed  to  permit
direct and programmatic control over the animation of colored
light in sculpture, albeit formally rigid in the present design.

System Overview

In the fall of 1999, Kelly Heaton, Steven Grey, Paul  Pham and
Alex Jacobs began work on Peano as described above.  Peano
is  a  three-dimensional,  modular  display  system  comprised  of
128 or fewer one-inch cubes made from a colorless, diffusive
plastic  material. 
  In  the  center  of  every  Peano  cube
(abbreviated  hereafter  as  “cube”) 
is  a  single,
multicolored  LED  that  illuminates  the  entire  volume  to
produce a full-spectrum of colored light.  Each cube  contains
six  major  subsystems:  connectors,  light  generation,  control
processor,  touch  sensing,  data  communications  and  power
regulation.    These  systems  are  described  in  the  following
sections.

there 

The successful Peano design (1999).

The Peano Curve.  Image source:
http://www.math.ohio-state.edu/~fiedorow/
math655/Peano.html

Golan Levin’s  Aurora  (1999), an organic compliment

to the rigid structure of the Peano Curve.

                                                                
3 These design constraints are discussed in greater detail in “The Design of a Modular Display System” in the Appendix.

30

Connectivity

Every  Peano  cube  has  two  connectors,  one  male  and  one
female, that occupy two of the six faces. The male and female
connectors  are  positioned  on  the  cube  in  one  of  two  ways,
forming two different shape grammars: linear and orthogonal.
A  linear  configuration  has  connectors  that  are  positioned  on
opposite  sides  of  the  cube;  and  an  orthogonal  configuration
has  connectors  that  are  positioned  on  adjacent  sides  of  the
cube. The connectors are designed such that the cubes can join
together in one of four orientations, enabling the construction
of  a  linear  geometry  with  three-dimensional  topology.    The
male connector has a total of eight pins: six of the eight pins
form  the  electrical  continuity  for  the  network,  including  two
each for power, ground and data; and the remaining two pins
are  used  for  peer-to-peer  communications,  rotation  and  bus-
ready.  The rotation pin is keyed to pull one female pad of the
downstream cube to ground, insuring that every cube knows
the rotation of its upstream neighbor.  The bus-ready pin is a
flag used by a cube to signal an upstream neighbor to place
data on the bus.  This way, data returns to the CPU in linear
sequence and the network topology can be inferred.

Light Generation

In the center of a Peano cube is a single multicolored LED that
illuminates the entire volume.  The inside cavity of the clear
acrylic  cube  is  frosted  to  evenly  diffuse  the  light  across  the
surface.4  Since light is not visible through the two sides with
connectors, these interior surfaces are coated with a flat white
paint  to  reflect  light  out  of  the  cube.    The  LED  of  the
orthogonal  cube  is  purposefully  bent  at  a  right  angle  to  face
into  the  painted  circuit  boards,  such  that  the  light  will  be
reflected evenly.5  Like Nami, the red, green and blue channels
are  controlled  by  Pulse  Width  Modulation  (PWM).    The
controlling  processor  uses  the  same  look-up  table  used  by  a
Nami orb for gamma correction.

Control Processor

Each  Peano  cube  contains  a  PIC16F876  flash  memory
microcontroller that handles all of the internal processing. The
function  of  the  microprocessor  is  to  perform  all  of  the  local
operations that could not be accomplished by the master CPU
for  a  modular  network  of  physical  pixels.    It  monitors  touch
sensing, receives and transmits data on the bus, handles light
generation,  detects  rotation  and 
initiates  upstream  data
transfer. 
  The  microprocessor  is  a  slave  to  the  CPU,
controlling  the  bus  only  when  queried.  If  the  bus  is  idle  for
more than 100 ms, control will revert to the CPU to prevent
deadlock in the event that a user disconnects a cube that was
controlling  the  bus.    Since  the  controlling  processor  is

The two member shape grammar of Peano.

The male and female connectors of a Peano cube.
The smaller pins / pads in the middle are electric
conductors.  The larger circles in the outer
corners represent the mechanical connectors (the
female connector has magnets and the male has
ferrous slats).  Note that the male pins will
connect to the female pads in four orientations,
and power and ground are given two pins each to
support a higher current rating for the system.
Illustration by Alex Jacobs.

Peano builds a three-dimensional structure with
linear network geometry.

                                                                
4 Light diffusion is a tricky art.  For more on this topic, please refer to “The Design of a Modular Display” in the Appendix.
5 This happens naturally in the linear cubes; but were the LED of the orthogonal cubes not bent, the majority of light would travel
out of one of the translucent faces.

31

electronically  erasable,  a  Peano  cube  may  be  easily
reprogrammed 
to
prototype new behaviors for the cube.

(in-circuit)  with  different 

firmware 

Touch Sensing

Touch events are detected using the same RC circuit as Nami.
A  thin  wire  surrounding  the  edge  of  the  male  and  female
connectors  of  each  block  forms  the  capacitor  for  the  circuit.
The  wire  is  slightly  recessed  to  avoid  erroneous  touch-
selection, but easily accessible from every side of the cube.6

Data Communications

Communication  between  the  host  CPU  and  up  to  128  Peano
cubes  occurs  over  an  RS485  bus  operating  at  57,600bps.
There are 3 commands recognized by a cube: get, set and sync.
The get command is used to retrieve a cube's unique ID, type
(linear or orthogonal), touch status and neighbor rotation.  The
set command designates the new color value for a cube, but is
not executed until the  sync command is received.  The  sync
command  avoids  the  ripple  effect  of  asynchronous  color
change in the display network.  The networked cubes can be
addressed in three different ways: individually, in a specified
range, or all cubes following a specified node in the network.
As  mentioned  previously,  a  cube  will  put  data  onto  the  bus
only  when  commanded  by  the  CPU  and  flagged  by  its
downstream  neighbor. 
the
topological information for the network is correct.

  This  protocol 

insures 

that 

Power Regulation

Power and ground lines for the Peano network are rated for 12
Volts and 6 Amps, or the maximum power required by a 128
physical  pixel  network  at  full  brightness  (white).    For  safety
reasons, the system is designed so that only an exposed female
connector can be “live.”  Internal to each block is a regulator
that  supplies  5  Volts  to  the  circuit.    The  circuit  is  also
protected against grounding due to wrong connections.

Control of the Peano Network

The central processor for our Peano network is a  Pentium  III
600 MHz processor that is connected to the first cube of the
display by an RS232 serial cable.  A custom Java application
was  developed  by  Paul  Pham  to  manage  two  major  tasks:
operate the Peano display and provide a software interface to
the system.

Nine Peano cubes arranged in two of many
possible combinations of geometry and color.

                                                                
6 I intended to coat the exterior of the Peano cubes with Indium Tin Oxide (ITO), but the expense proved prohibitive for a
prototype.  For the record, I am told by manufacturers that it is possible to use ion-assisted deposition to apply a thin (several
micron) film of this conductive material to a volume of plastic.  Such material exists in flat sheets, as used for Nami and some
touch sensitive screens.  I am not aware of a commercial product with ITO on the surface of a volume, despite the usefulness of
touch detection in many consumer applications.

32

Display Operation

While  the  display  is  operational,  the  CPU  must  update  the
color information for every cube at a rate of 15 Hz and query
the network status at a rate of 3 Hz.  A network query returns
the  following  information  for  each  cube:  unique  ID,  linear
order,  type,  rotation  and  touch  status. 
  The  Cartesian
coordinates of the display are calculated from the linear order,
type  and  rotational  information  for  all  of  the  cubes  in  a
network.    If  necessary,  the  CPU  will  calculate  and  transmit
new color values to the display followed by a sync command.

Software Interface 7

Information about the physical system is accessible to the user
through  a  custom  software  application  that  is  viewable  on  a
computer  monitor. 
  The  program  has  two  options  for
controlling the display network: a graphical user interface and
an interpreted language environment.  Both of these programs
take  input  from  the  Peano  cubes,  such  as  touch  and
reconfiguration,  as  well  as  traditional  desktop  input  devices,
such as the mouse and keyboard.  The graphical user interface
consists of a 3D simulation of the Peano geometry, and several
controls:  render  and  view  options  for  the  simulation,  a  color

Annotated illustration of the Peano
software interface.  Design by Paul Pham
and Kelly Heaton (1999 – 2000).

Concept for a Peano sculpture.

 Illustration Alex Jacobs.

                                                                
7 For more information on the Peano Software Interface, including the Peano API, please refer to:
http://www.media.mit.edu/~kelly/physPix/peano.htm

33

manipulation  program,  and  information  access  to  the  cubes.
The simulation was created to illustrate the display geometry
and  state,  thereby  aiding  in  the  development  of  control
algorithms  for  software  applications,  as  well  as  providing  a
screen  interface  to  coloring  the  cubes.    ColorAnime  is  a
gesture-based drawing tool that was developed as part of the
software interface to facilitate color animation of the cubes.8

ColorAnime  consists  of  a  color  palette,  which  can  be  any
digital image represented on the screen, and an internal record
of  gesture  sequences  made  within  the  digital  image  palette.
The duration of a gesture, made by mouse movement or other
drawing instrument for the PC, defines a temporal sequence of
color  that  is  looped  to  form  a  chromatic  animation,  or
chromanimation.    The  chromanimation  is  applicable  to  a
single cube, which will then loop through the color sequence
indefinitely,  or  it  can  be  used  like  a  brush  across  multiple
cubes.    When  “painting”  more  than  one  cube,  the  user
designates  a  pathway  across  blocks  in  the  display  and  then
applies the color sequence to this pathway.  The pathway for
the  brush  may  be  indicated  using  the  screen  interface,  or  by
touching a sequence of cubes in the physical system.  In both
cases, the width of the brush must be selected using the screen
interface.    The  color  animation  is  then  antialiased  along  the
pathway 
to
antialiased graphics for the video monitor9.

to  provide  a  smooth  aesthetic,  analogous 

The  Peano  interpreted  language  environment,  a  specialized
subset of Java developed by Paul Pham, was inspired by John
Maeda’s  Design  By  Numbers.    The  language  is  intended  to
provide a familiar access to a unique display of computation,
such  that  software  applications  could  be  developed  with
relative  ease  as  compared 
requires
reprogramming  every  node.    Our  objectives  were  twofold:
visualize  Cartesian  mathematics 
three-dimensional,
modular display; and prototype software behaviors that could
later become embedded in the cubes themselves.  The eventual

to  Nami,  which 

in  a 

The ColorAnime method of sampling gesture
across an image to form a temporal sequence of
color, or chromanimation.

Using ColorAnime, a gesture drawn
through any digital image (example
HSB space shown in center) translates
to color across the Peano cubes.  The
colors will animate sequentially at a
rate determined by the speed of the
gesture.  Illustration by Paul Pham.

                                                                
8 ColorAnime was developed by Kelly Heaton, Scott Snibbe and Paul Pham (1999-2000).
9 The antialiasing algorithm was adapted by Paul Pham from the Gupta-Sproull method, described in: Foley, James D. [et al.]
Computer Graphics: principles and practice (Second Edition in C). Addision-Wesley Publishing Company, Inc., Reading, MA,
1997.

34

goal for Peano is a  free-standing system without the use of a
screen  interface,  which  although  familiar,  distracts  from  the
insights of a new display format.

Visualizing the Peano Network

Like  the  computer  monitor,  Peano  is  a  Cartesian  system
controlled by one processor to make a colored-light display of
computation.  The similarities stop here.  Whereas the video
display is a fixed image plane, Peano is a flexible quantity of
modular  pixels  that  connect  to  form  a  network  with  an
exponential  variety  of  spatial  configurations.    The  individual
elements  participate  in  a  common  network  controlled  by  a
central processor, but each physical pixel is programmable to
function  semi-autonomously.    We  take  advantage  of  the
microprocessor  in  each  cube  to  generate  full-spectrum  light,
detect  touch,  respond  to  a  unique  ID,  and  return  information
regarding  the  display  geometry. 
  Although  the  overall
behavior for the network is centralized, our control algorithms
are subject to feedback from the physical structure, including
quantity of pixels, linear sequence and orientation.

The monitor limits the observer to a
single viewing angle.

Many  of  these  parameters  are  normally  associated  with
puzzles,  such  as  a  Rubik’s  Cube™.    Peano  shares  certain
characteristics with spatial toys, but it can be augmented with
software  behavior  to  unite  physical  and  virtual  play  into  a
single  device.    Imagine,  for  example,  if  Tetris™  were
modified to function in a modular, three-dimensional space, or
Simon™ could be rearranged into shapes other than a colorful
pie.  Computer animation in Peano can be designed to react to
modifications in the physical structure.  Peano may be used to
teach 
relationships,  quantity,
sequencing  and  other  properties  learned  through  visual
mathematics.  Whereas painted blocks have been used to teach
introduces  concrete
construction 
relationships  combined  with 
logic  and  ephemeral
abstraction of computation.

spatial  geometry,  color 

for  centuries,  Peano 

the 

Whether  perceived  as  a  toy  or  an  art  form,  Peano  is  a
sculptural medium designed for creative exploration.  Physical
structures  can  be  built  by  hand  and  then  “painted”  with
colored  light  using  a  tool  such  as  ColorAnime  or  the  Digital
Palette.  Colored light may remain static and specific to each
cube,  or  the  artist  can  write  software  for  dynamic  graphics.
For  example,  an  antialiased  sphere  of 
light  can  be
programmed to move slowly about the structure in response to
touch.  Skillful animation suggests an organic form internal to,
or  passing  through,  the  rigid  physical  geometry  of  Peano.
Visual  effects,  made  by  possible  by  software  control  of  the
LEDs, are analogous to the illusion of computer animation on
a monitor (the graphics are rich and deep, whereas the screen
is rigid and flat). Peano adds several degrees of freedom to the
physical interface, including modularity, direct touch response
and 
tactile
engagement and direct feedback from a physical object draw
the artist into an intimate relationship with the display system.

three  spatial  dimensions. 

  Like  Nami, 

the 

Peano can be enjoyed from any point of view.

35

This relationship is further enhanced by the absence of a strict
point of view onto the visual experience.  A sculptural system
for  computer  animation,  Peano  can  be  rotated  in  real  space,
placed in context of other objects and generally appreciated as
part of our physical environment.

36

20/20 Refurbished

20/20  Refurbished  is  a  proposed  art  installation,  designed  to
incorporate the observer into a narcissistic relationship with a
reactive composition.  The piece is not intended to reflect the
viewer according to straightforward expectations, like a literal
mirror or real-time video image.  More than a simple digital
mirror, the pixels of 20/20 Refurbished will look and talk back
to  create  a  circular  dialogue  between  the  observer  and  the
observed.  The resolution of pixels is sufficient that a viewer
who  approaches  the  piece  will  witness  the  impact  of  their
presence  and  become  drawn  into  a  mutable  composition  of
sight and sound.  If the artwork is left undisturbed, the pixels
will close their eyes and say nothing, save for the occasional
trigger by doppelgänger.

The  physical  pixels  of  20/20  Refurbished  are  made  from  the
1999  Limited  Edition  Christmas  Furby™,  modified  to  reveal
only  the  eyes  and  mouth  in  a  softened  triangular  shape.
Through the phenomenon R. L. Rutksy describes as “the birth
or coming to life of the machine,” a pixel made of Furby™ is
“infused  with  a  living  spirit,  with  a  soul;  it  is  a  “dead”
technological  object  reanimated,  given  the  status  of  an
autonomous  subject.”1 
  Usually  perceived  as  a  “fuzzy,
computerized,  mechanized  doll  that  talks,  blinks,  sleeps  and
asks  to  be  fed,”  Furby™  is  part  of  a  new  generation  of
consumer products that blur the distinction between real and
artificial life.2  Unlike the dolls of yesteryear, enlivened only
by  a  child’s 
is  animated  by  a
programmatic personality, inviting a curious dialogue between
a real and simulated being.  These toys, designed to substitute
biological Fido  with  a  battery-operated  pet,  are  a  fascinating
but  disturbing  step  towards  the  widespread  acceptance  of
artificial  life.3    As  part  of  20/20  Refurbished,  the  cultural
implications of a disembodied Furby™ contribute a complex
psychology to the pixels that spans the superficially playful to
the profoundly perverse.

imagination,  Furby™ 

Each pixel will be actuated by a motor to achieve two visible
states, open or closed.  The pixels will be augmented with a
PIC16F876 microcontroller that prompts the Furby™ to speak
in response to viewer proximity, as determined by an infrared
detection  system.    Although  the  Furby™  pixels  retain  their
original logic, the added microcontroller  will  be  programmed
to control their behavior in an unorthodox manner.  Whereas
Furby™  normally  has  sensors 
to  “real”
interaction  by  a  human  or  another  Furby™,  such  as  tummy
tickling, back rubbing and infrared communication, the added
microprocessor  will  cause  the  Furby™  pixel  “think”  these

that  respond 

The two visible states of the Furby™ pixel

When no observer is detected, a Furby™ pixel will
close its eyes and remain quietly watching with an
infrared detector (shown here as black dots).

When an observer is detected, a Furby™ pixel will
open its eyes and begin speaking.

                                                                
1 Rutsky , R. L.  High Techn(cid:31): art and technology from the machine aesthetic to the posthuman.  University of Minnesota Press,
Minneapolis, MN, 1999.  Page 24.
2 Boston Globe (February 24, 1999)
3 Sherry Turkle’s research with children and Furby™ substantiates this claim.  From: Turkle, Sherry.  The Second Self:
computers and the human spirit.  Simon and Schuster, New York NY, 1984.

37

inputs  are  occurring  even  though  the  inputs  to  the  pixel  are
fully simulated, or “virtual.”  All of the normal sensors of the
Furby™  will  be  disconnected  and  replaced  by  our  custom
software.

When  the  infrared  emitted  by  each  pixel  is  bounced  off  the
presence  of  a  viewer,  an  invisible  relationship  will  be  made
manifest through the response of the artwork. Four hundred of
these identical pixels will be arranged in a loose interpretation
of the Cartesian grid, suggesting an organic departure from the
pixelated  rationalism  that  is  characteristic  of  most  computer
graphics.  An observer located within sensing range of 20/20
Refurbished  will  experience  hundreds  of  disembodied
creatures looking and talking back at them in the form of their
silhouette.    The  observer  is  thereby  reproduced  in  Furby™,
itself a unit of reproducible identity.

Like a mirror, 20/20 Refurbished requires an observer to make
the surface come to life.  Like a work of art, the ownership of
the  reflected  identity  will  be  ambiguous.    The  disembodied
creatures  need  the  presence  of  a  body  to  come  to  life.    The
observer  needs  the  disembodied  creatures  to  visualize  their
digital semblance.  The observer’s act of observing the art is
narcissistic  by  default  of  their  reflection  in  the  composition,
yet the art needs the viewer to be complete.  Does the audience
make the art; is the art making the audience; or is the art the
audience?

The  observer  will  be  invited  to  participate  in  these  multiple
layers of meaning made by pixels that are artificially sentient
and full of personality.

Diagram of the Furby™ pixel showing the
infrared emitter, receiver and the speaker (hidden
from view behind the front panel of the display).

The 1999 Limited Edition Christmas Furby™ prior to
refurbishing.  Already, the toy is a unit of mechanical

reproduction and pop culture iconography, qualities that we

encapsulate in the form of a pixel for viewer reflection.

Each pixel uses an infrared detection circuit to
probe for an observer in front on the display.

38

Discussion

 
The physical pixel is a synthesis of old and new forms of art.
Once limited to an artifact of material manipulation, the mark
of  an  artist  is  now  defined  by  a  relationship  between  atoms
and bits.  Like the signature stroke of a painter, the physicality
of a pixel can still express a unique style; only now, that style
is augmented by information design.  This is a property of the
physical  pixel  that  I  came  to  understand  gradually,  learning
along  the  route  to  a  body  of  work  for  which  the  design
decisions were not always well defined.

One  of  our  objectives  for  Nami  was  to  create  a  playful
interface  to  a  decentralized  network.    Since  no  additional
meaning was assigned to the orbs at the onset of the project,
the physical form was made to be general and abstract.  The
style  was  guided  more  according  to  the  efficacy  of  user
interface  than  an  artistic  vision  for  a  new  sculptural  media. 1
The  Peano  cube  is  similarly  abstract  because  we  wanted  a
medium from which other art could be made, like a sculptural
version of the pixels of a video monitor.  Had we developed
the  molecule  kit,  the  meaning  of  the  physical  pixels  would
have  been  specific  to  chemistry;  and  consequently,  much
different than the general Peano cube.

The decision to create abstract physical forms for these pixels
enabled us to think of them in many different ways, and also
to focus on a variety of graphical behaviors.  But I discovered
that general platforms are not especially useful for art unless
the platform is useable as a creative medium.  To be useable, a
medium needs to be malleable.  If everything made from the
medium looks like a rearranged version of the medium, then it
is not particularly useable.  This may be the greatest failure of
Nami  and  Peano:  neither  system  can  be  made  to  look  like
anything other than itself, and yet they are both designed for
general use.2  There is no clear meaning behind these systems
of  physical  pixels,  yet  software  content  cannot  “reinvent”
them  with  the  level  of  sophistication  which  video  pixels  can
be graphically reinvented.

In contrast, a Furby™ pixel has a character with unalienable
content.    Although  people  will  perceive  the  meaning  of  a
Furby™  pixel  in  different  ways,  it  is  definitely  a  unit  of
content  as  much  or  more  than  it  is  a  unit  of  pictorial
representation.  The meaning of a Furby™, both as a toy and

The physical design of Nami (above, orbs
shown on a prototype recharging station)
and Peano (below).  Both forms were
purposefully designed to be abstract.

Contrast the abstract form of Nami and
Peano with the highly content-driven

design of the Furby™ pixel.

                                                                
1 Only in hindsight did I come to perceive Nami as a physical pixel; and now, I would approach the system with a much
clearer view of the relationship between physical form and software behaviors.
2 I am speaking specifically about their usefulness as an artistic medium.  I do think both systems have clear value for
education and toys, independent of their artistic value.  Nami has been an excellent tool for demonstrating decentralized
networking, but we have not developed any particularly successful games or sculptural applications to date.  This is
partly a consequence of time, partly the difficulty of reprogramming the nodes, and partly my own uncertainty about
the expressive potential of Nami as a sculptural and graphical medium.  Peano was completed so close to the deadline
of this thesis document that I have not had sufficient time to develop applications; and cannot, therefore, assess with
certainty the usefulness of the display.

39

as  a  pixel,  has  been  specifically  designed  and  is  in  no  way
intended as a general platform.

A Conceptual Framework for the
Design of Physical Pixel Media

  20/20  Refurbished 

I believe that both approaches to the physical pixel are useful
and necessary in the quest for new art.  20/20 Refurbished is
likely to have a more immediate impact; but it will not offer
insight  into  computational  media  that  would  be  useable  by  a
general  audience. 
intended  as
commentary  on  the  contemporary  reflection,  made  by  a
combination of software, sculpture and pop culture.  As such,
the  physical  and  software  design  of  the  Furby™  pixels  is
specific  to  the  installation,  much  in  the  same  way  that
compositional  elements  of  a  painting  are  essential  to  that
context, but nowhere else.  A kit for the construction of smart
molecules would be similarly limited to a specific application,
albeit scientific visualization instead of artistic commentary.

is 

Unlike  20/20  Refurbished,  Nami  and  Peano  are  systems  of
physical  pixels  that  strive  to  be  more  generally  useful  for
creating sculptural computer graphics.  Due to the significant
challenges  to  engineering  a  new  display  technology,  a  truly
universal  platform  for  sculptural  computation  will  require
more  time  and  effort.    Keeping  the  big  picture  in  mind,  any
incremental steps are valuable as a learning experience.

There are two primary classes of
physical pixel: specific (Furby™ pixel,
Digital Palette) and general (Peano,
Nami).  Specific pixels have a clear and
singular purpose, in this case described
as the content of a work of art.  The
general pixel is a medium with which
art can be made.  The general pixel has
no intrinsic content because it serves to
represent a diversity of content. The
video pixel is currently the most widely
appreciated form of general physical
pixel. The specific pixel is a
contemporary form of the artistic mark,
encapsulating a unique style of physical
and digital expression.

The two sides of the diagram reveal the
principle differences in the design
process (hierarchy reads from top to
bottom, ending with the unit of
representation).

40

The lessons of Nami and Peano are several.  Most importantly,
a  general-purpose  creative  medium  needs  to  be  either  high
resolution or highly malleable.  For example, LEGO™ bricks
are not malleable whatsoever, but if you have enough of them
you  can  build  something  interesting.    By  contrast,  a  single
piece  of  rope  is  only  one  object,  but  it  can  be  twisted  and
looped to form many interesting knots.  A pixel is much more
like a LEGO™ brick than a rope, given that it participates in a
system  of  discrete  units  (whereas  the  rope  might  describe  a
vector display).  This comparison seems to indicate that many
physical  pixel  elements  are  the  key  to  the  success  of  a
sculptural system for computer graphics.  It is not to suggest
that  a  physical  pixel  couldn’t  deform  shape;  but  suffice  it  to
say that a high resolution of elements appears to be the magic
ingredient of pixelated media.

In our prototyping mode of operation, we were never able to
build more than fifty objects for either network.  The effort to
construct  many  pixels  is  a  deterrent  to  high-resolution
systems,  absent  a  clever  technique  for  mechanizing  the
manufacturing  process.    And  not  only  mechanization  of  the
physical construction, but also the electrical infrastructure and
power distribution for all of the discrete elements.

The Digital Palette differs from the other three projects in that
it  is  an  instrument  for  working  with  other  types  of  physical
pixels.  In a sense, the Palette is a tool that needs a medium.  It
can  be  used  at  the  present  time  to  change  the  color  or
chromanimation  of  a  Peano  cube  or  Nami  orb;  yet  it  seems
that  the  Palette  can  and  will  be  more  interesting  as  future
systems of physical pixels are developed.  Likewise, the extent
to which it remains a “palette” may become less emphasized,
as  the  relevance  of  our  painterly  metaphor  is  replaced  by  a
better understanding of a new medium.

is 

important. 

There  are  two  major  reasons  why  future  work  with  physical
pixels 
  First,  alternate  visualizations  of
computation,  particularly  those  that  explore  other  spatial
dimensions,  are  critical  to  learning  about  the  computer  as  a
medium.    Whether  it  is  science  or  art  that  drives  the
innovation,  the  end  result  benefits  the  community  at  large.
The second reason concerns the importance of individuality in
artistic expression.  There is nothing inherently wrong about
working with a prefabricated display device to make art; but to
the extent that an artist avoids the development of new media
in favor of pre-existing ones, opportunities for novel visions of
computation are compromised.  Despite low-resolution results,
difficult engineering and the high risk of failure, the  effort  to
achieve new insights into computation is deeply meaningful in
its own right.  Often, it is through the toughest struggle that a
truly unique art will emerge.

41

Conclusion

The  physical  pixels  presented  in  this  thesis  are  but  a  few
examples  of  computation  made  visible.    Both  the  material
form and the computer infrastructure determine our perception
of  a  pixel,  suggesting  that  there  exists  at  least  as  many
variations  on  the  physical  pixel  as  there  are  materials  and
computers  combined.    It  is  not  useful  to  speculate  on  every
possible  appearance,  but  instead  to  open  our  minds  to  the
possibility  of  different  manifestations  insofar  as  these  new
forms  will  change  the  way  we  perceive  the  computer  as  an
expressive  medium.  Variations  on  the  physical  pixel  may
enhance 
the  display,  make  social
commentary, provide tangibility, or lend a signature aesthetic
to  a  work  of  art.  Imagination  and  ingenuity  can  conceive  of
many instances of the pixel beyond this body of research.

the  modularity  of 

To  be  sure,  there  are  plenty  of  cases  wherein  the  video
monitor  is  the  ideal  medium  for  illustrating  pixel  graphics.
Likewise, there are visualizations that cannot be revealed with
the  pixel  data  structure  whatsoever.    Just  as  the  decisions
regarding a physical pixel deserve careful consideration, other
choices  should  be  thoughtfully  addressed  by  any  artist  who
uses  the  computer  as  their  medium.    Constraint  is  often  the
mother  of  invention,  but  perceived  limitations  must  not  be
taken  for  granted.    Both  the  pixel  (data  structure)  and  the
physical  pixel  (visible  form)  are  critical  factors  in  our
understanding  of  art  made  with  the  computer.    Our  choices
make the art.

When choosing to work with any form of physical pixel, the
meaning  associated  with  the  invisible  pixel  is  inextricable
from our perception.  There are various cultural and historical
factors  that  contribute  to  the  meaning  of  the  pixel,  including
Cartesian  rationalism,  scientific  deconstruction  and  a  history
of optical analysis in the visual arts.  Any work with physical
pixels, of any material form, engages in a dialogue with this
conceptual  and  perceptual  foundation.    For  example,  the
gentle flow of colored light within Nami or Peano is an effort
to  counterbalance  the  physical  fragmentation  inherent  to  a
pixelated display system.  Such fragmentation is fundamental
to  the  pixel  and  therefore  any  art  made  visible  by  physical
pixels.    Discrete  representation  is  not  only  aesthetically
distinctive, but suggests a philosophy of perception.

The  look  of  computation  is  open  for  artistic  interpretation.
Like poetic thought, pixels and other data structures have no
concrete  appearance.    The  computer  provides  a  unique
opportunity  to  reveal  invisible  layers  of  meaning  in  multiple
dimensions and with a rich variety of physical media.

Poetry made visible by William Blake in
Fiery Pegasus, 1809.  Pen, ink and watercolor,
approximately 9 x 6.5 inches.
The British Museum, London.

42

43

Appendix: The Design of a Modular Display System

The design of a modular display is an exercise in constraint.  As with any system, a change in one design
parameter affects all others, such that a resultant system is the product of compromise.  Nami, Peano and
20/20  Refurbished  are  all  characterized  by  design  decisions  that  contribute  to  certain  capabilities,  but
eliminate others. The purpose of this appendix is to generalize, insofar as possible, the recurring challenges
to our development process.

Design Concept

A clear design vision is central to the development of a successful display device.  Although this statement
seems self-evident, there are numerous occasions in which engineering will present an alternate path; and
often  these  detours  will  veer  away  from  the  original  objective.    Strong  goals  demand  the  cleverest
solutions.  The following questions should be continually revisited throughout the development process:

-  What will be visualized?
-  What  are  the  quantitative  and  qualitative  properties  required  by  the  display  to  achieve  the

desired visualization?

-  What is the power budget?
-  Will the device be safe for an audience?
- 

Is the system innovative?

Power

At  the  present  time,  electronic  devices  require  the  distribution  of  power  and  ground.    If  the  pixels  of  a
display are to be wireless, power and ground must somehow reach every picture element in the system.
Batteries  internal  to  each  object  are  the  easiest  solution  to  this  problem,  although  not  ideal  for  display
devices that have many pixels, or picture elements that are very small.

Direct contact between display elements and a power source is one alternative.  The obvious disadvantage
to direct contact is the spatial freedom lost by tethered picture elements.  In cases where the physical pixels
connect to form an electrical bus, care must be taken to insure that each individual element can handle the
maximum  voltage  and  current  draw  of  the  entire  system.    A  hybrid  of  rechargeable  battery  power  and
external supply benefits from both approaches, but significantly increases the complexity (and expense) of
the system.

Network Architecture

Data  communication  within  a  system  of  physical  pixels  shares  some  common  problems  with  power
distribution;  namely,  all  elements  in  the  system  must  be  able  to  receive,  and  in  some  cases,  send,  data.
Generally speaking, there are three approaches to network architecture of a display: centralized, partially
distributed and decentralized.  A centralized network  involves the standard, I/O display device paradigm
wherein a CPU performs all computation and controls the pixel actuation.  Here, the pixels do not have any
processing  power.    An  example  physical  pixel  device  of  this  kind  is  an  LED  matrix  display.    Partially
distributed  processing  describes  a  system  in  which  one  central  processor  coordinates  the  behavior  for  a
network  of  smart  devices.    Pixels  that  act  as  “slaves”  in  a  larger  network  structure,  but  contain  an
embedded  microprocessor  for  local  sensor  or  display  control,  fall  into  this  category.    Peano  and  20/20
Refurbished are networks with partially distributed processing.   Fully  distributed  processing  involves  no
central coordination for a network of smart devices.  In this case, each physical pixel contains a processor
that controls all behavior and communications for that device.  Displays with fully distributed processing
cannot  be  treated  as  a  Cartesian  system,  but  a  decentralized  network  in  which  emergent  behaviors  are
visible.  Nami is an example of a physical pixel network with fully distributed processing.

44

Mechanical

Mechanical connectivity is immaterial for wireless physical pixels and straightforward for displays that are
fully  tethered.    However,  reconfigurable  display  systems  that  require  direct  contact  for  electrical
connectivity  require  good  mechanical  design.    The  “flakiness”  of  mechanical  connectors  is  often  the
downfall of a modular display.1  The connectors for a modular system should discourage wrong electrical
connections, restrict movement to minimize a noisy signal, and protect the user from electrical shock.  Care
should also be taken to avoid the use of magnetic connectors where the magnetic field might interfere with
an analog circuit (although we did not experience this problem due to an almost exclusively digital circuit).

Display Materials

This section suggests a few ideas for creating color and graphics, but I encourage the reader to consider
more creative solutions to these reasonably traditional materials.  For example, I have often entertained the
idea of using a matrix of addressable scents to control the swarming of insects as though they were a slow-
motion digital video display.  Be creative; the physical pixel can be anything you make it to be.

Generally  speaking,  display  materials  fall  into  three  categories:  emissive,  reflective  and  mechanical.    A
reflective  material  or  mechanical  device  should  be  used  wherever  possible  due  to  a  significantly  lower
power  budget.    Emissive  materials  need  a  constant  supply  of  power  to  maintain  their  state,  whereas
reflective or mechanical substances are usually actuated only during a change of state.  Unfortunately, the
only commercial materials that display a continuous range of color with a refresh rate of at least 30 Hz are
emissive.  E Ink™ is a new, thin film reflective material that will update at 30 Hz or higher, but only two
discrete  colors  are  attainable  at  the  present  time.  Light  Emitting  Didodes  (LEDs)  are  currently  the  best
option  for  color  graphics  due  to  their  relative  power  efficiency,  ease  of  use  and  wide  frequency  range.
Commercially available  LEDs  are  brightest  when  purchased  as  a  discrete  color  with  a  narrow  viewing
angle,  although  difficult  to  diffuse  completely  without  a  milky  or  “pastel”  effect.    A  multicolored  LED
combines an R, G and B filament in one diffuse package that delivers uniform color and a wider viewing
angle, but light intensity is sacrificed.2  LEDs are not ideal for volumetric displays that are transparent due
to the need for a diffusive material to achieve color blending.  Also, diffusive layers must be offset at least
0.75”  from  the  light  source  to  be  effective,  thereby  contributing  a  minimal  thickness  to  the  display.
Incidentally,  this  offset  was  the  only  factor  determining  the  depth  of  the  “pots  of  paint”  in  the  Digital
Palette. 3  Organic Light Emitting Diodes (OLEDs) are an emerging technology that is much smaller than
traditional  LEDs,  enabling  color  diffusion  without  a  diffusive  layer;  and  they  may  also  be  printed  on  a
flexible,  clear  plastic  that  will  appear  semi-transparent  in  layers.    Phosphor-based  materials,  such  as
electroluminescent (EL) film, are a voltage-controlled alternative to  LEDs  that  provide  a  monochromatic
and opaque source of light.  With any display material, the life span should be taken into consideration.
Finally,  every  display  material  will  have  a  unique  dynamic  range.    Where  color  is  the  desired  effect,
gamma correction should be implemented, as described in detail by Foley [et al]. 4

                                                                
1 We were fortunate to have fairly reliable connectors for Peano, despite the fact that they were custom-made.  Based
on prior experience with other modular systems, we worked really hard to maintain precise tolerances in the custom
manufacture and we strongly encourage this approach, albeit tedious and expensive.  The female pads of a Peano cube
are gold-plated for longevity and the male connectors are spring probes available through Interconnect Devices, Inc.
The spring probes of the male connector were chosen for their high current rating, low contact resistance, durability and
long mating cycle.  Had there been a suitable connector available off the shelf, we would have used it without question;
but the rarity of modular, digital systems meant that we were on our own.  Radial symmetry is especially hard to
achieve with multiple data lines, and rotating connectors (such as a multi-conductor slip ring) are totally out of the price
range of a toy (starting at $60 and up).
2 A Peano cube contains a single full spectrum, sunlight visible RGB LED available through LEDtronics, Inc.  A Nami
orb uses a cluster of discrete red, green and blue LEDs available from Nichia Corporation, but I am not aware of a
domestic vendor and the components are difficult to purchase direct.
3 I considered making a make-up compact with digital eye shadow, etc., but this cannot be done with standard RGB
LEDs due to the depth required for adequate diffusion.  Perhaps OLEDs will make this project possible.
4 Foley, James D. [et al.] Computer Graphics: principles and practice (Second Edition in C). Addision-Wesley
Publishing Company, Inc., Reading, MA, 1997.  Pages 564-5.

45

Physical Design

Of all the engineering requirements for a display, aesthetic design is often be the hardest to achieve and the
easiest to ignore.  Appearance is not critical to the success of engineering, so often a prototype will work
but look terrible due to multiple sacrifices in aesthetics.  This is the greatest failure since, after all, it is a
display.  As discussed for Nami and Peano, decisions in the physical design have major implications for the
perception  and  applications  of  the  system.    Circuitry,  batteries,  sensors  and  connectors  are  all  likely
components  of  a  physical  pixel  and  they  must  be  accommodated  without  obscuring  the  visual  effect.
Similarly, a tangible display element should not be impossible to touch due to heat, electricity, fragility or
other consequences of poor design.

46

47

Bibliography

Alloway, Lawrence. Roy Lichenstein. Abbeville Press, New York NY, 1983.

Anagnostou, G., Dewey, D., and Patera, A, “Geometry-defining processors for engineering design and
analysis,” in: The Visual Computer, 5:304-315, 1989.

Anderson, D., Frankel, J., Marks, J., et al., “Building Virtual Structures With Physical Blocks (Demo
Description), in: Proc. of UIST’99.

Atkins, P. W.  Molecules.  W. H. Freeman and Company, New York, NY, 1987.

Baudrillard, Jean.  Simulacra and Simulation. The University of Michigan Press, Ann Arbor, MI, 1994.

Bohm, David. Wholeness and the Implicate Order (Second Edition). Routledge, New York, NY, 1995.

Borovoy, Rick and Kramer, Kwindla, Programmable Beads
http://el.www.media.mit.edu/projects/beads/index.html.  1997

Brotchie, Alastair.  Surrealist Games.  Redstone Press. London, England.  1991.

Chip, Herschel B. Theories of Modern Art: a source book by artists and critics. University of California
Press, Inc., Berkeley, CA, 1968.

Comiskey, J. D. Albert, Hidekazu Yosihizawa & Joseph Jacobson, “An electrophoretic ink for all-printed
reflective and electronic displays.”  Nature, Vol. 394, 16 July 1998.

Conrac Corporation. Raster Graphics Handbook (Second Edition). Van Nostrand Reinhold Company, Inc.,
New York, NY. 1985.

Coore, Daniel, “Establishing a Coordinate System on an Amorphous Computer,” in: 1998 MIT Student
Workshop on High Performance Computing in Science and Engineering, MIT/LCS/TR-737

Coore, Daniel and Nagpal, Radhika, “Implementing Reaction Diffusion on an Amorphous Computer,” in:
1998 MIT Student Workshop on High Performance Computing in Science and Engineering, MIT/LCS/TR-
737

Coyne, Richard. Technoromanticism: digital narrative, holism, and the romance of the real. MIT Press,
Cambridge, MA, 1999.

Cubitt, Sean. Digital Aesthetics. Sage Publications Ltd, London, 1998.

Cypher, Allen (Editor); co-edited by Daniel C. Halbert … [et al.].  Watch What I Do: programming by
demonstration.  The MIT Press, Cambridge, MA, 1994.

David S. Ebert, Edward Bedwell, Stephen Maher, Laura Smoliar, Elizabeth Downing: Realizing 3D
Visualization Using Grossed-beam Volumetric Displays.  CACM 42(8): 100-107 (1999)

Downing, Elizabeth, Hesselink, Lambertus, Ralston, John and Macfarlane, Roger, “A Three-Color, Solid-
State, Three-Dimensional Display,” Science 1996 August 30; 273: 1185-1189.

Elkins, James.  The Object Stares Back: on the nature of seeing.  Harcourt, Inc., Orlando, FL, 1996.

Fielding, Raymond (Editor). A Technological History of Motion Pictures and Television: an anthology
from the pages of the Journal of the Society of Motion Pictures and Television Engineers. University of
California Press, Berkeley, CA, 1967.

48

Fink, Donald G. Computers and the Human Mind. Doubleday and Company, Inc., Garden City, NY, 1966.

Foley, James D. [et al.] Computer Graphics: principles and practice (Second Edition in C). Addision-
Wesley Publishing Company, Inc., Reading, MA, 1997.

Frazer, J. An Evolutionary Architecture. Architectural Association: London, 1994.

Goodman, Cynthia.  Digital Visions: Computers and Art.  Harry N. Abrams, Inc., New York, NY. 1987.

Gorbet, M., Orth, M., and Ishii, H., “Triangles: Tangible Interface for Manipulation and Exploration of
Digital Information Topography,” in: Proc. of CHI98, pp. 49-56.

H. Abelson, D. Allen, D. Coore, C. Hanson, G. Homsy, T. Knight, R. Nagpal, E. Rauch, G. Sussman and
R. Weiss, “Amorphous Computing,” AI Memo 1665, August 1999.

Hearst, Marti A., “TileBars: Visualization of Term Distribution Information in Full Text Information Access,” in: Proc.
of CHI99.

Heaton, K., Poor, R., Wheeler, A., “Nami,” in: Conference Abstracts and Applications of SIGGRAPH99,
Emerging Technologies, p. 214.

Heidegger, Martin.  The Question Concerning Technology and Other Essays. Harper and Row Publishers,
Inc., New York, NY, 1977.

Holtzman, Steven. Digital Mosaics: the aesthetics of cyberspace. Simon and Schuster, Inc., New York, NY,
1998.

Ishii, H. and Ullmer, B, “Tangible Bits: Towards Seamless Interfaces Between People, Bits and Atoms,” in:
Proc. of CHI97, pp. 234-241.

Kirsch, Russell A. IEEE Annals of the History of Computing, Institute of Electrical and Electronics
Engineers, Inc., 1998, pp. 7 – 13.

Kramer, K. and Minar, N., Stackables: Manipulated Distributed Displays.
http://el.www.media.mit.edu/projects/stackables/.  1997

Leavitt, Ruth. Artist and Computer. Crown Publishers, Inc., New York, NY, 1976.

Leigh, J., Johnson, A., DeFanti, T., “CAVERN: A distributed architecture for Supporting Scalable
Persistence and Interoperability in Collaborative Virtual Environments.”  Virtual Reality: Research,
Development and Applications, Vol 2.2, December 1997, pp. 217-237.

Maeda, John.  Design By Numbers. The MIT Press, Cambridge, MA, 1999.

McLuhan, Marshall. Understanding Media: the extensions of man. The MIT Press, Cambridge, MA, 1994.

Mitchell, William J. The Art of Computer Graphics Programming. Van Nostrand Reinhold Company, Inc.,
New York, NY, 1987.

Negroponte, Nicholas. Being Digital. Random House, Inc., New York, NY, 1996.

Newhall, Beaumont, The history of photography : from 1839 to the present.  Museum of Modern Art, New
York, NY, 1982.

49

Newman, William and Sproull, Robert.  Principles of Interactive Computer Graphics (Second Edition).
McGraw-Hill Book Company, Inc., New York, NY, 1979.

Norman, Richard B. Electronic Color: the art of color applied to computer graphic computing. Van
Nostrand Reinhold, New York, NY, 1990.

O’Brian, John. Clement Greenburg: The Collected Essays and Criticism Vol. 4 - Modernism With a
Vengeance, 1957-1969. University of Chicago Press, Chicago, IL, 1995.

Poor, R. Hyphos: A Self-Organizing, Wireless Network. MS thesis, MIT Media Laboratory, 1997.

Popper, Frank. Agam (Third Revised Edition). Harry N. Abrams, Inc., New York, NY, 1990.

Popper, Frank. Origins and Development of Kinetic Art. Studio Vista Limited, London, 1968.

Prueitt, Melvin L.  Art and the Computer.  McGraw-Hill Book Company, Inc. New York , NY 1984.

Rodis -Lewis, Genevieve. Descartes: his life and thought. Cornell University Press, Ithaca, NY, 1998.

Russett, Robert and Starr, Cecile. Experimental Animation (Revised Edition). Da Capo Press, Inc., New
York, NY, 1976.

Rutsky, R. L.  High Techn(cid:31): art and technology from the machine aesthetic to the posthuman.  University
of Minnesota Press, Minneapolis, MN, 1999.

Silvers, Robert.  Photomosaics.  Henry Holt and Company, Inc., New York, NY, 1997.

Soller, Theodore (Editor).  Cathode Ray Tube Displays. McGraw-Hill Book Company, Inc., New York,
NY, 1948.

Sontag, Susan. On Photography. Bantam Doubleday Dell Publishing Group, Inc., New York, NY, 1977.

St.-Hilaire, P., Benton, S. A., Lucente, M., and Hubel, P.M., “Color images with the MIT holographic
video display," in: S.A. Benton, ed., SPIE Vol. 1667, Practical Holography VI (Feb., 1992), paper 1667-73,
pp. 73-84.

Sutherland, I. E. Sketchpad: A Man-Machine Graphical Communication System. Technical Report No.
296, 30 January 1963. Massachusetts Institute of Technology Lincoln Laboratory.

Thompson, D’Arcy Wentworth. On Growth and Form (abridged edition). Cambridge University Press,
Cambridge, 1961.

Tufte, Edward R.  Visual Explanations: Images and Quantities, Evidence and Narrative.  Graphics Press,
Inc., Cheshire, CT, 1997.

Turkle, Sherry.  The Second Self : computers and the human spirit.  Simon and Schuster, New York NY,
1984.

Underkoffler, J. The I/O Bulb and the Luminous Room. MIT Media Laboratory Ph.D. thesis, 1999.

Wolfe, Rosalee (Editor). Seminal Graphics: Pioneering Efforts That Shaped the Field. A Publication of
ACM SIGGRAPH, 1998.

Wolfreys, Julian (Editor).  The Derrida Reader: writing performances.  University of Nebraska Press,
Lincoln, Nebraska, 1998.

50

Yarin, P.  Towards the Distributed Visualization of Usage History.  MS thesis, MIT Media Laboratory,
1999.

51

