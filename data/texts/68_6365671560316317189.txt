Algorithms for Interdependent Security Games
Michael Kearns Luis E. Ortiz Department of Computer and Information Science University of Pennsylvania
1 Introduction
Inspired by events ranging from 9/11 to the collapse of the accounting firm Arthur Andersen, economists Kunreuther and Heal [5] recently introduced an interesting game-theoretic model for problems of interdependent security (IDS), in which a large number of players must make individual investment decisions related to security -- whether physical, financial, medical, or some other type -- but in which the ultimate safety of each participant may depend in a complex way on the actions of the entire population. A simple example is the choice of whether to install a fire sprinkler system in an individual condominium in a large building. While such a system might greatly reduce the chances of the owner's property being destroyed by a fire originating within their own unit, it might do little or nothing to reduce the chances of damage caused by fires originating in other units (since sprinklers can usually only douse small fires early). If "enough" other unit owners have not made the investment in sprinklers, it may be not cost-effective for any individual to do so.
Kunreuther and Heal [5] observe that a great variety of natural problems share this basic interdependent structure, including investment decisions in airline baggage security (in which investments in new screening procedures may reduce the risk of directly checking suspicious cargo, but nearly all airlines accept transferred bags with no additional screening 1); risk management in corporations (in which individual business units have an incentive to avoid high-risk or illegal activities only if enough other units are similarly well-behaved); vaccination against infectious disease (where the fraction of the population choosing vaccination determines the need for or effectiveness of vaccination); certain problems in computer network security; and many others. All these problems share the following important properties:
¯ There is a "bad event" (condominium fire, airline explosion, corporate bankruptcy,
infection, etc.) to be avoided, and the opportunity to reduce the risk of it via some kind of investment.
¯ The cost-effectiveness of the security investment for the individual is a function
of the investment decisions made by the others in the population.
The original work by Kunreuther and Heal [5] proposed a parametric game-theoretic model for such problems, but left the interesting question of computing the equilibria of model largely untouched. In this paper we examine such computational issues.
1El Al airlines is the exception to this.

2 Definitions

In an IDS game, each player must decide whether or not to invest in some abstract security

mechanism or procedure that can reduce their risk of experiencing some abstract bad event.

The cost of the investment to is , while the cost of experiencing the bad event is Ä ;

½ ¼the interesting case is when Ä

. Thus, player has two choices for his action :

means the player makes the investment, while

means he does not. It turns

out that the important parameter is the ratio of the two costs, so we define Ê

Ä.

¼For each player , there is a parameter Ô , which is the probability that player will expe-

rience the bad event due to internal contamination if

-- for example, this is the

probability of the condominium owner's unit burning down due to a fire originating in his

own unit. We can also think of Ô as a measure of the direct risk to player -- as we shall

see, it is that portion of his risk under his direct control.

To model sources of indirect risk, for each pair of players

, let Õ be the proba-

bility that player experiences the bad event as a result of a transfer from player -- for

example, this is the probability that the condominium of player burns Èdown due to a fire

· ½originating in the unit of player . Note the implicit constraint that Ô

Õ.

An IDS game is thus given by the parameters Ô , Õ , Ä , for each player , and the expected cost to player under the model is defined to be

¾¿
Ò
Å ´ µ · ´½   µÔ Ä · ´½   ´½   µÔ µ ½   ´½   ´½   µÕ µ Ä (1)
½

Let us take a moment to parse and motivate this definition, which is the sum of three terms.

¼ ½The first term represents the amount invested in security by player , and is either 0 (if

) or (if

). The second term is the expected cost to due to internal or direct

¼ ½risk of the bad event, and is either Ô Ä (which is the expected cost of internally generated

bad events in the case

), or is 0 (in the case of investment,

). Thus, there is a

natural tension between the first two terms: players can either invest in security, which costs

money but reduces risk, or gamble by not investing. Note that here we have assumed that

security investment perfectly eradicates direct risk (but not indirect risk); generalizations

are obviously possible, but have no qualitative effect on the model.

It is the third term of Equation (1) that expresses the interdependent nature of the problem.

This term encodes the assumption that there are Ò sources of risk to player -- his own

  ½internal risk, and a specific transfer risk from each of the other Ò players -- and that

´½   ´½   µ µall these sources are statistically independent. The prefactor

Ô is simply the

probability that player does not experience the bad event due to direct risk. The bracketed

´½   ´½   µ µexpression is the probability that player experiences a bad event due to transferred risk:

each factor

Õ in the product is the probability that a bad event does not

befall player due to player (and the product expresses the assumption that all of these

possible transfer events are independent). Thus 1 minus this product is the probability of

transferred contamination, and of course the product of the various risk probabilities is also

multiplied by the cost Ä of the bad event.

The model parameters and Equation (1) define a compact representation for a multiplayer
game in which each player's goal is to minimize their cost. Our interest is in the efficient computation of Nash equilibria (NE) of such games 2.

2See (for example) [4] for definitions of Nash and approximate Nash equilibria.

3 Algorithms

We begin with the observation that it is in fact computationally straightforward to find a

single pure NE of any IDS game. To see this, it is easily verified that if there are any con-

½ ¼ditions under which player prefers investing (

) to not investing (

) according

  ½to the expected costs given by Equation (1), then it is certainly the case that will prefer to
invest when all the other Ò players are doing so. Similarly, the most favorable condi-

tions for not investing occur when no other players are investing. Thus, to find a pure NE,

we can first check whether either all players investing, or no players investing, forms a NE.

If so, we are finished. If neither of these extremes are a NE, then there are some players for

whom investing or not investing is a dominant strategy (a best response independent of the

behavior of others). If we then "clamp" such players to their dominant strategies, we obtain

a new IDS game with fewer players (only those without dominant strategies in the original

game), and can again see if this modified game has any players with dominant strategies.

At each stage of this iterative process we maintain the invariant that clamped players are

playing a best response to any possible setting of the unclamped players.

´ µTheorem 1 A pure NE for any Ò-player IDS game can be computed in time Ç Ò¾ .

In a sense, the argument above demonstrates the fact that in most "interesting" IDS games (those in which each player is a true participant, and can have their behavior swayed by that of the overall population), there are two trivial pure NE (all invest and none invest). However, we are also interested in finding NE in which some players are choosing to invest and others not to (even though no player has a dominant strategy). A primary motivation for finding such NE is the appearance of such behavior in "real world" IDS settings, where individual parties do truly seem to make differing security investment choices (such as with sprinkler systems in large apartment buildings). Conceptually, the most straightforward way to discover such NE would be to compute all NE of the IDS game. As we shall eventually see, for computational efficiency such a demand requires restrictions on the parameters of the game, one natural example of which we now investigate.

3.1 Uniform Transfer IDS Games

A uniform transfer IDS game is one in which the transfer risks emanating from a given

player are independent of the transfer destination. Thus, for any player , we have that

for all

, Õ Æ for some value Æ . Note that the risk level Æ presented to the

population by different players may still vary with -- but each player spreads their risk

indiscriminately across the rest of the population. An example would be the assumption

that each airline transferred bags with equal probability to all other airlines.

In this section, we describe two different approaches for computing NE in uniform trans-
fer IDS games. The first approach views a uniform transfer IDS game as a special type
of summarization game, a class recently investigated by Kearns and Mansour [4]. In an
Ò-player summarization game, the payoff of each player is a function of the actions  
Ë´ µof all the other players, but only through the value of a global and common real-valued
summarization function . The main result of [4] gives an algorithm for computing
approximate NE of summarization games, in which the quality of the approximation de-
Ëpends on the influence of the summarization function . A well-known notion in discrete Ë Ëfunctional analysis, the influence of is the maximum change in that any input (player)
can unilaterally cause. (See [4] for detailed definitions.)

It can be shown (details omitted) that any uniform transfer IDS game is in fact a summa-

rization game under the choice

Ò
Ë´ µ ´½   ´½   µÆ µ
½

(2)

and that the influence of this function is bounded by the largest Æ . We note that in many
½natural uniform transfer IDS settings, we expect this influence to diminish like Ò with
the number of players Ò. (This would be the case if the risk transfer comes about through physical objects like airline baggage, where each transfer event can have only a single destination.) Combined with the results of [4], the above discussion can be shown to yield the following result.

Theorem 2 There is an algorithm that takes as input any uniform transfer IDS game, and

¼ ´ · µ Ñ Ü ´½ µ ´½ µ   any ¯ , and computes an Ç ¯

-NE, where

Ô Æ and

Ñ Ü ½Æ . The running time of the algorithm is polynomial in Ò, ¯, and .

We note that in typical IDS settings we expect both the Ô and Æ to be small (the bad event is relatively rare, regardless of its source), in which case may be viewed as a constant. Furthermore, it can be verified that this algorithm will in fact be able to compute approximate NE in which some players choose to invest and others not to, even in the absence of any dominant strategies.

While viewing uniform transfer IDS games as bounded influence summarization games

relates them to a standard class and yields a natural approximation algorithm, an improved

approach is possible. We now present an algorithm (Algorithm UniformTransferIDSNash

in Figure 3.1) that efficiently computes all NE for uniform transfer IDS games. The algo-

rithm (indeed, even the representation of certain NE) requires the ability to compute Ñth

roots.

¼ ¼We may assume without loss of generality that for all players , Æ

, and Ô

.

¾ ¼ ½For a joint mixed strategy vector Ü

Ò, denote the set of (fully) investing players as

½ ¼Á Ü the set of (fully) non-investing players as Æ Ü and the set

¼ ½of partially investing players as È

Ü

The correctness of algorithm UniformTransferIDSNash follows immediately from two

lemmas that we now state without proof due to space considerations. The first lemma is a

´½  µgeneralization of Proposition 2 of [2], and essentially establishes that the values Ê Ô and Æ Ê Ô determine a two-level ordering of the players' willingness to invest. This dou-

ble ordering generates the outer and inner loops of algorithm UniformTransferIDSNash.

Note that a player with small Ê Ô has a combination of relatively low cost of investing

compared to the loss of a bad event (recall Ê

Ä ), and relatively high direct risk Ô ,

and thus intuitively should be more willing to invest than players with large Ê Ô . The

lemma makes this intuition precise.

Lemma 3 (Ordering Lemma) Let Ü be a NE for a uniform transfer IDS game
´ µ ¾ ¾Ò Ê Ô Æ . Then for any Á (an investing player), any Æ (a partially investing ¾player), and any È (a non-investing player), the following conditions hold:

ÊÔ ÊÔ
´½   Æ µ Ê Ô

ÊÔ
´½   Æ µ Ê Ô ´½   Æ µ Ê Ô

ÊÔ

The second lemma establishes that if a NE contains some partially investing players, the values for their mixed strategies is in fact uniquely determined. The equations for these mixed strategies is exploited in the subroutine TestNash.

Algorithm UniformTransferIDSNash Input: An Ò-player uniform transfer IDS game with direct risk parameters Ô, transfer risk

parameters Æ, and cost parameters Ê, where Ê

Ä.

Output: A set Ë of all exact connected sets of NE for .

1. Initialize a partition of the players into three sets Á Æ È (the investing, not investing, and partially investing players, respectively) and test if everybody investing is a NE: Á ½ Ò Æ È Ë TestNash´ Á Æ È Ëµ

2. Let ´ ½ ¾ Òµ be an ordering of the Ò players satisfying Ê ½ Ô ½
Ê Ò Ô Ò . Call this the outer ordering.

3. for ½ Ò

Ë  (a) Move the next player in the outer ordering from the investing to the partially-

investing sets: È È

ÁÁ

 (b) Let ´ ½

µ be an ordering of the players in È satisfying ´½ Æ ½ µ Ê ½ Ô ½

 ´½ Æ µ Ê Ô . Call this the inner ordering.

(c) Consider a strategy with no not-investing players: Æ TestNash´ Á Æ È Ëµ

Ë

(d) for Ñ ½

i. Move the next player in the inner ordering from the partially-investing to

Ë  non-investing sets, and test if there is a NE consistent with the partition:

ÆÆ

ÑÈ È

Ñ Ë TestNash´ Á Æ È Ëµ

Subroutine TestNash

Inputs: An Ò-player uniform transfer IDS game ; a partition of the players Á Æ È (as above);

Ë, the current discovered set of connected sets of NE for

Output: Ë with possibly one additional connected set of NE of consistent with Á Æ , and È

(assuming unit-time computation of Ñ-roots of rational numbers)

¾1. Set pure strategies for not-investing and investing players, respectively:

Æ Ü ¼,

Á Ü ½.

¾

2. if È ½ (Lemma 4, part (a) applies)

Ì(a) Let È É  (b) if Ê
Ë ¾Ë

Ô Ý

, Í as in Equation 3 and Í ¼

Ý

¾ÆÍ´¼½Ý Æ

µ (i.e., player
Ü 

is

Í ´¼ ½µ indifferent) and

Í

¼

, then return

3. else (Lemma 4, part (b) applies)

¾(a) Compute mixed strategies È Ü as in Equation 4

¾ Ë(b) if

È Ü ¼ or Ü ½, return Ë

(c) if Ü is a NE for then return Ë

Ü

4. return Ë

Figure 1: Algorithm UniformTransferIDSNash

· · ·If Á Ð Ù is an interval of with endpoints Ð and Ù, and Á Ð Ù.

¾ then we define

¾ ¼ ½Lemma 4 (Partial Investment Lemma) Let Ü

Ò be a mixed strategy for a uniform

´ µtransfer IDS game

Ò Ê Ô Æ , and let È be the set of partially investing players in Ü.

½ Ñ Ü Ñ Ò ´½ µ Then (a) if È , then letting È

,Î

¾Á Ê Ô

¾Æ Æ Ê Ô

and

´´ µ ´½ µµ   Í Ô Ê ÎÉ

ÆÆ

(3)

½  it holds that Ü is a NE if and only if Ê Ô ¾Æ Æ (i.e., player is indifferent) and

½¾player mixed strategy satisfies Ü Í else, (b) if È , and Ü is a NE, then for all

¾ È,
where

Ü ´´Ô Ê µ   ´½   Æ µµ Æ

´ µ ´½ µ É º É

¾È Ê Ô

¾Æ

Æ

 ½ ´ È ½µ

(4)

The next theorem summarizes our second algorithmic result on uniform transfer IDS games. The omitted proof follows from Lemmas 3 and 4.

Theorem 5 Algorithm UniformTransferIDSNash computes all exact (connected sets of) NE for uniform transfer IDS games in time polynomial in the size of the model.

´ · ¿µ ¾ · ½We note that it follows immediately from the description and correctness of the algorithm

that any Ò-player uniform transfer IDS game has at most Ò Ò

connected sets

of NE. In addition, each connected set of NE in a uniform transfer IDS game is either
  ½a singleton or a simple interval where Ò of the players play pure strategies and the ¼ ½remaining player has a simple interval in of probability values from which to choose

its strategy. At most Ò of the connected sets of NE in a uniform transfer IDS game are

simple intervals.

3.2 Hardness of General IDS Games

In light of the results of the preceding section, it is of course natural to consider the computational difficulty of unrestricted IDS. We now show that even a slight generalization of uniform transfer IDS games, in which we allow the Æ to assume two fixed values instead of one, leads to the intractabilty of computing at least some of the NE.

A graphical uniform transfer IDS game, so named because it can be viewed as a marriage

between uniform transfer IDS games and the graphical games introduced in [3], is an IDS

¾ ¼ ¼game with the restriction that for all players , Õ

Æ , for some Æ

. Let

´ µ ¼Æ Õ be the set of players that can be directly affected by player 's

behavior. In other words, the transfer risk parameter Õ of player with respect to player

is either zero, in which case the player has no direct effect on player 's behavior; or it is

´½   ´½   µ µconstant, in which case, the public safety

Ü Æ of player with respect

¾ ´ µ ´ µto player Æ is the same as for any other player in Æ .

¾ ¼ ½ £The pure Nash extension problem for an Ò-player game with binary actions takes as input

a description of the game and a partial assignment

Ò. The output may be any

¾ ¼ ½complete assignment (joint action)

Ò that agrees with on all its 0 and 1 settings,

and is a (pure) NE for the game; or "none" if no such NE exists. Clearly the problem of

computing all the NE is at least as difficult as the pure Nash extension problem.

´ µ ¿Theorem 6 The pure Nash extension problem for graphical uniform transfer IDS games is

NP-complete, even if Æ

for all , and Æ is some fixed value Æ for all .

The reduction (omitted) is from Monotone One-in-Three SAT [1].

4 Experimental Study: Airline Baggage Security
As an empirical demonstration of IDS games, we constructed and conducted experiments on an IDS game for airline security that is based on real industry data. We have access to a data set consisting of 35,362 records of actual civilian commercial flight reservations, both domestic and international, made on August 26, 2002. Since these records contain complete flight itineraries, they include passenger transfers between the 122 represented commercial air carriers. As described below, we used this data set to construct an IDS

game in which the players are the 122 carriers, the "bad event" corresponds to a bomb exploding in a bag being transported in a carrier's airplane, and the transfer event is the physical transfer of a bag from one carrier to another.
´ µFor each carrier pair , the transfer parameter Õ was set to be proportional to the
count of transfers from carrier to carrier in the data set. We are thus using the rate of passenger transfers as a proxy for the rate of baggage transfers. The resulting parameters (details omitted) are, as expected, quite asymmetric, as there are highly structured patterns of transfers resulting from differing geographic coverages, alliances between carriers, etc. The model is thus far from being a uniform transfer IDS game, and thus algorithm UniformTransferIDSNash cannot be applied; we instead used a simple gradient learning approach.

The data set provides no guidance on reasonable values for the Ê and Ô , which quantify

relative costs of a hypothetical new screening procedure and the direct risks of checking

contaminated luggage, respectively; presumably Ê depends on the specific economics of

the carrier, and Ô on some notion of the risk presented by the carrier's clientele, which

¼ ¼½might depend on the geographic area served. Thus, for illustrative purposes, an arbitrary

value of Ô

was chosen for all 3, and a common value for Ê of 0.009 (so an

explosion is roughly 110 times more costly to a carrier than full investment in security).

Since the asymmetries of the Õ preclude the use of algorithm UniformTransferIDSNash,

we instead used a learning approach in which each player begins with a random initial

¾ ¼ ½investment strategy Ü

, and adjusts its degree of investment up or down based on

  ¡ ¡the gradient dynamics Ü Ü

, where is determined by computing the derivative

¼ ¼of Equation (1) and

was used in the experiments to be discussed.

49 48 47 46 45 44 43

49 48 47 46 45 44 43

42 41 40 39 38 37 36

42 41 40 39 38 37 36

35 34 33 32 31 30 29

35 34 33 32 31 30 29

28 27 26 25 24 23 22

28 27 26 25 24 23 22

21 20 19 18 17 16 15

21 20 19 18 17 16 15

14 13 12 11 10

9

8

14 13 12 11 10

9

8

7 65 4 32 1

7 6 5 43 2 1

(a) (b)

Figure 2: (a) Simulation of the evolution of security investment strategies for the 49 busiest carrier using gradient dynamics under the IDS model. Above each plot is an index indicating the rank of the carrier in terms of overall volume in the data set. Each plot shows the investment level Ü (initialized randomly in ¼ ½ ) for carrier over 500 simulation steps. (b) Tipping phenomena. Simulation of the evolution of security investment strategies for the 49 busiest carriers, but with the three largest carriers (indices 1, 2 and 3) in the data set clamped (subsidized) at full investment. The plots are ordered as in (a), and again show 500 simulation steps under gradient dynamics.
Figure 2(a) shows the evolution, over 500 steps of simulation time, of the investment level Ü for the 49 busiest carriers 4. We have ordered the 49 plots with the least busy carrier
3This is (hopefully) an unrealistically large value for the real world; however, it is the relationship between the parameters and not their absolute magnitudes that is important in the model.
4According to the total volume of flights per carrier in the data set.

(index 49) plotted in the upper left corner, and the busiest (index 1) in the lower right corner. The horizontal axes measure the 500 time steps, while the vertical axes go from 0 to 1. The axes are unlabeled for legibility.

The most striking feature of the figure is the change in the evolution of the investment

strategy as we move from less busy to more busy carriers. Broadly speaking, there is a large

½population of lower-volume carriers (indices 49 down to 34) that quickly converge to full
investment (Ü ) regardless of initial conditions. The smallest carriers, not shown (ranks

122 down to 50), also all rapidly converge to full investment. There is then a set of medium-

volume carriers whose limiting strategy is approached more slowly, and may eventually

converge to either full or no investment (roughly indices 33 down to 14). Finally, the largest

¼carriers (indices 13 and lower) again converge quickly, but to no investment (Ü

),

because they have a high probability of having bags transferred from other carriers (even if

they protect themselves against dangerous bags being loaded directly on their planes).

Note also that the dynamics can yield complex, nonlinear behavior that includes reversals of strategy. The simulation eventually converges (within 2000 steps) to a (Nash) equilibrium in which some carriers are at full investment, and the rest at no investment. This property is extremely robust across initial conditions and model parameters,

The above simulation model enables one to examine how subsidizing several airlines to encourage it to invest in security can encourage others to do the same. This type of "tipping" behavior [6] can be the basis for developing strategies for inducing adoption of security measures short of formal regulations or requirements. Figure2(b) shows the result of an identical simulation to the one discussed above, except the three largest carriers (indices 1, 2 and 3) are now "clamped" or forced to be at full investment during the entire simulation. Independent of initial conditions, the remaining population now invariably converges to full investment. Thus the model suggests that these three carriers form (one of perhaps many different) tipping sets -- carriers whose decision to invest (due to subsidization or other exogenous forces) will create the economic incentive for a large population of otherwise skeptical carriers to follow. The dynamics also reveal a cascading effect -- for example, carrier 5 moves towards full investment (after having settled comfortably at no investment) only after a number of larger and smaller carriers have done so.

Acknowledgements: We give warm thanks to Howard Kunreuther, Geoffrey Heal and Kilian Weinberger for many helpful discussions.
References

[1] Michael Garey and David Johnson. Computers and Intractability: A Guide to the Theory of NP-completeness. Freeman, 1979.
[2] Geoffrey Heal and Howard Kunreuther. You only die once: Managing discrete interdependent risks. 2003. Working paper, Columbia Business School and Wharton Risk Management and Decision Processes Center.
[3] M. Kearns, M. Littman, and S. Singh. Graphical models for game theory. In Proceedings of the Conference on Uncertainty in Artificial Intelligence, pages 253­260, 2001.
[4] M. Kearns and Y. Mansour. Efficient Nash computation in summarization games with bounded influence. In Proceedings of the Conference on Uncertainty in Artificial Intelligence, 2002.
[5] Howard Kunreuther and Geoffrey Heal. Interdependent security. Journal of Risk and Uncertainty (Special Issue on Terrorist Risks), 2003. In press.
[6] Thomas Schelling. Micromotives and Macrobehavior. Norton, 1978.

