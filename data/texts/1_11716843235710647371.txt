Matkailualan hinta- ja aikailmausten lokalisointij¨arjestelm¨a
Jyrki Niemi Kieliteknologian kandidaatintutkielma
Helsinki 30.11.2001 Helsingin yliopisto Yleisen kielitieteen laitos

1

Sis¨alt¨o

Esipuhe

4

1 Johdanto 1.1 Tyo¨n aihe . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1.2 Hinta- ja aikailmausten lokalisointitarve . . . . . . . . . . . . . . . . 1.3 Ty¨on taustaa: MIETTA-hanke . . . . . . . . . . . . . . . . . . . . . 1.4 Tarpeet, tavoitteet ja ratkaisun pa¨¨apiirteet . . . . . . . . . . . . . . 1.4.1 Hinta- ja aikailmaukset . . . . . . . . . . . . . . . . . . . . . 1.4.2 Generointi . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1.4.3 Ilmausten muuntaminen kielesta¨ riippumattomaan muotoon 1.4.4 Muita tarpeita . . . . . . . . . . . . . . . . . . . . . . . . . 1.5 Lokalisointija¨rjestelm¨an saatavuus . . . . . . . . . . . . . . . . . . . 1.6 Ty¨on sisa¨lt¨o ja rakenne . . . . . . . . . . . . . . . . . . . . . . . . . 1.7 Ty¨ossa¨ ka¨ytetyt merkinta¨tavat . . . . . . . . . . . . . . . . . . . . .

6 6 7 8 9 9 11 11 12 12 12 13

2 Katsaus aiempaan tutkimukseen

14

2.1 Aikailmaukset ja niiden generointi . . . . . . . . . . . . . . . . . . . 14

2.2 Monikielinen generointi . . . . . . . . . . . . . . . . . . . . . . . . . 15

3 Aineisto 3.1 Aineiston luonne ja k¨aytt¨o . . . . . . . . . . . . . . . . . . . . . . . 3.2 Hintailmaukset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3.3 Aikailmaukset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

17 18 18 21

4 Ratkaisu ja j¨arjestelm¨an toteutus 4.1 Hinta- ja aikailmausten rajaukset . . . . . . . . . . . . . . . . . . . 4.2 Hinta- ja aikailmausten rakenne . . . . . . . . . . . . . . . . . . . . 4.2.1 Perusperiaatteet . . . . . . . . . . . . . . . . . . . . . . . . 4.2.2 Hintailmauksen rakenne . . . . . . . . . . . . . . . . . . . . 4.2.3 Aikailmauksen rakenne . . . . . . . . . . . . . . . . . . . . . 4.3 Hinta- ja aikailmausten esitysmuodot . . . . . . . . . . . . . . . . . 4.3.1 Ilmausten merkkijonomuoto . . . . . . . . . . . . . . . . . . 4.3.2 Ilmausten Java-esitysmuoto . . . . . . . . . . . . . . . . . . 4.3.3 Muita esitysmuotovaihtoehtoja . . . . . . . . . . . . . . . . 4.4 Monikielinen generointi kielesta¨ riippumattomasta muodosta . . . . 4.5 Generointisa¨a¨nno¨t . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.5.1 S¨a¨anto¨tiedostot . . . . . . . . . . . . . . . . . . . . . . . . . 4.5.2 Sa¨¨anto¨hierarkia ja s¨a¨anto¨jen nimet . . . . . . . . . . . . . . 4.5.3 Sa¨a¨nto¨jen pa¨a¨tyypit . . . . . . . . . . . . . . . . . . . . . . 4.5.4 S¨a¨anto¨jen muoto ja ominaisuudet . . . . . . . . . . . . . . . 4.5.5 Attribuutit . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.5.6 Makrot . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.5.7 Sa¨a¨nt¨ojoukko . . . . . . . . . . . . . . . . . . . . . . . . . . 4.5.8 MIETTA-hankkeessa toteutetut generointis¨aa¨nno¨st¨ot . . . . 4.6 Ilmausten muuntaminen kielesta¨ riippumattomaan muotoon . . . . 4.6.1 Muuntimen toimintaperiaate . . . . . . . . . . . . . . . . . . 4.6.2 Muuntimen tunnistamat hinta- ja aikailmaukset . . . . . . . 4.7 Tekninen toteutus . . . . . . . . . . . . . . . . . . . . . . . . . . . .

23 23 25 25 26 29 34 34 38 38 39 41 41 42 44 45 47 49 50 52 53 54 54 56

2

5 Arviointi ja johtop¨a¨ato¨kset

58

5.1 Ty¨on tavoitteiden toteutuminen . . . . . . . . . . . . . . . . . . . . 58

5.2 Ratkaisujen arviointia . . . . . . . . . . . . . . . . . . . . . . . . . 59

5.2.1 Menetelm¨at . . . . . . . . . . . . . . . . . . . . . . . . . . . 59

5.2.2 Hinta- ja aikailmaukset . . . . . . . . . . . . . . . . . . . . . 59

5.2.3 Generointiohjelma ja generointis¨aa¨nn¨ot . . . . . . . . . . . . 61

5.2.4 Ilmausten muuntaminen kielest¨a riippumattomaan muotoon 66

5.3 Hinta- ja aikailmausten erityisia¨ puutteita . . . . . . . . . . . . . . 67

5.3.1 Hinta- ja aikailmauksille yhteisia¨ puutteita . . . . . . . . . . 67

5.3.2 Hintailmausten puutteita . . . . . . . . . . . . . . . . . . . . 67

5.3.3 Aikailmausten puutteita . . . . . . . . . . . . . . . . . . . . 69

5.4 Jatkotutkimus ja -kehitys . . . . . . . . . . . . . . . . . . . . . . . . 70

5.4.1 Hinta- ja aikailmauskorpus . . . . . . . . . . . . . . . . . . . 70

5.4.2 Ilmausten erista¨minen tekstist¨a ja muuntaminen kielesta¨ riip-

pumattomaan muotoon . . . . . . . . . . . . . . . . . . . . . 70

5.4.3 Hinta- ja aikailmausten formalisointi . . . . . . . . . . . . . 71

5.4.4 Ilmausten ja s¨aa¨nt¨ojen XML-esitysmuoto . . . . . . . . . . . 72

5.4.5 Hinta- ja aikailmausten kielellinen luonne . . . . . . . . . . . 73

5.4.6 Generointis¨a¨ant¨ojen ilmaisuvoima . . . . . . . . . . . . . . . 73

5.4.7 Lokalisointija¨rjestelm¨an sovellusalueen laajentaminen . . . . 73

5.5 Hinta- ja aikailmausten lokalisoinnin merkitys ja k¨aytto¨mahdollisuudet 74

L¨ahteet

76

Liitteet

A Esimerkkej¨a hinta- ja aikailmauksista

81

A.1 Hintailmaukset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81

A.2 Aikailmaukset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83

B Laajennettujen yhteydett¨omien kielioppien merkint¨atavat

86

C Hinta- ja aikailmausten tiiviin merkkijonomuodon kielioppi C.1 Kielioppien p¨aa¨tesymbolit ja l¨ahto¨symboli . . . . . . . . . . . . . . C.2 Hintailmausten kielioppi . . . . . . . . . . . . . . . . . . . . . . . . C.3 Aikailmausten kielioppi . . . . . . . . . . . . . . . . . . . . . . . . .

88 88 88 90

D MIETTA-hankkeen generointis¨a¨anno¨sto¨t D.1 Kielest¨a riippumattomat sa¨¨anno¨t . . . . . . . . . . . . . . . . . . . D.1.1 Hinta- ja aikailmauksille yhteiset s¨aa¨nn¨ot . . . . . . . . . . . D.1.2 Hintailmausten generointisa¨¨anno¨t . . . . . . . . . . . . . . . D.1.3 Aikailmausten generointisa¨¨ann¨ot . . . . . . . . . . . . . . . . D.2 Suomen kielen s¨aa¨nn¨ot . . . . . . . . . . . . . . . . . . . . . . . . . D.2.1 Aika- ja hintailmauksille yhteiset s¨aa¨nn¨ot . . . . . . . . . . . D.2.2 Hintailmausten generointisa¨¨ann¨ot . . . . . . . . . . . . . . . D.2.3 Aikailmausten generointisa¨¨anno¨t . . . . . . . . . . . . . . . . D.3 Englannin kielen s¨aa¨nno¨t . . . . . . . . . . . . . . . . . . . . . . . . D.3.1 Hinta- ja aikailmauksille yhteiset s¨a¨anno¨t . . . . . . . . . . . D.3.2 Hintailmausten generointis¨aa¨nno¨t . . . . . . . . . . . . . . . D.3.3 Aikailmausten generointis¨a¨anno¨t . . . . . . . . . . . . . . . .

94 94 94 95 98 100 100 101 103 105 105 106 108

3

E Hinta- ja aikailmausten Java-luokkahierarkia

111

E.1 Hintailmausten luokkahierarkia . . . . . . . . . . . . . . . . . . . . 111

E.2 Aikailmausten luokkahierarkia . . . . . . . . . . . . . . . . . . . . . 111

F MIETTA-hanke

116

F.1 Hanke ja sen tavoitteet . . . . . . . . . . . . . . . . . . . . . . . . . 116

F.2 Hankkeen osapuolet . . . . . . . . . . . . . . . . . . . . . . . . . . . 117

G JTg2 Light -generointij¨arjestelm¨a

118

H Ohjelmakoodilevyke

120

Kuviot
1 Esimerkki hintailmauksen rakenteesta 1 . . . . . . . . . . . . . . . . 28 2 Esimerkki hintailmauksen rakenteesta 2 . . . . . . . . . . . . . . . . 29 3 Esimerkki aikailmauksen rakenteesta 1 . . . . . . . . . . . . . . . . 32 4 Esimerkki aikailmauksen rakenteesta 2 . . . . . . . . . . . . . . . . 33 5 Hintailmausten luokkakaavio . . . . . . . . . . . . . . . . . . . . . . 112 6 Aikailmausten luokkakaavion p¨aa¨osa . . . . . . . . . . . . . . . . . 113 7 Aikailmausten luokkakaavio: pa¨iv¨am¨a¨ariin liittyva¨t luokat . . . . . . 114 8 Aikailmausten luokkakaavio: vuodenviikkoihin liittyv¨at luokat . . . 114 9 Aikailmausten luokkakaavio: viikonpa¨iviin liittyv¨at luokat . . . . . . 114 10 Aikailmausten luokkakaavio: tunti-ilmauksiin liittyva¨t luokat . . . . 115

4
Esipuhe
Ta¨m¨a tutkielma tai raportti perustuu suoraan ty¨oho¨n, jota tein Helsingin yliopiston yleisen kielitieteen laitoksella MIETTA-EU-hankkeessa vuonna 2000. (MIETTAhanketta olen esitellyt l¨ahemmin luvussa 1.3 ja liitteessa¨ F.)
Matkailualan pa¨a¨symaksujen, hotellihintojen ja aukioloaikojen lokalisointi oli hankeen suunnitelmissa alusta alkaen: tarkoituksena oli esitta¨a¨ ilmaukset kielest¨a riippumattomassa muodossa ja generoida siit¨a erikieliset ilmaukset. Matkailualan hinta- ja aikailmausten lokalisointija¨rjestelma¨¨a ei kuitenkaan ollut valmiina olemassa. Sellaisen suunnittelu ei alunperin kuulunut hankkeessa Helsingin yliopiston teht¨aviin. Kev¨attalvella 2000 alkoi kuitenkin na¨ytta¨a¨ silta¨, ett¨a t¨am¨a ominaisuus saattaisi j¨aa¨d¨a kokonaan toteuttamatta. Koska MIETTA-hankkeen tavoitteista oli siina¨ vaiheessa k¨ayta¨nn¨ossa¨ ja¨¨anyt pois informaation erist¨aminen (information extraction), jossa Helsingin yliopistolla oli tarkoitus olla merkitt¨ava¨ osuus, minulla oli aikaa ka¨ytetta¨viss¨ani. Kyselin hankkeen muilta osapuolilta, sopisiko heille se, etta¨ alkaisin suunnitella hinta- ja aikailmausten kielesta¨ riippumatonta muotoa. Saatuani luvan aloin suunnitella ilmauksia ja my¨ohemmin generointij¨arjestelma¨a¨.
Ja¨rjestelm¨a valmistui t¨am¨an raportin kuvaamaan muotoonsa MIETTA-hankkeen loppuvaiheessa loka­marraskuussa 2000, joskin joitain pienia¨ korjauksia ja ta¨ydennyksi¨a olen tehnyt sen j¨alkeenkin. MIETTA-demonstraatioj¨arjestelma¨n valmistumisen viiv¨astymisen vuoksi my¨oska¨a¨n hinta- ja aikailmausten lokalisointij¨arjestelma¨sta¨ ei ole paljon k¨ayt¨ann¨on kokemuksia.
Hinta- ja aikailmausten kielesta¨ riippumattoman muodon suunnittelusta kiinnostuin alunperin paljolti siksi, etta¨ minua kiinnostaa ohjelmointi- ja muiden vastaavien kielten j¨asentimien ja k¨a¨ant¨ajien tekeminen. Ta¨st¨a kiinnostuksesta oli luonnollisesti hy¨otya¨ my¨os generointisa¨a¨nt¨ojen suunnittelemisessa ja toteuttamisessa.
Osittain aikataulun kireyden vuoksi en alunperin tutkinut, olisiko jotain vastaavaa hinta- tai aikailmausten lokalisointija¨rjestelma¨¨a tehty muualla. Oletin, ett¨a vastaavaa ei olisi tehty. Myo¨hemmiss¨ak¨aa¨n etsinno¨iss¨ani mit¨aa¨n vastaavaa ei ole tullut vastaan. Koska etsint¨ani ei kuitenkaan ole ollut kattavaa ja koska monia ja¨rjestelmi¨a ei ole julkisesti dokumentoitu, on aivan mahdollista, ett¨a vastaavaa on tehty ennenkin.
Ta¨m¨an raportin tai tutkielman oli tarkoitus valmistua jo alkuvuodesta 2001, mutta erilaisten henkilo¨kohtaisten syiden takia valmistuminen viiv¨astyi marraskuuhun 2001. Ty¨o on pikemminkin raportti tekema¨sta¨ni tyo¨st¨a kuin varsinainen tieteel-

5
linen tutkielma. Ty¨o on laajempi kuin olisi ollut tarpeen kandidaatintutkielmaksi, mik¨a johtuu paljolti toteuttamani lokalisointij¨arjestelm¨an ominaisuuksien kuvaamisesta ja luultavasti osittain myo¨s laveasta kirjoitustyylist¨ani.
Haluan kiitta¨¨a niita¨ monia ihmisia¨, jotka ovat auttaneet ta¨ma¨n ty¨on tekemisessa¨ tavalla tai toisella. Professori Kimmo Koskenniemi johti MIETTA-hanketta yleisen kielitieteen laitoksen osalta ja pyysi minut mukaan hankkeeseen. Professori Lauri Carlson on ohjannut ta¨m¨an tutkielman tekemist¨a ja antanut monia hyvia¨ ideoita, parannusehdotuksia, kommentteja ja l¨ahdeviitteit¨a. Atk-suunnittelija Sirke Viitanen oli tyo¨toverini MIETTA-hankkeessa; h¨an kera¨si hinta- ja aikailmauksia ja luonnosteli ilmausten yleistetyn rakenteen ensimm¨aisen version. Yliopistonlehtori Graham Wilcock on antanut generointiin ja XML:¨a¨an liittyvia¨ ideoita. Yliopistonlehtori Kari Pitk¨asen kanssa olen keskustellut aikailmauksiin liittyvist¨a kysymyksista¨. MIETTA-hankkeen muista osapuolista CELI s.r.l:n Luca Dini ja Vittorio Di Tomaso neuvoivat erityisesti hinta- ja aikailmausten lokalisointija¨rjestelma¨n liitt¨amisess¨a hankkeessa ka¨ytettyyn JTg2 Light -generointij¨arjestelm¨a¨an. Heida¨n lis¨akseen my¨os UNIDATAn Alessandro Giarante esitti ideoita ja¨rjestelma¨n kehitta¨miseksi. Haluan kiitta¨a¨ yhteistyo¨st¨a myo¨s kaikkia muita MIETTA-hankkeen ihmisia¨.
T¨am¨an tutkielman olen kirjoittanut LATEX 2-dokumenttimuodossa GNU Emacs -editorilla. L¨ahdeluettelon ja la¨hdeviitteet olen tuottanut BibTEX-ja¨rjestelm¨all¨a k¨aytt¨aen natbib-LATEX-pakkausta ja BibTEX-tyylia¨, jota muokkasin Helsingin yliopiston yleisen kielitieteen laitoksen kirjallisuusviitetyylin mukaiseksi. Luvun 4.2 puukaaviot olen tehnyt ecltree-pakkauksella k¨aytta¨en apunani Perl-kielell¨a kirjoittamaani esika¨sittelyohjelmaa. LATEX-ja¨rjestelma¨na¨ on ollut teTeX 1.0. Liitteen E UML-luokkakaaviot olen piirt¨anyt Dia-piirrosohjelman versiolla 0.83. Versionhallintaan olen k¨aytta¨nyt CVS-versionhallintaj¨arjestelm¨a¨a. Kaiken t¨am¨an olen tehnyt GNU/Linux-ymp¨arist¨oss¨a.
Helsingiss¨a marraskuussa 2001
Jyrki Niemi

6
1 Johdanto
Ta¨m¨a raportti kuvaa matkailualan hinta- ja aikailmausten lokalisointij¨arjestelm¨a¨a, jonka suunnittelin ja toteutin MIETTA-EU-hankkeessa. Ja¨rjestelm¨a perustuu hintaja aikailmausten esitta¨miseen kielesta¨ riippumattomassa muodossa ja erikielisten ilmausten generointiin ta¨sta¨ muodosta kielikohtaisten sa¨¨anto¨jen perusteella. Ja¨rjestelm¨a toimi osana MIETTA-hankkeessa k¨aytetty¨a generointij¨arjestelm¨a¨a, joka tuotti eri kielilla¨ lyhyit¨a paikkojen ja tapahtumien kuvauksia tietokannan sisa¨lt¨amien tietojen perusteella. Tietokannan tiedot oli esitetty mahdollisimman pitka¨lti kielest¨a riippumattomassa muodossa.
T¨am¨an johdantoluvun rakenne on seuraava. Aliluku 1.1 kuvaa ja rajaa ty¨on aiheen. Aliluku 1.2 perustelee hinta- ja aikailmausten lokalisoinnin tarpeen. Aliluku 1.3 kertoo lyhyesti ty¨on taustana olevasta MIETTA-hankkeesta. Aliluku 1.4 kuvaa tarkemmin tyo¨n eri osien tarpeita ja ratkaisun p¨aa¨piirteita¨. Aliluku 1.5 kertoo generointiohjelman saatavuudesta. Aliluku 1.6 kuvaa tyo¨n loppuosan rakenteen. Aliluku 1.7 kuvaa t¨arkeimm¨at tyo¨ssa¨ k¨aytetyt merkint¨atavat.
1.1 Ty¨on aihe
T¨ama¨ ty¨o kuvaa suunnittelemani hinta- ja aikailmausten kielest¨a riippumattoman esitysmuodon seka¨ Java-kielella¨ (Arnold et al. 2000) toteuttamani generointiohjelmakomponentin ja sen ka¨ytt¨ama¨n generointisa¨¨anto¨formalismin, joka tuottaa kielest¨a riippumattomasta muodosta vastaavat erikieliset ilmaukset. Tyo¨ kuvaa lyhyesti my¨os toteuttamieni suomen ja englannin generointisa¨¨anno¨sto¨jen ominaisuuksia. Lis¨aksi ty¨o k¨asittelee lyhyesti luonnolliskielisten hinta- ja aikailmausten muuntamista kielest¨a riippumattomaan muotoon.
T¨am¨a ty¨o liittyy pa¨a¨osin luonnollisen kielen generointiin, erityisesti monikieliseen generointiin ja matalan tason generointiin. Hinta- ja aikailmausten kielesta¨ riippumaton esitysmuoto on era¨¨anlainen va¨likieli (interlingua). Lis¨aksi ilmausten muuntaminen luonnolliskielisest¨a muodosta kielesta¨ riippumattomaan muotoon sivuaa rajoitettuja (kontrolloituja) kieli¨a ja informaation erista¨mista¨. Tyo¨n kuvaama generointija¨rjestelma¨ ka¨sittelee vain hinta- ja aikailmauksia, eik¨a se sis¨alla¨ suunnittelutai pa¨¨attelykomponenttia.
T¨ama¨n raportin kuvaaman ty¨on tarkoitus oli ka¨yta¨nno¨nl¨aheinen: toteuttaa MIETTA-hankkeessa ka¨ytto¨kelpoinen hinta- ja aikailmausten lokalisointija¨rjestelma¨. Siten my¨os t¨am¨a raportti on p¨a¨aosin ka¨yta¨nn¨onl¨aheinen.

7
Toteutettu hinta- ja aikailmausten esitysmuoto on suunniteltu kuvaamaan erityisesti matkailualaan liittyvi¨a hinta- ja aikailmauksia: p¨aa¨symaksuja, hotellihuoneiden hintoja, aukioloaikoja ja tapahtumien ajankohtia. T¨am¨a tyo¨ k¨asittelee kalendaarisia aikailmauksia: ajankohta, johon t¨allainen aikailmaus viittaa, ei riipu ilmaisuhetkesta¨ (esimerkiksi 10.10.2001 tai kello 10­18 1). Ty¨o ei ka¨sittele kielitieteessa¨ enemm¨an tutkittuja deiktisi¨a ilmauksia, joiden tulkinta riippuu ilmaisuhetkest¨a (esimerkiksi t¨ana¨¨an tai viikon pa¨a¨st¨a). Esitysmuoto tukee vain la¨nsimaisen, gregoriaanisen kalenterin aikailmauksia.
Tyo¨n k¨asittelema¨t hinta- ja aikailmaukset ovat kielellisesti l¨ahinna¨ lausekkeita ja osittain ep¨at¨aydellisia¨ lauseita. Ty¨o ei k¨asittele lausetason generointia. Ilmaukset ovat suhteellisen tiiviit¨a, koska jonkin paikan tai tapahtuman hinta- ja aikatietoja etsiva¨ ihminen haluaa yleens¨a n¨ahd¨a olennaisen informaation mahdollisimman nopeasti. Ilmausten tiiviydesta¨ on etua myo¨s silloin, kun samassa listassa on paljon ilmauksia.
Ty¨o ei suoraan k¨asittele yksitta¨isten lukujen, pa¨iva¨ma¨a¨rien tai kellonaikojen lokalisointia tai esitystapoja eri kielissa¨, koska toteutettu ja¨rjestelm¨a k¨aytt¨aa¨ t¨aha¨n alimman tason lokalisointiin Javan standardikirjaston tarjoamia va¨lineita¨.
1.2 Hinta- ja aikailmausten lokalisointitarve
MIETTA-hankkeen tavoitteena oli kehitta¨¨a monikielisen matkailuinformaation WWW-hakupalvelun demonstraatioj¨arjestelma¨. Hakupalvelun yhtena¨ informaatiola¨hteena¨ oli tietokanta, joka sis¨alsi perustietoja paikoista ja tapahtumista, esimerkiksi na¨hta¨vyyksista¨, hotelleista, museoista ja konserteista. Tietokannan tiedot oli esitetty mahdollisimman pitk¨alti kielesta¨ riippumattomassa muodossa, jotta niist¨a pystyttiin tuottamaan lyhyita¨ kuvauksia eri kielilla¨.
Monissa tapauksissa paikan tai tapahtuman tiedot sisa¨lsiva¨t hinta- ja aikainformaatiota, jota ei voinut kuvata yhtena¨ yksitta¨isen¨a hintana, pa¨iv¨ama¨¨ara¨na¨ tai kellonaikana. Koska na¨iden tietojen sisa¨lto¨ ja rakenne vaihtelivat tapahtumasta ja paikasta toiseen, olisi ollut vaikea toteuttaa yksitt¨aisen tietokantatietueen rakenne, joka olisi kattanut kaiken vaihtelun.
T¨allainen paikkojen ja tapahtumien hinta- ja aikainformaatio vaati kuitenkin usein lokalisointia. Jo yksitt¨aisten p¨aiva¨ma¨¨arien, kellonaikojen ja rahasummien esitysmuoto vaihtelee kielest¨a ja maasta toiseen. P¨aiv¨ama¨a¨rien ja kellonaikojen lisa¨ksi
1Yksitta¨isen kellonaikailmauksen voi ajatella viittaavan jokaisen pa¨iva¨n kyseiseen kellonaikaan.

8
aikailmauksissa esiintyi viikonpa¨ivien, juhlapa¨ivien ja vuodenaikojen nimi¨a. Hintailmaukset puolestaan koostuivat usein useista eri hinnoista, jotka oli kohdistetettu esimerkiksi erilaisille asiakasrymhmille, hotellihuonetyypeille tai palveluille. Lisa¨ksi hintoihin liittyv¨at valuuttatunnukset voidaan esitta¨a¨ eri tavoin eri kieliss¨a. Hintaja aikailmauksia esittelee tarkemmin aliluku 1.4.1.
Ilman t¨am¨an tyo¨n ka¨sittelema¨¨a hinta- ja aikailmausten lokalisointija¨rjestelma¨a¨ MIETTA-hankkeen matkailutietokannassa olisi jouduttu tyytyma¨a¨n joko vain hyvin yksinkertaisiin lokalisoituihin hinta- ja aikailmauksiin tai luonnolliskielisen¨a tekstin¨a esitettyihin yksikielisiin ilmauksiin. Ensimm¨aisess¨a vaihtoehdossa tietokannan sis¨alt¨am¨at tiedot olisivat olleet k¨aytta¨j¨an kannalta puutteellisia tai harhaanjohtavia; ja¨lkimma¨isess¨a taas ja¨rjestelma¨n monikielisyys olisi ka¨rsinyt selv¨asti.
1.3 Tyo¨n taustaa: MIETTA-hanke
MIETTA (Multilingual Information Extraction for Tourism and Travel Assistance, LE4-8343) oli Euroopan komission osittain rahoittama kieliteknologian alaan kuulunut tutkimus- ja kehityshanke, johon Helsingin yliopiston yleisen kielitieteen laitos osallistui. Hankkeesta on lis¨atietoa liitteess¨a F seka¨ hankkeen WWW-sivulla (MIETTA Project 2000a).
Hankkeen tavoitteena oli tuottaa monikielisen matkailuinformaation WWWhakupalvelun demonstraatioj¨arjestelma¨. Tarkoituksena oli, etta¨ MIETTA-hakupalvelun ka¨ytta¨j¨a voisi tehd¨a hakukyselyn omalla kielell¨a¨an ja saada ainakin jonkinlaisen vastauksen eli joukon dokumentteja samalla kielella¨, vaikka informaatio olisikin alunperin olemassa vain jollain toisella kielell¨a. T¨ama¨n monikielisyyden saavuttamiseksi ja¨rjestelma¨ss¨a ka¨ytettiin dokumenttien (WWW-sivujen) automaattista k¨aa¨nt¨amist¨a, kyselyjen k¨a¨ant¨amist¨a sek¨a kielest¨a riippumattomassa muodossa ollutta tietokantaa, jonka tiedoista tuotettiin kuvauksia eri kielilla¨.
MIETTA-matkailutietokanta sis¨alsi tietoja paikoista ja tapahtumista (MIETTA Project 2000b: 36­54).2 MIETTA-ja¨rjestelm¨a tuotti na¨ist¨a paikka- ja tapahtumatiedoista JTg2 Light -generointija¨rjestelma¨lla¨ lyhyit¨a luonnolliskielisia¨ kuvauksia k¨aytt¨aja¨n luettaviksi. Tavoitteena oli, ett¨a tietokannan tiedot olisivat mahdollisimman pitk¨alti kielest¨a riippumattomassa muodossa, jotta niista¨ voitaisiin tuottaa
2MIETTA-j¨arjestelma¨¨an kuului todellisuudessa useita (osa)tietokantoja. T¨ama¨n tyo¨ ei kuitenkaan k¨asittele muita kuin matkailuinformaatiota sis¨alt¨anytta¨ tietokantaa eli niin sanottua templaattitietokantaa (template database), joten ka¨yta¨n siit¨a ta¨ssa¨ nimityst¨a MIETTA-matkailutietokanta tai pelka¨st¨aa¨n tietokanta.

9
erikielisia¨ teksteja¨. MIETTA-matkailutietokannan tietojen kielesta¨ riippumattomuuden saavutta-
miseksi tietojen tyypit oli rajoitettu nimiin, osoitteisiin, aikailmauksiin, raham¨a¨ariin ja muihin numeerisiin arvoihin. Lisa¨ksi tietyt tietokannan kent¨at sisa¨lsiv¨at avainmerkkijonoja, jotka kuvattiin kielikohtaisiksi ilmauksiksi. Avainmerkkijonot kertoivat tietueen kuvaaman paikan tai tapahtuman luonteen tai t¨asmensiva¨t sit¨a: ne voivat ilmaista esimerkiksi tapahtuman tyypin ja ravintolan tarjoaman ruoan tyypin. Avainmerkkijonojen joukko oli ennalta m¨a¨aritelty, mutta laajennettavissa. J¨arjestelm¨a lokalisoi avainmerkkijonot sek¨a yksitta¨iset p¨aiva¨m¨a¨ara¨t ja kellonajat JTg2:n ja Javan standardikirjastojen tarjoamilla v¨alineill¨a. (MIETTA Project 2000b: 36­ 54.) T¨am¨a ty¨o ei k¨asittele n¨aiden ilmausten lokalisointia enempa¨¨a.
MIETTA-matkailutietokannan data oli pera¨isin hankkeen matkailuosapuolten tietokannoista. Suomesta mukana oli Turun seudun englanninkielist¨a dataa Matkailun edist¨amiskeskuksen PROMIS-dokumenttitietokannasta (Matkailun edista¨miskeskus b, Buitelaar et al. 1999: 7­8). Osa PROMISin sisa¨lt¨amist¨a tiedoista on n¨aht¨aviss¨a Finland Travel Guide -WWW-sivustolla (Matkailun edista¨miskeskus a).
MIETTA-hankkeen generointija¨rjestelm¨ana¨ k¨aytettiin JTg2 Light -j¨arjestelm¨aa¨ (jatkossa JTg2). JTg2 on matalan tason generointij¨arjestelma¨ (shallow generation system). Se on tarkoitettu lyhyiden, suhteellisten yksinkertaisten tekstien generointiin, eik¨a se sisa¨ll¨a mutkikkaampien generointitehta¨vien vaatimia suunnittelu- ja p¨a¨attelykomponentteja. Generointi voi yksinkertaisimmillaan olla lomakepohjaista (template-based), tai generointisa¨a¨nn¨oill¨a voi kuvata yhteydetto¨ma¨n kieliopin, jolloin generoinnin tulos voi vaihdella enemma¨n sy¨otteen mukaan. Lisa¨tietoja JTg2ja¨rjestelma¨st¨a on liitteessa¨ G.
1.4 Tarpeet, tavoitteet ja ratkaisun p¨a¨apiirteet
1.4.1 Hinta- ja aikailmaukset
MIETTA-tietokannassa oli tarve esitt¨a¨a yksitt¨aisten hintojen, pa¨iv¨ama¨a¨rien ja kellonaikojen lisa¨ksi myo¨s mutkikkaampia hinta- ja aikailmauksia. Esimerkiksi p¨aa¨symaksuissa voi olla eri alennusryhmia¨ tai ryhm¨an koosta riippuva alennus. Hotelleissa on tyypillisesti erihintaisia huonetyyppeja¨ ja lis¨ahintoja, kuten aamiaisen tai lis¨avuoteen hinta. Hinta voi my¨os riippua ajankohdasta. Aukioloajat voivat vaihdella viikonpa¨iva¨n ja kauden mukaan. Aikailmaukset voivat my¨os olla ei-numeerisia ajankohtia, kuten viikonloppuisin ja kesa¨lla¨.

10
Seuraavassa on muutamia esimerkkej¨a ilmauksista, jotka ja¨rjestelm¨an oli tarkoitus kattaa:
 Pa¨a¨symaksut:
50 mk, lapset 25 mk, opiskelijat ja ela¨kela¨iset 35 mk, va¨hint¨aa¨n 20 hengen ryhma¨t 40 mk/henkil¨o
 Hotellihinnat:
1 hh 580 mk/y¨o, 2 hh 670 mk, sviitti 800­1050 mk, lisa¨vuode 120 mk, aamiainen sis¨altyy hintaan; viikonloppuisin ja kesa¨lla¨ 1 hh 400 mk/yo¨, 2 hh 480 mk, lis¨avuode 100 mk
 Aukioloajat:
1.5.­30.9. ma­pe 11­10.30, la 10­14, su suljettu
 Tapahtumien p¨aiva¨m¨a¨ara¨t ja ajat:
21.5., 28.5., 4.6. ja 13.6.2001 alkaen klo 17 ja 19
Lisa¨¨a esimerkkej¨a on luvussa 3. T¨allaisten hinta- ja aikailmausten esitt¨aminen kielesta¨ riippumattomasti ei
ole yht¨a suoraviivaista kuin yksitta¨isten hintojen, p¨aiva¨ma¨¨arien tai kellonaikojen esitt¨aminen. Ilmausten muoto ja sis¨alto¨ voi vaihdella paljonkin tietueesta toiseen. Ilmausten esitysmuotoon vaikuttaa myo¨s se, ett¨a niist¨a ta¨ytyy pysty¨a tuottamaan vastaava luonnollisen kielen ilmaus eri kielill¨a ja t¨ama¨ ilmaus ta¨ytyy pysty¨a yhdista¨m¨aa¨n osaksi JTg2-j¨arjestelma¨n tuottamia paikkojen ja tapahtumien kuvauksia. Ilmausten olisi hyva¨ olla joko ihmisen kirjoitettavissa tai automaattisesti tuotettavissa jostakin muusta muodosta.
Toteutin hinta- ja aikailmausten kielesta¨ riippumattoman esitysmuodon merkkijonomuotoisena MIETTA-hankkeen alkupera¨isten suunnitelmien mukaisesti. Ta¨ss¨a ratkaisussa tietyt tietokannan kenta¨t voivat sisa¨lta¨¨a merkkijonon, joka on hintatai aikailmaus koodattuna tiiviiseen, kielesta¨ riippumattomaan muotoon. Tietokantarakenne on siis hinta- ja aikailmausten osalta yksinkertainen, vaikka ilmausten rakenne voi vaihdella paljonkin. Merkkijonomuotoisia ilmauksia ka¨sittelev¨a generointiohjelmakomponentti j¨asent¨a¨a ilmauksen ja generoi sit¨a vastaavan luonnolliskielisen ilmauksen.
Hinta- ja aikailmausten rakenteen esittelee luku 4.2 ja niiden esitysmuodot luku 4.3.

11
1.4.2 Generointi
MIETTA-ja¨rjestelm¨a tuottaa matkailutietokannan tietueista erikieliset luonnolliskieliset kuvaukset JTg2-generointij¨arjestelm¨alla¨. Hinta- ja aikailmausten tuottaminen olisi kuitenkin ollut hankalaa tai ehka¨ mahdotonta toteuttaa suoraan JTg2:n suhteellisen yksinkertaisilla va¨lineill¨a.
Toteutin hinta- ja aikailmausten generoinnin erillisella¨ hinta- ja aikailmausten generointiohjelmakomponentilla, joka na¨kyy JTg2:lle moduulina, joka poimii sy¨oterakenteesta halutun osan. JTg2 kutsuu ta¨ta¨ generointikomponenttia niille tietokantatietueen kentille, jotka sisa¨lt¨ava¨t tiiviiss¨a merkkijonomuodossa olevan hintatai aikailmauksen. Generointikomponentti ja¨senta¨a¨ kenta¨n sisa¨lta¨ma¨n ilmauksen, tuottaa sita¨ vastavan Java-tietorakenteen ja generoi siita¨ kielikohtaisten generointis¨a¨anto¨jen mukaan luonnolliskielisen ilmauksen. Generointikomponentti palauttaa t¨ama¨n ilmauksen JTg2:lle, joka yhdista¨a¨ sen tietueen muista osista generoimaansa tekstiin.
Generointikomponentin toimintaa kuvaa luku 4.4 ja sen ka¨ytt¨amien generointis¨aa¨nto¨jen ominaisuuksia luku 4.5.
1.4.3 Ilmausten muuntaminen kielest¨a riippumattomaan muotoon
Hinta- ja aikailmausten kielest¨a riippumaton merkkijonoesitysmuoto on melko tiivis, eika¨ syntaktisesti ja semanttisesti oikeiden ilmausten kirjoittaminen ole ihmiselle helppoa. Siksi olisi tarvetta muunnosohjelmalle, joka muuntaisi ilmauksia tiiviiseen kielest¨a riippumattomaan muotoon jostain sellaisesta muodosta, jota ihmisen olisi helpompi tuottaa. Ilmausten muuntamiselle olisi tarvetta myo¨s esimerkiksi muunnettaessa matkailuinformaation tuottajan tietokannassa valmiina olevia hinta- ja aikailmauksia MIETTA-tietokannan k¨aytta¨m¨aa¨n muotoon.
Muunnosohjelman tunnistama sy¨otemuoto voisi olla joko t¨aysin vapaata luonnollista kielta¨ tai jonkinlaista rajoitettua mutta melko luonnollista kielta¨. Rajoitettu kieli (controlled language) mahdollistaisi ilmausten muuntamisen ta¨sma¨llisemmin, koska rajoittamattomaton kieli sallii monitulkintaisuuksia ja ilmauksia tai katkelmia, joita muunnosohjelma ei pysty tulkitsemaan lainkaan.
Toisaalta voisi olla hyo¨dyllist¨a pysty¨a erista¨m¨aa¨n hinta- ja aikailmauksia my¨os juoksevasta tekstist¨a, esimerkiksi WWW-sivuilta, ja muuntamaan ne kielesta¨ riippumattomaan muotoon. Ta¨ssa¨ tapauksessa muunnosohjelman olisi tarpeen pysty¨a ka¨sittelem¨a¨an vapaata luonnollista kielta¨.

12
MIETTA-hankkeessa toteutin vain hyvin alustavan prototyypin ilmausten muuntimesta. Muunnin saa sy¨otteekseen tietynlaista rajoitettua kielt¨a, joka erityisesti hintailmausten osalta on kaukana luonnollisesta. T¨at¨a muunninta kuvaa lyhyesti luku 4.6.
1.4.4 Muita tarpeita
MIETTA-hankkeen alkuper¨aisissa¨ suunnitelmissa oli sallia hinta- ja aikailmauksia tutkivat hakukyselyt (Buitelaar et al. 1999: 73). T¨all¨oin MIETTA-ja¨rjestelma¨ olisi voinut sallia k¨aytta¨ja¨n tekeva¨n sopivassa muodossa esitettyina¨ esimerkiksi kyselyt Mita¨ konsertteja on t¨an¨a¨an?, Mitka¨ museot ovat auki maanantaisin kello 17 j¨alkeen ja Missa¨ hotelleissa yhden hengen huoneen hinta on alle 400 markkaa yo¨lta¨?. T¨allainen ominaisuus edellytta¨isi jonkinlaista pa¨a¨ttelyja¨rjestelma¨¨a, joka tutkisi, vastaako hinta- tai aikailmaus annettua ehtoa. T¨at¨a ominaisuutta ei kuitenkaan ehditty MIETTA-hankkeessa toteuttaa tai edes suunnitella tarkemmin.
1.5 Lokalisointij¨arjestelm¨an saatavuus
Hinta- ja aikailmausten lokalisointija¨rjestelma¨ on toteutettu Java-kielen versiolla 2 (Arnold et al. 2000), ja se on vapaasti saatavilla LGPL-lisensoituna (GNU Lesser General Public Lisence; Free Software Foundation 1999). Ja¨rjestelm¨a sis¨alta¨¨a hintaja aikailmausten Java-tietorakenteet, generointiohjelmakomponentin seka¨ ilmausten muunnosohjelman prototyypin.3 Ja¨rjestelm¨an mukana tulee k¨aytt¨oohje (Niemi 2001), esimerkkeja¨ tiiviissa¨ kielest¨a riippumattomassa merkkijonomuodossa olevista hinta- ja aikailmauksista sek¨a liitteen D kuvaamat esimerkkis¨aa¨nno¨st¨ot suomenja englanninkielisten ilmausten generoimiseksi.
Liitteen H sis¨alt¨ama¨lla¨ levykkeell¨a on lokalisointij¨arjestelm¨an versio 0.06.02. J¨arjestelm¨an tuoreimman version voi pyyta¨¨a s¨ahk¨opostitse osoitteesta jyrki. niemi@iki.fi.
1.6 Tyo¨n sis¨alt¨o ja rakenne
T¨ama¨n ty¨on loppuosan rakenne on seuraavanlainen. Luku 2 on lyhyt katsaus aiempaan tutkimukseen, joka sivuaa ta¨ta¨ ty¨ota¨, erityisesti aikailmausten generointia ja
3Ilmausten muuntimen prototyyppi ei ole LGPL-lisensoitu, koska se k¨aytt¨aa¨ kirjastoa, jonka lisenssi ei ole yhteensopiva LGPL-lisenssin kanssa (lisa¨tietoa luvussa 4.7).

13
monikielista¨ generointia. Luku 3 esittelee ty¨on pohjana ka¨ytetty¨a aineistoa, matkailualan hinta- ja aika-ilmauksia. Luku 4 on ty¨on pa¨¨aosa, joka esittelee toteutetun hinta- ja aikailmausten lokalisointij¨arjestelma¨n: hinta- ja aikailmausten rakenteen ja esitysmuodot; generointiohjelmakomponentin, generointisa¨¨anto¨formalismin ja MIETTA-hankkeessa toteutetut s¨a¨anno¨t; ohjelman, joka muuntaa ilmauksia kielest¨a riippumattomaan muotoon; seka¨ ja¨rjestelm¨an teknisen toteutuksen. Luku 5 arvioi t¨at¨a tyo¨ta¨ ja toteutettua lokalisointij¨arjestelma¨¨a sek¨a esittelee mahdollisia jatkotutkimuskohteita.
Liite A sisa¨lt¨a¨a esimerkkeja¨ hinta- ja aikailmauksista, niiden kielest¨a riippumattomasta muodosta ja generointiohjelman tuottamista suomen- ja englanninkielisist¨a ilmauksista. Liite B kuvaa ta¨m¨an raportin sis¨alt¨amissa¨ laajennetuissa yhteydetto¨missa¨ kieliopeissa k¨aytetyt merkint¨atavat. Liite C sisa¨lta¨a¨ hinta- ja aikailmausten kielesta¨ riippumattoman tiiviin merkkijonomuodon yhteydett¨om¨an kieliopin (context-free grammar). Liite D sisa¨lt¨a¨a MIETTA-hankkeessa toteutetut suomen ja englannin generointisa¨a¨nno¨st¨ot. Liite E sis¨alta¨¨a ilmausten kielesta¨ riippumattoman esitysmuodon Java-luokkahierarkian UML-luokkakaavioina. Liitteessa¨ F on tarkempia tietoja MIETTA-hankkeesta. Liitteessa¨ G on lisa¨tietoja JTg2 Light -generointij¨arjestelma¨sta¨. Liitteen H sis¨alt¨ama¨ levyke sisa¨lt¨aa¨ lokalisointija¨rjestelma¨n Java-ohjelmakoodin.
1.7 Ty¨oss¨a k¨aytetyt merkint¨atavat
Ta¨ss¨a ty¨oss¨a ka¨ytet¨a¨an seuraavia merkint¨atapoja. Kursiivilla esiteta¨a¨n tekstin seassa esiintyva¨t kielenainekset, sanat, lausekkeet ja generointitulokset sek¨a tekstissa¨ esiintyv¨at muuttujien nimet. Konekirjoituskirjaimin esiteta¨a¨n tiiviiss¨a merkkijonomuodossa olevat hinta- ja aikailmaukset; generointis¨a¨ann¨ot ja niiden nimet; tiedostonnimet; seka¨ Java-pakkausten, -luokkien ja -metodien nimet sek¨a muut Java-kieliset tunnukset. Ta¨rkeimpien termien ensimm¨aiset esiintym¨at on lihavoitu. Lihavoitua kursiivia k¨ayteta¨¨an kielenainesten sis¨aisiin korostuksiin ja niiden sis¨alta¨mien muuttujien merkitsemiseen. Tekstiin upotetuissa jonkin yksitt¨aisen alkion rakennekuvauksissa kirjaimelliset osat on kirjoitettu konekirjoituskirjaimin ja vaihtelevia osia vastaavat muuttujat kursiivilla.
Ty¨on sis¨alt¨am¨at ilmausten rakenteen ja esitysmuodon kieliopit luvussa 4.2 ja liitteess¨a C esiteta¨¨an sa¨a¨nn¨ollisill¨a lausekkeilla laajennettuina yhteydetto¨mina¨ kielioppeina (extended context-free grammar). Kieliopeissa ka¨ytetyt merkint¨atavat

14
on kuvattu liitteessa¨ B. Myo¨s generointis¨aa¨nto¨jen muodon kuvaus luvussa 4.5.4 k¨aytta¨¨a pitk¨alti samoja merkint¨atapoja.
2 Katsaus aiempaan tutkimukseen
Vaikka luonnollisen kielen generointia ka¨sitteleva¨a¨ kirjallisuutta onkin paljon, en ole l¨oyta¨nyt julkaisuja, jotka ka¨sittelisiva¨t sellaisten hinta- ja aikailmausten generointia, joita MIETTA-hankkeessa k¨asiteltiin. T¨ass¨a sovelluksesessa tavoite oli hyvin ka¨yt¨anno¨nla¨heinen, kohdealue pieni ja erikoistunut kielen osajoukko ja generointi matalan tason generointia. Suurin osa generointia k¨asittelevista¨ tieteellisista¨ julkaisuista l¨ahestyy generointia paljon teoreettisemmin ja laajemmin, virkkeiden ja tekstien generoinnin tasolla.
Ta¨ma¨n tyo¨n ka¨sittelema¨a¨ hinta- ja aikailmausten lokalisointia ja generointia sivuavat kuitenkin aikailmausten esitta¨mista¨ ja generointia sek¨a monikielist¨a generointia ka¨sitteleva¨t julkaisut. Hintailmausten generointi on v¨ahemm¨an kiinnostavaa etenkin teoreettisesta mutta ehk¨a my¨os ka¨yt¨ann¨ollisesta¨ n¨ak¨okulmasta; ainakaan en lo¨yta¨nyt sit¨a ka¨sittelevia¨ julkaisuja. On mahdollista, etta¨ hinta- ja aikailmausten lokalisointia on tarvittu monikielisissa¨ ohjelmistoissa tai esimerkiksi monikieliss¨a verkkokaupoissa, mutta usein sellaisista ja¨rjestelmista¨ ei ole dokumentaatiota saatavilla.
2.1 Aikailmaukset ja niiden generointi
Aikailmausten generointia ka¨sitteleva¨t julkaisut na¨ytt¨av¨at yleens¨a ka¨sitteleva¨n aivan toisentyyppisi¨a aikailmauksia kuin ta¨ssa¨ sovelluksessa, kuten deiktisi¨a aikailmauksia ja ajan ilmaisemista verbimuodossa.
Gagnon & Lapalme (1996) esittelee ajallisen (temporaalisen) informaation generointia ranskaksi Pr´etexte-ja¨rjestelm¨all¨a. J¨arjestelm¨a ka¨sittelee erityisesti ajan adverbiaalien mutta my¨os verbin aikamuotojen generointia. Ja¨rjestelm¨a esitta¨a¨ ajalliset k¨asitteet diskurssirepresentaatioteorian (Discourse Representation Theory, DRT) avulla, jota on ka¨ytetty aikainformaation esitt¨amiseen diskurssianalyysissa. Ja¨rjestelm¨assa¨ voi esitta¨¨a esimerkiksi tapahtumien ajankohtia ja tapahtumaketjun tapahtumien va¨lisi¨a ajallisia suhteita. Generointiin j¨arjestelma¨ taas ka¨ytt¨aa¨ systeemista¨ kielioppia (systemic grammar), johon myo¨s Penman-ja¨rjestelm¨a perustuu (Matthiessen & Bateman 1991: 8­10). J¨arjestelm¨a voi generoida seka¨ yksinker-

15
taisia kalendaarisia ett¨a deiktisia¨ aikailmauksia. Laajemmin Pr´etexte-ja¨rjestelma¨a¨ ja ajan esitta¨mista¨ diskurssirepresentaatioteoriassa k¨asittelee Gagnon'n v¨ait¨oskirja (1993). Matkailualan aikailmausten lokalisointiin t¨am¨antapainen j¨arjestelma¨ olisi ainakin sellaisenaan soveltunut huonosti: yht¨a¨alta¨ silla¨ ei olisi voinut esitta¨¨a monitasoisia aikailmauslistoja ja toisaalta tapahtumaketjun aikasuhteiden ka¨sittely olisi ollut tarpeetonta.
Forster (1989b) k¨asittelee ajan adverbiaalien, erityisesti prepositiolausekkeiden generointia yhdess¨a verbin aikamuodon kanssa. Aikailmausten generointia ka¨sittelev¨at myo¨s Forster (1989a) ja (1990), mutta niit¨a en ole k¨aytta¨nyt t¨ass¨a ty¨oss¨a la¨hteina¨, koska en saanut niit¨a k¨asiini.
Aikailmausten esitysmuotoa sivuaa Ohlbachin (1997, 2000) kalenterilogiikka, joka mahdollistaa erilaisten ajankohtien ja ajanjaksojen kuvaamisen yhtena¨isesti ja niiden vertailemisen. Kalenterilogiikassa aikailmaukset voidaan mielta¨a¨ yhten¨aisesti ajanhetkien ja aikav¨alien joukkoina. Puhdas joukkoesitysmuoto olisi kuitenkin soveltunut huonosti aikailmausten lokalisoinnin l¨ahto¨kohdaksi, koska siin¨a olisi esimerkiksi joutunut muuntamaan sanalliset erityisaikailmaukset vastaaviksi tarkoiksi ajanjaksoiksi. Kalenterilogiikkaa voisi kuitenkin ehka¨ ka¨ytt¨a¨a aikailmausten pa¨a¨ttelyja¨rjestelm¨an pohjana.
2.2 Monikielinen generointi
Monikielista¨ generointia ka¨sittelevista¨ julkaisuista voi saada ainakin yleisell¨a tasolla tietoja siit¨a, mit¨a monikielisen generoinnin syo¨temuodolta vaaditaan. Lis¨aksi muutamat julkaisut perustelevat monikielisen generoinnin tarpeellisuutta.
Ro¨snerin (1992: 306) mukaan monikielisen generoinnin perustelut n¨aytt¨ava¨t olevan kolmenlaisia: ka¨yta¨nno¨n tarpeet, lingvistiset perustelut ja generointija¨rjestelma¨n suunnitteluun liittyva¨t tekija¨t. Monissa tapauksissa monikielinen generointi voisi olla automaattisen tai ihmisen tekem¨an ka¨¨ant¨amisen vaihtoehto. Monikielinen generointi on kiinnostava kontrastiivisen kielitieteen na¨k¨okulmasta: miten eri kielet esitta¨va¨t saman sisa¨ll¨on. Generointija¨rjestelm¨an rakenteessa monikielisyys on myo¨s syy erottaa selvemmin generointikoneisto ja kielikohtainen data.
Myo¨s Bateman et al. (1991: 404­405) luettelee monikielisen generoinnin ka¨yta¨nn¨ollisia¨ ja teoreettisia syit¨a. Yksi merkitta¨va¨ ka¨yta¨nn¨ollinen syy ovat monikieliset yhteiskunnat ja kansainva¨linen ka¨ytto¨: monikielist¨a generointia k¨aytetta¨essa¨ v¨altett¨aisiin tilanne, jossa on yksi alkupera¨iskieli, jolla kirjoitetuista teksteist¨a teh-

16
d¨a¨an useita k¨a¨ann¨oksia¨. Teoreettisia syit¨a ovat monikielisten j¨arjestelmien mallintaminen, monikielist¨a generointia tukevien tieta¨myksen esitysmuotojen tutkiminen, monikielisen generoinnin mallien rakentaminen tekstitasolla virketason sijaan sek¨a sen tutkiminen, mitk¨a piirteet ovat erityisia¨ jollekin kielelle ja mitka¨ yhteisia¨ joukolle kielia¨ tai kaikille kielille.
Nirenburgin (1992: 303) mukaan monikielisen generoinnin sy¨otemuodon todellinen riippumattomuus kielesta¨ edellytta¨a¨ sit¨a, etta¨ sy¨otemuoto ei sis¨alla¨ mit¨aa¨n kielikohtaista informaatiota. Parhaassa tapauksessa ta¨llainen kielesta¨ riippumaton esitysmuoto tai va¨likieli (interlingua) olisi syntaksiltaan ja semantiikaltaan neutraali painottumatta mihinka¨¨an yksitta¨iseen luonnolliseen kieleen. Nirenburg (id.: 304) toteaa my¨os, etta¨ ka¨yta¨nn¨oss¨a kuitenkin yhden kielen generointi tietyst¨a kielesta¨ riippumattomasta esitysmuodosta tai v¨alikielesta¨ voi olla vaikeampaa kuin toisen.
Ro¨snerin (1992: 307) mukaan kielesta¨ riippumaton syo¨temuoto ei voi sisa¨lt¨a¨a sanoja eika¨ syntaktisia piirteit¨a, vaan sen t¨aytyy olla puhtaasti k¨asitteellisell¨a tasolla. Toisaalta syo¨tteen pit¨aisi sisa¨lta¨¨a kaikki sellainen tieto, joka tarvitaan kohdekielten vaatimien syntaktisten valintojen tekemiseksi. Na¨it¨a vaatimuksia on kuitenkin joskus vaikea toteuttaa k¨ayta¨nn¨ossa¨.
Bateman et al. (1991) kuvaa systeemis-funktionaaliseen typologiaan perustuvaa Penman-generointija¨rjestelm¨an (Matthiessen & Bateman 1991: erityisesti 8­10) laajennusta monikieliseksi. Batemanin et al. (1991: 390) mukaan aidosti monikielisten ja¨rjestelmien pit¨aisi perustua typologiaan ja niiden k¨aytta¨mien kieliresurssien pit¨aisi hyo¨dynta¨a¨ mahdollisimman paljon kielten yht¨ala¨isyyksi¨a. He painottavat sita¨, ett¨a kielten va¨liset erot ja yhta¨l¨aisyydet ovat ensisijaisesti funktionaalisia eiva¨tka¨ rakenteellisia. Generoinnissakin funktionaalisuuden ja tekstin kommunikatiivisen tavoitteen pit¨aisi s¨ailya¨ samana eri kieliss¨a, mutta generointituloksen rakenne voi vaihdella. Batemanin et al. kuvaaman j¨arjestelm¨an kieliresurssit sis¨alt¨av¨at oletusarvoisia osia, jotka ovat yhteisia¨ kaikille kielille (id.: 394­404). Milla¨ tahansa resurssien tasolla voi kuitenkin ma¨a¨ritella¨ osia, jotka koskevat yht¨a tai useampaa yksitta¨ist¨a kielta¨. Eri kielet tekeva¨t erilaisia kielellisi¨a erotteluja, joten joko generoinnin syo¨terakenteessa t¨aytyy olla riitta¨va¨sti informaatiota kaikkien kielten kannalta tai t¨aytyy k¨aytta¨a¨ jonkinlaista pa¨a¨ttely¨a tai oletusarvoja ma¨a¨rittelema¨tt¨omille tiedoille (id.: 402). Batemanin et al. (1991: 390) kuvaama ja¨rjestelm¨a on ollut pohjana my¨ohemmin kehitetylle monikieliselle kpml-ja¨rjestelma¨lle, jota esittelee laajemmin Bateman (1997).
Toisenlaisen n¨ako¨kulman monikieliseen generointiin tuo Rannan (2001b,

17
2001a, 2001c) Grammatical Framework (GF), joka on Martin-Lo¨fin tyyppiteoriaan (Nordstr¨om et al. 1990) perustuva kielioppiformalismi ja sen toteutus. GF:ssa ilmauksilla on kaksi muotoa: abstraktin syntaksin m¨aa¨rittelema¨ tyyppiteoreettinen formaali muoto (puurakenne) ja konkreettisen syntaksin m¨a¨arittelema¨ lineaarinen, yleens¨a luonnolliskielinen muoto. Sek¨a abstrakti ett¨a konkreettinen syntaksi m¨a¨aritella¨¨an sovelluskohtaisesti. Na¨iden kahden muodon v¨alill¨a voi siirty¨a kumpaankin suuntaan linearisointisa¨a¨nto¨jen perusteella: abstraktin formaalin muodon voi linearisoida eli siita¨ voi generoida luonnolliskielisen ilmauksen, ja konkreettisen syntaksin mukaisen (rajoitetun) luonnollisen kielen ilmauksen voi j¨asent¨a¨a formaaliin muotoon. Yhdelle abstraktille syntaksille voi olla useita rinnakkaisia, erikielisia¨ konkreettisia syntakseja. GF:ia voi siten ka¨ytt¨a¨a monikielisena¨ generointija¨rjestelm¨an¨a tai jopa rajoitetun kielen koneka¨¨anno¨sj¨arjestelma¨n¨a, jossa tyyppiteoreettinen formaali muoto on v¨alikielena¨. GF:lla voi tarkistaa my¨os tarkistaa abstraktin syntaksin mukaisen ilmauksen semanttisen oikeellisuuden tai tehd¨a ilmauksesta pa¨a¨telmi¨a. GF:ia on ka¨ytetty esimerkiksi luonnolliskielisten, oikeellisiksi osoitettujen formaalien todistusten generoimiseen. GF on toteutettu puhtaasti funktionaalisella Haskell-kielell¨a (Peterson & Chitil 2001).
Hinta- ja aikailmausten lokalisointij¨arjestelma¨lla¨ useita oli tarpeita, jotka GF olisi ehk¨a voinut t¨aytt¨aa¨: formaali, kielest¨a riippumaton generoinnin l¨aht¨omuoto, monikielinen generointi, luonnolliskielisten ilmausten ja¨senta¨minen formaaliin muotoon sek¨a formaaliin muotoon perustuva pa¨¨attely (kyselyjen tekeminen). Lo¨ysin GF:n kuitenkin vasta hinta- ja aikailmausten lokalisointij¨arjestelm¨an toteuttamisen j¨alkeen. Haskell-pohjaisen j¨arjestelm¨an integrointi Javaa k¨aytta¨va¨¨an MIETTA-ja¨rjestelm¨aa¨n olisi myo¨s saattanut olla vaikeaa tai tyo¨l¨asta¨. Hinta- ja aikailmausten tietokantaesitysmuodoksi olisi luultavasti joka tapauksessa tarvittu GF:n tyyppiteoreettisesta formaalista muodosta eroava tiivis merkkijonomuoto.
3 Aineisto
T¨am¨a luku kuvaa hinta- ja aikailmausaineistoa, jota k¨aytin hinta- ja aikailmausten kielesta¨ riippumattoman rakenteen suunnittelussa. Aliluku 3.1 ka¨sittelee aineiston yleista¨ luonnetta ja koostumusta sek¨a sit¨a, miten k¨aytin sit¨a hyv¨akseni. Aliluku 3.2 esittelee aineiston sisa¨lta¨mi¨a hintailmauksia ja johtaa niiden pohjalta alustavan kielesta¨ riippumattomien hintailmausten rakenteen. Aliluku 3.3 esittelee samalla tavalla aikailmauksia.

18
3.1 Aineiston luonne ja k¨aytto¨
Aineisto, jonka pohjalta suunnittelin hinta- ja aikailmausten kielest¨a riippumattoman rakenteen, koostui erilaisista aineksista. Tyo¨toverini Sirke Viitanen ker¨asi tarkoitusta varten hinta- ja aikailmauksia suomenkielisilt¨a WWW-sivuilta ja teki niiden pohjalta ensimma¨isen luonnoksen ilmausten rakenteesta. T¨ama¨n luonnoksen perusteella aloin suunnitella ilmausten rakennetta tarkemmin.
Myo¨hemmin ilmausten rakenteen yksityiskohtiin vaikutti erityisesti Matkailun edist¨amiskeskuksen PROMIS-tietokannan data, jota oli tarkoitus k¨aytt¨aa¨ MIETTAtietokannassa. PROMIS-datan hinta- ja aikailmaukset olivat kuitenkin paikoitellen varsin ep¨ayhtena¨isesti merkittyja¨, ja tietokannan hinta- ja aikakenta¨t saattoivat sis¨alt¨a¨a paljon muutakin tietoa. Vaikka PROMIS-data olikin p¨aa¨osin englanninkielista¨, se oli suomalaisten kirjoittamaa eiva¨tk¨a sen sis¨alt¨ama¨t hinta- ja aikailmaukset la¨hesk¨aa¨n aina noudattaneet englannin kielen ka¨yta¨nt¨oja¨. Myo¨s MIETTA-hankkeen muut osapuolet kertoivat, millaisia rakenteita heida¨n tietokantojensa sisa¨lt¨ama¨t hinta- ja aikailmaukset vaatisivat.
Tutkin WWW-sivuilla ka¨ytettyj¨a ilmauksia jonkin verran myo¨s generoinnin na¨k¨okulmasta: millaisia tulosilmauksia generointikomponentin pita¨isi pystya¨ tuottamaan.
Kaiken kaikkiaan en kuitenkaan nojautunut pelka¨st¨aa¨n aineistoon, vaan luotin usein omaan na¨kemykseeni siit¨a, millaisia hinta- ja aikailmauksia matkailualalla tarvitaan. En myo¨sk¨a¨an kera¨nnyt ilmauksista varsinaista yhtena¨ist¨a korpusta.
3.2 Hintailmaukset
Seuraavassa on esimerkkej¨a hintailmauksista, jotka olivat kielest¨a riippumattoman esitysmuodon kehitt¨amisen pohjana. Kunkin ilmauksen yhteydessa¨ on maininta sen erityispiirteista¨, jotka vaikuttivat kielesta¨ riippumattomaan esitysmuotoon. Ilmaukset ovat pera¨isin WWW-sivuilta ja PROMIS-tietokannasta, mutta olen paikoitellen yhdista¨nyt ja tiivista¨nyt niit¨a sek¨a muokannut niiden kieliasua.
1. aikuiset 40,­, lapset 4­11 v. 20,­, alle 4-v. ilmaiseksi, perhe (2 aikuista ja 2 lasta) 100,­, ryhm¨at (va¨h. 15) ­10 %
Pa¨¨asymaksut ovat usein erilaiset erilaisille ihmisryhmille. Hinta voi olla erilainen eri ika¨isille lapsille ja perhelipun kattaman perheen koko voi olla ma¨¨aritelty. Varsinaisten numeeristen hintojen lis¨aksi voi olla myo¨s sanallisesti il-

19
maistuja hintoja, kuten t¨ass¨a ilmaiseksi. Ryhmille voi olla jonkinlainen alennus, joka on t¨assa¨ alennus on ilmoitettu prosentuaalisena. Ryhma¨alennukseen oikeuttavan ryhm¨an va¨himm¨aiskoko on usein mainittu.
2. aikuiset 40,­ lapset (6­12 v) 20,­ ryhma¨t yli 20 henk. ­5,­ Ryhma¨n alennus voi myo¨s olla absoluttinen, valuuttama¨a¨ra¨inen.
3. Aikuiset 30,­ mk Lapset, opiskelijat ja ela¨kela¨iset 20,­ mk Yli kymmenen hengen ryhm¨at ryhma¨t 15,­ mk/henk P¨aa¨symaksu voi olla sama usealle eri ihmisryhma¨lle. Ryhm¨ahinnat sisa¨lt¨ava¨t usein tiedon siit¨a, onko hinta henke¨a vai ryhma¨a¨ kohti.
4. Aboa Vetus 35/30; Ars Nova 35/30. Yhteislippu 50/45/40. Perhelippu 120 mk Yksi kohde voi sis¨alt¨aa¨ useita osakohteita, joihin on eri liput. Lippujen hinnat on voitu ilmoittaa ilman vastaavien ihmisryhmien ilmoittamista, tyypillisesti vinoviivoin erotettuina.
5. FIM 40­150 Erillisi¨a hintaryhmi¨a ei va¨ltta¨ma¨tt¨a ole. Hinnalle voi olla ilmoitettu jokin vaihteluv¨ali. Valuuttatieto on ta¨rke¨a erityisesti monikielisess¨a ja kansainva¨liseen levitykseen tarkoitetussa informaatiossa.
6. from FIM 135/person, min 10 persons in the group Hinta voi olla alkaen-hinta.
7. 1999: single 260 FIM/night, double 360 FIM/night, 100 FIM extra bed Hinta voi olla voimassa tiettyna¨ aikana. Hotellihuoneita on eri tyyppisia¨ ja lisa¨ksi voi olla lis¨avuoteen tai muiden lis¨apalvelujen hintoja. Hinnat ovat tyypillisesti yo¨t¨a kohti, mit¨a ei useinkaan erikseen mainita.
8. 550 FIM/person/programme Hinta voi olla henkea¨ kohti ja lisa¨ksi esimerkiksi ohjelmaa kohti.
9. 70 FIM / person, summertime 80 FIM Hinta voi vaihdella ajankohdan mukaan.

20
10. FIM 270,­ + VAT 22 % / person
Hinta voi sis¨alt¨a¨a tai olla sisa¨lt¨ama¨tt¨a arvonlis¨averon, jonka suuruus voidaan mainita.
11. 2.928 FIM/group + 388 FIM/person
Hinta voi koostua ryhm¨ahinnasta ja lis¨ahinnasta henkea¨ kohti.
12. FIM 850,­ / person in a double room with breakfast, FIM 300,­ supplement for a single room
Perushinta voi sisa¨lt¨a¨a majoituksen tietyntyyppisessa¨ huoneessa, ja paremmasta huoneesta on lis¨amaksu. Majoitushinta voi sis¨alt¨a¨a aamiaisen.
N¨aiden ilmaustyyppien lisa¨ksi PROMIS-tietokannassa majoitushinnat oli yleens¨a jaettu eri kenttiin: erikseen yhden ja kahden hengen huoneen hinnat ja mahdolliset lisa¨maksut. Lis¨aksi oli ilmoitettu erikseen mahdolliset erityishinnat, jotka olivat tyypillisesti voimassa viikonloppuisin ja kesa¨lla¨. M¨okkimajoituksessa oli eri hinnat erikokoisille mo¨keille; koot oli ilmoitettu vuodema¨a¨rina¨. Niiss¨a oli my¨os usein erikseen hinnat viikonloppua ja viikkoa kohti. Rooman kaupungin ka¨ytta¨m¨an InformaRoma-matkailutietokannan hotellihinnoissa puolestaan oli usein erilliset hinnat kylpyhuoneellisille ja kylpyhuoneettomille huoneille.
Yll¨a kuvattujen ilmausten perusteella hintailmausten rakenteelle voi johtaa seuraavanlaisia vaatimuksia. Hintailmaus koostuu listasta eri hintaryhmi¨a (asiakasryhmi¨a tai palvelutyyppeja¨), jotka on yleens¨a nimetty. Hintaryhm¨aa¨n voi liittya¨ m¨a¨arite, esimerkiksi ik¨a, ryhma¨n koko tai vuodem¨aa¨r¨a. Ma¨¨arite voi olla va¨li-ilmaus tai minimi- tai maksimiarvo. Usealla hintaryhm¨alla¨ voi olla sama hinta. Itse hinta voi olla joko tavanomainen, absoluuttinen hinta, prosentuaalinen tai absoluuttinen alennus tai sanallisesti ilmaistu erityishinta. Hinta voi olla myo¨s v¨ali-ilmaus tai minimiarvo. Hintaan voi liittya¨ valuuttatunnus. Hinta voi olla ilmoitettu jotain yksikko¨a¨ kohti, esimerkiksi henke¨a, ryhm¨a¨a tai yo¨t¨a kohti. Hinta voi sis¨alt¨aa¨ ma¨a¨ritteen¨a esimerkiksi tiedon arvonlisa¨veron sisa¨ltymisest¨a hintaan. Hintalistaan voi my¨os liittya¨ aikailmaus, joka ilmaisee hintojen voimassaoloajankohdan.
Ylla¨ olevat esimerkki-ilmaukset sisa¨lta¨v¨at muutamia rakenteita, joita ei pysty ilmaisemaan kehitta¨ma¨ss¨ani hintailmausten kielesta¨ riippumattomassa muodossa. Ta¨llaisia ovat esimerkin 4 erilliset osakohteet ja vinoviivoilla erotetut nimetto¨ma¨t hintaryhm¨at. Muutamat ilmaukset puolestaan voi ilmaista kielest¨a riippumattomassa muodossa vain sellaisella tavalla, jota voi pita¨¨a kielesta¨ riippumattoman

21
rakenteen va¨a¨rinka¨ytto¨na¨. T¨allaisia ovat esimerkin 1 sisa¨lt¨am¨a perheen koko seka¨ esimerkin 11 sisa¨lta¨m¨at ryhm¨ahinta ja henkilo¨kohtainen lisa¨hinta. N¨aita¨ puutteita ja niiden korjaamisen vaikeusastetta k¨asittelee tarkemmin luku 5.3.2.
3.3 Aikailmaukset
Seuraavassa on esimerkkej¨a kielest¨a riippumattoman esitysmuodon perustana olleista aikailmauksista. Kuten edell¨a hintailmausesimerkeiss¨a, kunkin ilmauksen yhteydessa¨ on maininta sen erityispiirteista¨, jotka vaikuttivat kielesta¨ riippumattomaan esitysmuotoon. Myo¨s na¨m¨a aikailmaukset ovat per¨aisin WWW-sivuilta ja PROMIStietokannasta.
1. 1.6.­31.8. ke­la klo 12­15, to my¨os 18­20, su klo 9­12, ma­ti suljettu Aikailmaus voi sis¨alt¨a¨a pa¨iv¨am¨aa¨rien, viikonp¨aivien ja kellonaikojen listoja ja v¨aleja¨: tietyt aukioloajat ovat voimassa tiettyina¨ viikonpa¨ivina¨ tiettyyn aikaan vuodesta. Yksitta¨isena¨ viikonpa¨iva¨na¨ voi olla lisa¨aika viikonpa¨iva¨v¨aliin liittyva¨n ajan lisa¨ksi, kuten t¨ass¨a torstain kohdalla. Aika voi olla my¨os erityisaikailmaus, kuten suljettu.
2. 1.5.­31.8. klo klo 11­18, paitsi ti ja to klo 11­20, huhtikuussa ja syyskuussa klo 11­15 ja 17­19, muina aikoina sopimuksen mukaan Ilmaus voi sis¨alt¨aa¨ useita ajanjaksoja, jolloin on eri (aukiolo)ajat. Ilmaus voi sisa¨lt¨a¨a poikkeusta kuvaavan paitsi-ilmauksen. Kokonaisten p¨aiv¨ama¨¨arien sijaan ajanjakson voi ilmaista pelkkin¨a kuukausina. Viikonpa¨ivi¨a ei tarvitse mainita, jos tiedot pa¨teva¨t joka pa¨iva¨. Kellonaikav¨aleja¨kin voi olla useita. Ilmaus voi sis¨alta¨a¨ tiedon erikseen mainittujen aikojen ulkopuolisista aukioloajoista, jonka voi ilmaista esimerkiksi sopimuksen mukaan. T¨ata¨ voi pit¨a¨a era¨a¨nlaisena erityisaikailmauksena.
3. p¨aivitt¨ain klo 9.00­20.00 (huomioitava kirkolliset toimitukset) Ilmaus voi sis¨alt¨a¨a eksplisiittisen p¨aivitt¨ain tai joka p¨aiva¨ -tiedon. Ilmaukseen voi liitty¨a huomautus.
4. ti ja to klo 19.00, ke, la ja su klo 15.00 ja 19.00, maanantaisin, perjantaisin, juhannuspa¨iv¨an¨a ja juhannussunnuntaina ei na¨yto¨ksia¨ Tapahtumien ajankohdat ovat usein yksitta¨isi¨a kellonaikoja eiv¨atka¨ va¨lej¨a. ErityisAikailmauksia ovat my¨os esimerkiksi juhlap¨aivien nimet.

22
5. 29.7. klo 20.30 (ensi-ilta), 30.7. klo 20.30, 31.7. klo 20.30, 1.8. klo 21.00 Aikailmaukseen voi liitty¨a tapahtumaa kuvaava m¨aa¨rite, kuten t¨assa¨ ensi-ilta.
6. joka kuukauden viimeisen¨a maanantaina Aikailmaus voi olla muotoa joka x:n n:nten¨a y:na¨.
7. 3.6.­16.8. su klo 11­13, kes¨akahvila su klo 11­13, urkuvartti ke klo 16.00 Eri osakohteilla voi olla erilaiset aukiolo- tai muut ajat.
8. Mon 14­19, Tue-Sun 10­15, from 16 Apr daily 10­18 P¨aiv¨ama¨¨ara¨ilmaus voi olla myo¨s alkaen-ilmaus (tai asti ).
9. 1.1.­31.12.2001 Friday­Monday, 15.6.­19.8.2001 every day Viikonp¨aiviin ei tarvitse liitty¨a kellonaikoja. P¨aiva¨m¨a¨ara¨t voivat sis¨alta¨a¨ my¨os vuoden.
10. 1.6­10.8 Mon­Fri 10­16, Sat­Sun 12­15, off-season Tue­Sun 12­15 Erityisajanjakso voi olla myo¨s melko ep¨am¨a¨ara¨inen, kuten off-season.
Na¨iden esimerkkien kuvaamien ilmaustyyppien lisa¨ksi aineistossa oli luonnollisesti esimerkiksi yksitt¨aisia¨ p¨aiva¨ma¨¨aria¨ ja erilaisia p¨aiv¨am¨a¨ar¨ava¨lej¨a yhden kuukauden sis¨alla¨, kuukausien v¨alilla¨ tai vuosien va¨lilla¨. Aineistossa oli myo¨s muutamia ilmauksia, joissa ajankohta ilmaistiin vuodenviikkoina.
Aikailmausten rakenteelle voi johtaa seuraavanlaisia vaatimuksia. Ilmaukset ovat kerroksellisia tai hierarkkisia: ylimm¨alla¨ tasolla ovat pa¨iv¨ama¨¨ar¨at, keskell¨a viikonpa¨iva¨t ja alimmalla tasolla tunnit. Kullakin tasolla voi olla yksitta¨isia¨ alkioita, va¨li-ilmauksia, alku- ja loppuilmauksia sek¨a na¨ista¨ koostuvia listoja. Ilmauksen ei tarvitse sisa¨lta¨¨a kaikkia hierarkian tasoja. Lisa¨ksi p¨aiv¨am¨aa¨r¨at voivat olla hierarkkisia: vuodet, kuukaudet ja kuukaudenp¨aiv¨at sek¨a lis¨aksi vuodenviikot. Kuukauden sis¨all¨a voi olla kuukaudenpa¨iva¨v¨ali ja aukioloajat voidaan ilmaista esimerkiksi vuosittain p¨aiv¨ama¨a¨rin¨a. Ilmauksen kukin taso voi sis¨alta¨¨a myo¨s poikkeusaikailmauksen. Kullakin tasolla voi esiintya¨ sanallisia erityisaikailmauksia.
Toteuttamani aikailmausten kielesta¨ riippumaton rakenne ei pysty kuvaamaan aivan kaikkia esimerkkien sis¨alta¨mia¨ rakenteita. Aikailmauksiin ei voi liitt¨a¨a huomautuksia tai tapahtumaa kuvaavaa ma¨¨aritteita¨, kuten esimerkeissa¨ 3 ja 5. Hintailmausten tapaan aikailmauksissakaan ei pysty merkitsem¨aa¨n eri osakohteisiin liittyvi¨a ilmauksia, kuten edella¨ esimerkiss¨a 7. Muotoa joka x:n n:ntena¨ y:na¨ olevia

23
ilmauksia (esimerkki 6) ei pysty ilmaisemaan ja tuottamaan yleisella¨ tavalla. N¨aita¨ puutteita k¨asittelee tarkemmin luku 5.3.3.
4 Ratkaisu ja j¨arjestelm¨an toteutus
T¨am¨a luku kuvaa MIETTA-hankkeessa toteuttamani matkailualan hinta- ja aikailmausten lokalisointija¨rjestelm¨an. Aliluku 4.1 kuvaa j¨arjestelma¨n ka¨sittelemien hinta- ja aikailmausten rajaukset: mita¨ rakenteita on otettu mukaan ja mita¨ ja¨tetty ulkopuolelle. Aliluku 4.2 kuvaa j¨arjestelm¨an k¨asittelemien kielesta¨ riippumattomien hinta- ja aikailmausten rakenteen, aliluku 4.3 puolestaan j¨arjestelm¨an ka¨ytt¨ama¨t ta¨llaisten ilmausten esitysmuodot. Aliluku 4.4 kuvaa ohjelmakomponentin, joka tuottaa kielest¨a riippumattomassa esitysmuodossa esitetyist¨a ilmauksista luonnolliskielisia¨ ilmauksia. Aliluku 4.5 kuvaa ta¨m¨an generointiohjelman k¨aytt¨ama¨n generointis¨aa¨nto¨j¨arjestelm¨an. Aliluku 4.6 kuvaa muunnosohjelman, joka muuntaa rajoitetulla luonnollisella kielella¨ ilmaistuja hinta- ja aikailmauksia kielest¨a riippumattomaan muotoon. Aliluku 4.7 k¨asittelee lyhyesti j¨arjestelma¨n teknist¨a toteutusta.
T¨ama¨ luku kuvaa hinta- ja aikailmausten lokalisointij¨arjestelma¨n eri osia enimma¨kseen melko yleisella¨ tasolla. Tarkempia tietoja j¨arjestelma¨st¨a, erityisesti hintaja aikailmausten tiiviista¨ merkkijonomuodosta seka¨ generointisa¨¨ann¨oista¨, on ja¨rjestelma¨n k¨aytto¨ohjeessa (Niemi 2001).
4.1 Hinta- ja aikailmausten rajaukset
Lokalisoitavien hinta- ja aikailmausten rakenteeseen vaikuttaa se, miten n¨ama¨ ilmaukset rajataan: mitk¨a ilmaukset katsotaan kuuluviksi hinta- ja aikailmauksiin ja mitka¨ ilmaukset voidaan k¨asitella¨ paremmin muulla tavalla, MIETTA-hankkeen tapauksessa esimerkiksi JTg2-generointij¨arjestelm¨alla¨.
Hintailmaukset voisi rajata tiukimmillaan sisa¨lta¨m¨aa¨n vain varsinaisia numeerisia hintoja valuuttoineen. Erityisesti hintojen osalta t¨am¨a la¨hestymistapa edellytta¨isi hintaryhmien (asiakas- tai tuoteryhmien) ja niiden ma¨¨aritteiden seka¨ hintojen voimassaoloaikojen ilmaisemista hintailmausten ulkopuolella. Mahdollisia hintaryhmi¨a ja hintojen ma¨¨aritteita¨ on periaatteessa rajoittamaton ma¨¨ara¨, mutta ka¨yta¨nno¨ssa¨ niit¨a on yhdess¨a sovelluksessa tai tietokannassa kohtuullinen ma¨¨ar¨a. Hintaryhmia¨ ovat esimerkiksi aikuiset, alle 15-vuotiaat lapset ja yhden hengen huone, hinnan ma¨a¨rite esimerkiksi henke¨a kohti. Jos na¨m¨a ja¨tett¨aisiin hintailmausten loka-

24
lisointij¨arjestelm¨an ulkopuolelle, j¨arjestelma¨n ka¨sitelt¨aviksi ja¨isiva¨t oikeastaan pelk¨at numeeriset hinnat ja valuuttatunnukset (esimerkiksi 80 mk, $12 ), joten tehta¨v¨a¨an riitt¨aisi varsin yksinkertainenkin ja¨rjestelma¨. Erityisesti hintaryhma¨t ovat kuitenkin niin yleisia¨ matkailualan hintailmauksissa, ett¨a ne pita¨isi joka tapauksessa lokalisoida jollain tavalla. Hintaryhmien ja¨tt¨aminen varsinaisten hintailmausten lokalisointija¨rjestelma¨n ulkopuolelle mutkistaisi siis ta¨m¨an ja¨rjestelm¨an ulkopuolisia osia, joten ne on tarpeen sis¨allytta¨¨a ta¨h¨an ja¨rjestelm¨a¨an.
Aikailmauksia voisi rajata esimerkiksi rajoittamalla ilmausten sisa¨lt¨amien aikahierarkiatasojen ma¨¨ar¨a¨a tai ja¨tta¨m¨all¨a ilmausten ulkopuolelle sanalliset erityisaikailmaukset (esimerkiksi viikonloppuisin, jouluviikolla). Hierarkiatasoja voisi rajoittaa esimerkiksi sallimalla vain kokonaiset pa¨iv¨ama¨¨ara¨t, jotka sis¨alta¨va¨t p¨aiva¨n, kuukauden ja vuoden, seka¨ viikonp¨aiva¨t ja tunnit. T¨allo¨in esimerkiksi p¨aiv¨ama¨a¨ra¨v¨ali 1.­15.2.2002 pit¨aisi ilmaista 1.2.2002­15.2.2002. Ta¨llainen aikahierarkian keinotekoinen rajoittaminen ei kuitenkaan merkitta¨va¨sti yksinkertaistaisi ilmausten rakennetta tai lokalisointij¨arjestelma¨¨a. Erityisaikailmauksia taas esiintyy kohtalaisen paljon ja ne on suhteellisen helppo toteuttaa.
Yksi matkailukohde voi sisa¨lt¨aa¨ useita osakohteita: esimerkiksi yhdess¨a rakennuksessa voi toimia useita eri museoita tai yksi tapahtuma voi koostua useista osatapahtumista. Osakohteita sis¨alt¨av¨ast¨a ilmauksesta on esimerkki edella¨ luvussa 3.2 esimerkki 4. N¨ailla¨ osakohteilla on usein eri hinta- ja aukioloaikatiedot, mutta ne voi olla esitetty yhdessa¨ joko taulukkona tai tekstina¨. T¨allaisten osakohteiden merkitsemisen olen kuitenkin j¨att¨anyt hinta- ja aikailmausten lokalisointij¨arjestelm¨an ulkopuolelle. Olen katsonut, etta¨ ne eiva¨t ole olennainen osa hinta- ja aikailmauksia. Etenka¨¨an osakohdetietoja sis¨alt¨ava¨t aikailmaukset eiva¨t ena¨¨a olisi puhtaita aikailmauksia. Osakohdetietoja sisa¨lt¨ava¨t ilmaukset t¨aytyy siis jakaa siten, etta¨ kuhunkin osakohteeseen liittyy oma hinta- tai aikailmauksensa. Ylemm¨an tason ja¨rjestelma¨ voi sitten haluttaessa yhdist¨a¨a osakohdeilmaukset sopivalla tavalla. Osakohdeilmausten salliminen voisi joissain tapauksissa yksinkertaistaa hinta- ja aikailmausten ulkopuolella tarvittavia rakenteita, tietokantarakennetta ja generointisa¨a¨nt¨oj¨a.
Luvut 3.2, 3.3 ja 5.3 kuvaavat useita ilmaustyyppeja¨, joita ei voi ka¨sitell¨a ta¨ma¨n ty¨on kuvaamalla hinta- ja aikailmausten lokalisointija¨rjestelm¨all¨a. Useimmissa tapauksissa on tietoisen ja perustellun rajauksen sijaan kyse siit¨a, etta¨ en ottanut ilmaustyyppia¨ huomioon ilmausten kielest¨a riippumattoman rakenteen suunnitteluvaiheessa ja ilmaustyypin lisa¨¨aminen ja¨rjestelma¨¨an olisi suhteellisen tyo¨l¨asta¨.

25
4.2 Hinta- ja aikailmausten rakenne
4.2.1 Perusperiaatteet
Ja¨rjestelm¨an hinta- ja aikailmaukset koostuvat kolmentyyppisista¨ perusalkioista: numeerisista aikailmauksista, lukuilmauksista ja merkkijonotunnuksista (identifier).
Numeerinen aikailmaus voi olla vuosi, kuukausi, kuukaudenp¨aiv¨a tai jokin na¨iden yhdistelma¨ (paitsi vuosi ja kuukaudenpa¨iva¨, joka ei ole mieleka¨s), vuodenp¨aiv¨a, viikonp¨aiv¨a, tunti tai tunti ja minuutit. Myo¨s viikonpa¨iv¨at ilmaistaan numeerisesti. Lukuilmaus voi olla ei-negatiivinen kokonais- tai desimaaliluku.
Merkkijonotunnus voi olla mika¨ tahansa pelkist¨a kirjaimista koostuva merkkijono.4 Merkkijonotunnuksilla ilmaistaan muiden muassa hintaryhma¨t ja ei-numeeriset aikailmaukset. Merkkijonotunnuksilla ei ole kiinteit¨a merkityksia¨, vaan generointisa¨¨ann¨ot m¨aa¨ra¨¨av¨at kunkin tunnuksen merkityksen, eli ka¨yt¨anno¨ss¨a merkkijonon, jonka sa¨a¨nno¨t siita¨ tuottavat. Eri yhteyksissa¨ voi ka¨ytta¨a¨ samoja merkkijonotunnuksia eri merkityksiss¨a eli niill¨a on eri nimiavaruus: esimerkiksi merkkijonotunnus ch voi olla sek¨a hintaryhm¨an etta¨ ei-numeerisen aikailmauksen tunnus.
Mutkikkaammat hinta- ja aikailmaukset koostuvat ta¨llaisten perusalkioiden listoista, joita voi olla usealla tasolla sis¨akk¨ain. Listat voivat sis¨alt¨aa¨ myo¨s kahden numeerisen aikailmauksen tai lukuilmauksen muodostamia va¨li-ilmauksia. Va¨li-ilmauksen loppuarvo voi olla my¨os pienempi kuin alkuarvo, mika¨ mahdollistaa esimerkiksi ilmaukset klo 20­02 ja lauantaista maanantaihin. Ja¨rjestelma¨ ei tarkista v¨ali-ilmausten mielekkyytt¨a miss¨a¨an vaiheessa. V¨ali voi olla my¨os toisesta suunnasta rajoittamaton eli se voi kuvata alku- tai loppuarvoa.
Yksi hinta- tai aikailmaus koostuu siis yhdesta¨ tai useammasta osailmauksesta, jotka voivat edelleen koostua (toisentyyppisist¨a) osailmauksista tai listasta osailmauksia. Ilmauksen voikin ajatella rakenteeltaan puuksi, jossa kukin (ali)puu kuvaa yhta¨ (osa)ilmausta. Ta¨llaisen (ali)puun mahdolliset lapsisolmut (alipuut) kuvaavat sen osailmaukset. Puun solmut ovat tyypitettyja¨: solmun tyyppi on solmusta alkavaa (ali)puuta vastaavan ilmauksen tyyppi. Ilmauspuun juuri on tyypilt¨a¨an kokonainen hinta- tai aikailmaus. Puun lehtisolmut taas ovat jotain perusalkiotyyppi¨a: numeerisia aikailmauksia, lukuilmauksia tai merkkijonotunnuksia. Ne eiv¨at en¨a¨a jakaannu osailmauksiin. Ilmauksen voisi esitta¨¨a my¨os puurakenteen kanssa yhta¨pita¨-
4Ja¨rjestelm¨a sallii tunnuksissa periaatteessa kaikki Unicode-merkist¨on kirjaimiksi luokitellut merkit (Unicode Consortium 1996: 4-14­4-15). Ka¨yta¨nno¨ssa¨ sallittu merkist¨o riippuu syo¨tteen ja generointis¨aa¨nto¨tiedostojen merkist¨osta¨. Esimerkiksi jos merkist¨ona¨ on ISO 8859-1, tunnuksissa voi k¨aytt¨a¨a vain siihen kuuluvia kirjaimia.

26
v¨asti termein¨a: termin funktori vastaa ilmauksen tyyppi¨a ja termin argumentit osailmauksia.
Seuraavissa, hinta- ja aikailmauksen rakennetta tarkemmin kuvaavissa aliluvuissa sanotaan usein ilmauksen a koostuvan ilmauksista b ja c. Se tarkoittaa sita¨, ett¨a tyyppi¨a a olevalla ilmauksella on osailmaukset, jotka ovat tyyppi¨a b ja c.
4.2.2 Hintailmauksen rakenne
Hintailmauksen perusosat ovat hintaryhm¨a ja itse hinta. Hinta ja nollan tai useamman hintaryhma¨n lista muodostavat yhdess¨a hinta-alkion.5
Hintaryhm¨a koostuu ryhm¨an tunnuksesta ja mahdollisista tarkentavista m¨a¨aritteist¨a, joita voi olla nolla tai useampia. P¨a¨asymaksuissa ja vastaavissa hintaryhma¨ on yleens¨a alennukseen oikeutettu asiakasryhma¨, esimerkiksi lapset tai ela¨kela¨iset. Hotellihinnoissa se taas on yleensa¨ huonetyyppi tai esimerkiksi aamiainen. Hintaryhma¨n ma¨¨arite tarkentaa hintaryhm¨a¨a. Se on merkkijonotunnus, johon voi valinnaisesti liitty¨a lukuarvo tai lukuarvov¨ali. Ma¨a¨ritteell¨a voi ilmaista esimerkiksi sen, onko hotellihuoneessa kylpyhuone vai ei, jolloin ma¨¨aritteeseen ei liity lukuarvoa. Ma¨a¨ritteell¨a voi ilmaista myo¨s sen, miten suuri ryhm¨a vaaditaan ryhma¨alennukseen, jolloin ma¨a¨ritteeseen liittyva¨ lukuarvov¨ali ilmaisee ryhm¨an vaaditun koon.
Itse hinta koostuu varsinaisesta hinta-arvosta ja mahdollisista tarkentavista ma¨a¨ritteist¨a, joita voi olla nolla tai useampia. Hinta-arvo voi olla joko numeerinen tai merkkijonotunnus. Merkkijonotunnuksia k¨aytet¨a¨an ei-numeerisista hintaa kuvaavista ilmauksista, esimerkiksi ilmainen, sopimuksen mukaan. Numeerinen hinta voi olla joko tavanomainen, absoluuttinen hinta tai alennus joko absoluuttisena tai prosentteina. Na¨in voidaan ilmaista esimerkiksi se, ett¨a lasten sisa¨¨anpa¨a¨symaksu on puolet aikuisilta peritt¨ava¨st¨a. Absoluuttiseen hintaan tai alennukseen voi valinnaisesti liittya¨ valuutan merkkijonotunnus.
Hinnan ma¨a¨ritteet ovat muodoltaan samanlaiset kuin hintaryhma¨nkin. Niilla¨ voi ilmaista esimerkiksi sen, sis¨altyyko¨ hintaan vero vai ei ja haluttaessa my¨os veroprosentin suuruuden. Niilla¨ voi ilmaista my¨os sen, etta¨ hinta on henkil¨oa¨, ryhm¨aa¨, tuntia, pa¨iva¨a¨, viikkoa tai jotain muuta yksikko¨¨a kohti.
Yksi hintailmaus koostuu yhdesta¨ tai useammasta hinta-alkioryhm¨ast¨a, jotka ovat hinta-alkioiden listoja. Lisa¨ksi hinta-alkioryhma¨ voi sisa¨lt¨aa¨ kaikkia ky-
5K¨aytetyss¨a tiivissa¨ esitysmuodossa yksi hintaryhm¨a on syntaktisesti pakollinen, jotta j¨asennyskielioppi olisi yksiselitteinen. Hintaryhm¨ana¨ voi kuitenkin olla oletushintaryhma¨, jota merkit¨a¨an ta¨hdell¨a ja josta generointis¨a¨anno¨t tyypillisesti eiv¨at tuota mit¨a¨an tekstia¨.

27
seisen ryhm¨an hinta-alkioita koskevat hinnanma¨¨aritteet ja valuuttainformaation. Hinta-alkioryhm¨a¨an voi kuulua my¨os aikailmaus, joka ilmaisee kyseisen hinta-alkioryhma¨n luettelemien hintojen voimassaoloajankohdan. Hinta-alkioryhma¨n aikailmaus on rakenteeltaan ja muodoltaan samanlainen kuin itsena¨inenkin aikailmaus. Aikailmauksen rakenne kuvataan aliluvussa 4.2.3.
Hintailmauksen rakenteen voi kuvata alla olevana s¨aa¨nno¨llisilla¨ lausekkeilla laajennettuna yhteydett¨oma¨n¨a kielioppina; kieliopissa k¨aytetyt merkint¨atavat kuvataan liitteess¨a B. Ta¨m¨a kielioppi kuvaa hintailmauksen rakenteen: mist¨a osailmauksista kukin ilmauksen osa koostuu. Sen sijaan kielioppi ei kuvaa hintailmauksen tarkkaa merkkijonomuotoa, silla¨ siita¨ puuttuvat muiden muassa kaikki va¨limerkit, jotka ovat v¨altt¨am¨atto¨mi¨a ilmauksen j¨asent¨amiseksi yksik¨asitteisesti. N¨ain esimerkiksi kieliopin v¨alisymbolit absoluuttinen hinta ja absoluuttinen alennus ovat rakenteeltaan samat, mutta muodoltaan siten erilaiset, ett¨a absoluuttinen alennus alkaa miinusmerkill¨a ja absoluuttinen hinta ei. Hintailmausten merkkijonomuodon t¨aydellinen kielioppi on liitteessa¨ C.2.
Osa kieliopin va¨lisymboleista on mukana selvyyden vuoksi, vaikka niill¨a ei olekaan suoraa vastinetta esimerkiksi ilmausten Java-esitysmuodossa. Ta¨llainen va¨lisymboli on esimerkiksi valuutta: Java-tietorakenteissa ei ole erillista¨ valuuttaluokkaa, vaan absoluuttinen hinta sisa¨lta¨a¨ merkkijonoarvoisen valuttakenta¨n.
hintailmaus ::= hinta-alkioryhm¨a+ hinta-alkioryhma¨ ::= hinta-alkio+ valuutta? ma¨¨arite aikailmaus? hinta-alkio ::= hintaryhma¨ hinta hintaryhm¨a ::= TUNNUS m¨a¨arite hinta ::= hinta-arvo m¨a¨arite hinta-arvo ::= absoluuttinen hinta | absoluuttinen alennus
| prosenttialennus | TUNNUS absoluuttinen hinta ::= lukuilmaus valuutta? absoluuttinen alennus ::= lukuilmaus valuutta? prosenttialennus ::= lukuilmaus m¨aa¨rite ::= TUNNUS lukuilmaus lukuilmaus ::= LUKUARVO | lukuarvova¨li | alkuarvo | loppuarvo lukuarvov¨ali ::= LUKUARVO LUKUARVO alkuarvo ::= LUKUARVO loppuarvo ::= LUKUARVO valuutta ::= TUNNUS
Esimerkeissa¨ 4.2.1 ja 4.2.2 ja niihin liittyviss¨a kuvioissa 1 ja 2 on kaksi esimerkkia¨ hintailmauksista ja niiden rakenteesta ta¨ma¨n kieliopin mukaan esitettyna¨.

28
Esimerkeiss¨a ka¨ytetty¨a ilmausten tiivist¨a merkkijonomuotoa esittelee luku 4.3.1. Esimerkki 4.2.1 Kuviossa 1 on hintailmaus, jonka tiivis merkkijonomuoto on
$[fim]*:50,st,pe:30,ch(a_16):25

hintailmaus hinta-alkioryhma¨

hinta-alkio

hinta-alkio

hinta-alkio

valuutta

hinta hintaryhm¨a hintaryhm¨a hinta

hintaryhma¨

hinta TUNNUS

hinta-arvo TUNNUS TUNNUS hinta-arvo TUNNUS ma¨a¨rite

hinta-arvo fim

abs. hinta st

pe abs. hinta ch TUNNUS lukuilmaus prosenttialennus

lukuilmaus

lukuilmaus

a loppuarvo lukuilmaus

LUKUARVO 50

LUKUARVO 30

LUKUARVO LUKUARVO 16 25

Kuvio 1: Esimerkki hintailmauksen rakenteesta 1

Ilmaus sis¨alta¨¨a koko hinta-alkioryhma¨¨a koskevan valuuttatiedon; oletushintaryhma¨n; kaksi hintaryhm¨a¨a, joilla on sama hinta; ja hintaryhm¨an, johon liittyy numeerinen m¨aa¨rite. MIETTA-hankkeessa toteutetut suomen kielen generointis¨aa¨nn¨ot tuottavat ilmauksesta seuraavan suomenkielisen ilmauksen:

 (hinnat Suomen markkoina) 50 mk; opiskelijat ja ela¨kela¨iset 30 mk; eninta¨a¨n 16-vuotiaat lapset 25 mk

Esimerkki 4.2.2 Kuviossa 2 on hintailmaus, jonka tiivis merkkijonomuoto on
$ad:50fim,gr(n15_29):20fim(pp)
Ilmaus sis¨alt¨a¨a kaksi hintaa, joista kumpaankin liittyy erillinen valuuttatieto. Ilmaus sis¨alta¨a¨ hintaryhma¨n, johon liittyy numeerinen ma¨a¨rite, ja hinnan, johon liittyy m¨a¨arite ilman numeerista ilmausta. Suomen generointis¨aa¨nno¨t tuottavat seuraavan ilmauksen:

 aikuiset 50 mk ja 15­29 hengen ryhm¨at 20 mk/henkilo¨

29

hintailmaus hinta-alkioryhma¨

hinta-alkio

hinta-alkio

hintaryhma¨ hinta

hintaryhma¨

hinta

TUNNUS hinta-arvo TUNNUS

m¨a¨arite

hinta-arvo m¨aa¨rite

ad abs. hinta gr TUNNUS lukuilmaus

abs. hinta TUNNUS

lukuilmaus valuutta

n va¨liarvo

lukuilmaus valuutta pp

LUKUARVO TUNNUS

LUKUARVO LUKUARVO LUKUARVO TUNNUS

50 fim

15 29

20 fim

Kuvio 2: Esimerkki hintailmauksen rakenteesta 2

4.2.3 Aikailmauksen rakenne
Aikailmaus koostuu listasta aika-alkioita. Aika-alkiot voivat olla hierarkkisia: alkiolla tai listalla alkioita voi olla ali-ilmauksenaan yksi tai useampi lista jonkin tarkemman tason (pienemma¨n aikayksiko¨n) aika-alkioita. Esimerkiksi vuosien listaan voi liittya¨ lista kuukausia mahdollisine omine ali-ilmauksineen. Yhden aika-alkion ali-ilmauksen kaikkien aika-alkioiden t¨aytyy olla samalla tasolla, mutta aikaalkion eri ali-ilmausten omien ali-ilmausten taso voi vaihdella. Yhden kokonaisen aikailmauksen osailmaukset ovat siis aika-alkiolista ja mahdollinen ali-ilmaus.
Aika-alkiotyypit ovat seuraavat. Kunkin alkiotyypin yhteydessa¨ on annettu esimerkki kyseisest¨a alkiotyypista¨ seka¨ mainittu ylin mahdollinen aika-alkiotyyppi, joka voi olla kyseisen tyypin ali-ilmauksena.

aika-alkiotyyppi
vuosi kuukausi kuukaudenpa¨iv¨a vuosi + kuukausi kuukausi + p¨aiv¨a vuosi + kuukausi + pa¨iva¨ (vuoden) viikko viikonp¨aiv¨a kellonaika (alin taso)

esimerkki 2001 08 28 2001-08 08-28 2001-08-28 38 1 2030

ali-ilmauksen ylin tyyppi
kuukausi tai (vuoden) viikko (kuukauden)p¨aiva¨ viikonpa¨iva¨ (kuukauden)pa¨iva¨ viikonp¨aiv¨a viikonp¨aiv¨a viikonp¨aiva¨ kellonaika

Aikailmauksen ylimp¨an¨a tasona voi olla mika¨ tahansa muu aika-alkiotyyppi paitsi kuukaudenp¨aiv¨a, joka ei ole mielek¨as ilman kuukautta. Ilmauksen ei tarvitse

30
sis¨alt¨a¨a aika-alkiohierarkian kaikkia va¨litasoja, vaan esimerkiksi kuukausi-ilmauksen ali-ilmauksena voi olla suoraan viikonp¨aiva¨ilmaus: toukokuusta elokuuhun maanantaista torstaihin.
Ilmauksen kullakin tasolla voi olla lista samantyyppisi¨a alkioita mahdollisine ali-ilmauksineen seka¨ valinnaisesti poikkeusaikojen lista. Poikkeusajat kuvaavat ilmauksia, jotka ovat tyyppi¨a vuonna 2001 joka pa¨iva¨ paitsi kesa¨kuussa maanantaista perjantaihin. Poikkeusaikalista voi sisa¨lt¨aa¨ ali-ilmauksia ja se on muutenkin muodoltaan samanlainen kuin varsinaisten aikojen lista. Poikkeusaikojen ilmaustyypin ei tarvitse olla sama kuin varsinaisten aikojen ilmaustyyppi, mik¨a mahdollistaa ilmaukset, jotka ovat tyyppia¨ maanantaista perjantaihin klo 10­18.30 paitsi 10.­28.8.2001 suljettu. T¨assa¨ pa¨iv¨ama¨a¨r¨ailmaus 10.­28.8.2001 on viikonpa¨iv¨ailmaukseen liittyva¨ poikkeusaika. Tunti-ilmaus voi kuitenkin olla vain toisen tuntiilmauksen poikkeusaikailmauksena. Poikkeusajat voisi yleens¨a ilmaista yksinkertaisesti erillisena¨ osailmauksena, mutta t¨all¨oin ne eiv¨at erottuisi generointituloksessa muista ajoista.
Joissain tapauksissa loogisesti saman aikailmauksen voi esitta¨a¨ eri tavoilla rakenteisena. Esimerkiksi ilmaukset 2001-05-28_2001-08-30 ja 2001(05-28_0830) tarkoittavat samaa aikav¨ali¨a, 28.5.­30.8.2001.6 Toteuttamani generointiohjelma tuottaa niist¨a kuitenkin erilaiset ilmaukset: edellisesta¨ 28.5.2001­30.8.2001 ja j¨alkimm¨aisesta¨ 28.5.­30.8.2001. N¨aist¨a ja¨lkimm¨ainen on yleensa¨ luonnollisempi. J¨arjestelma¨ voisi normalisoida n¨ama¨ ilmaukset samoiksi, jolloin generointiohjelma tuottaisi niist¨a saman tuloksen. Olen kuitenkin halunnut antaa ilmausten kirjoittajalle mahdollisuuden valita jompikumpi muoto niin, ett¨a valinta n¨akyy my¨os generointiohjelman tuottamassa tuloksessa.
Kukin aika-alkio voi olla joko yksitt¨ainen arvo, va¨li, alkuarvo, loppuarvo tai einumeerisen aikailmauksen merkkijonotunnus. Viikonp¨aiville ei kuitenkaan ole pelkkia¨ alku- ja loppuarvoja, koska ne eiv¨at olisi mielekka¨it¨a. Ei-numeerisia aikailmauksia ovat esimerkiksi kesa¨ll¨a, muina aikoina, pa¨a¨si¨aisen¨a, joka pa¨iv¨a, viikonloppuisin ja auringonlaskuun saakka. Niita¨ voi ka¨ytt¨a¨a ilmaisemaan my¨os asioita, jotka eiv¨at ole varsinaisia aikailmauksia, kuten esimerkiksi sopimuksen mukaan (aukioloajoista), s¨aa¨n salliessa ja vain ryhmille. Aikav¨ali-ilmausten ¨a¨aripa¨¨at eiv¨at voi koostua kahden tai useamman eri tason aika-alkioista, joten esimerkiksi ilmausta vuoden 2001 viikosta 48 vuoden 2002 viikkoon 3 ei voi esitt¨aa¨ sellaisenaan. T¨ata¨ rajoitusta
6Alaviiva merkitsee v¨ali-ilmausta ilmausten kielesta¨ riippumattomassa tiiviiss¨a merkkijonomuodossa. Ilmausten muotoa ka¨sittelee tarkemmin luku 4.3.

31
ka¨sitella¨¨an luvussa 5.3.
Aikailmauksen rakenteen voi esitta¨¨a alla olevana laajennettuna yhteydett¨om¨a-
n¨a kielioppina. T¨ama¨ kielioppi ei kuvaa aikailmauksen tiivista¨ merkkijonomuotoa,
vaan siita¨ puuttuvat muiden muassa kaikki va¨limerkit. Aikailmauksen merkkijono-
muodon ta¨ydellinen kielioppi on liitteessa¨ C.3.
Alla oleva kielioppi eroaa hieman sek¨a edella¨ olevasta sanallisesta kuvauksesta
etta¨ aikailmausten Java-esitysmuodosta. Kieliopissa on eksplisiittisia¨ aika-alkioita
vain aikailmauksen ylimma¨ll¨a tasolla; alemmilla tasoilla x-ilmaus vastaa aika-alkio-
ta. Na¨in voi kuvata yksinkertaisemmin sen, ett¨a aika-alkion ali-ilmauksen ta¨ytyy
olla tarkemman tason aikailmaus.7 Java-esitysmuoto puolestaan sis¨alt¨aa¨ sellaisia
luokkia (rakennetasoja), joita vastaavia va¨lisymboleja ei ole ta¨ss¨a kieliopissa.
aikailmaus ::= aika-alkio+ aika-alkio ::= (vuosi-ilmaus+ | kuukausi-ilmaus+ | p¨aiva¨ilmaus+
| vuosi-kuukausi-ilmaus+ | kuukausi-p¨aiva¨-ilmaus+ | vuosi-kuukausi-p¨aiva¨-ilmaus+ | viikkoilmaus+ | viikonpa¨iva¨ilmaus+ | tunti-ilmaus+) poikkeusaikailmaus ? poikkeusaikailmaus ::= vuosi-ilmaus+ | kuukausi-ilmaus+ | p¨aiv¨ailmaus+
| vuosi-kuukausi-ilmaus+ | kuukausi-pa¨iv¨a-ilmaus+ | vuosi-kuukausi-p¨aiv¨a-ilmaus+ | viikkoilmaus+ | viikonpa¨iva¨ilmaus+
vuosi-ilmaus ::= vuosilista (kuukausi-ilmaus | kuukausi-p¨aiva¨-ilmaus | pa¨iva¨ilmaus | viikkoilmaus | viikonp¨aiva¨ilmaus | tunti-ilmaus) poikkeusaikailmaus ?
kuukausi-ilmaus ::= kuukausilista (p¨aiva¨ilmaus | viikonp¨aiv¨ailmaus | tunti-ilmaus) poikkeusaikailmaus ?
pa¨iv¨ailmaus ::= p¨aiva¨lista (viikonpa¨iva¨ilmaus | tunti-ilmaus) poikkeusaikailmaus ?
vuosi-kuukausi-ilmaus ::= vuosi-kuukausi-lista (p¨aiva¨ilmaus | viikonp¨aiva¨ilmaus | tunti-ilmaus) poikkeusaikailmaus ?
kuukausi-p¨aiv¨a-ilmaus ::= kuukausi-p¨aiv¨a-lista (viikonpa¨iva¨ilmaus | tunti-ilmaus) poikkeusaikailmaus ?
vuosi-kuukausi-pa¨iva¨-ilmaus ::= vuosi-kuukausi-p¨aiva¨-lista (viikonp¨aiva¨ilmaus | tunti-ilmaus) poikkeusaikailmaus ?
7Aikailmausten Java-esitysmuodossa ali-ilmausten tasorajoitus ei na¨y luokkahierarkiassa, vaan aika-alkion luokkana on kaikissa tapauksissa TimeItem.

32
viikkoilmaus ::= viikkolista (viikonpa¨iva¨ilmaus | tunti-ilmaus) poikkeusaikailmaus ?
viikonp¨aiva¨ilmaus ::= viikonp¨aiv¨alista tunti-ilmaus? poikkeusaikailmaus? tunti-ilmaus ::= tuntilista (poikkeusaikailmaus | tunti-ilmaus)?
Lisa¨ksi kieliopissa on seuraavat s¨aa¨nn¨ot erikseen kullekin aika-alkiotyypille eli kutakin muotoa x-lista olevaa kieliopin v¨alisymbolia kohti, miss¨a x on aika-alkiotyyppi. Viikonpa¨iville ei kuitenkaan ole alku- tai loppuarvosa¨¨anto¨ja¨, koska pelka¨n alku- tai loppuviikonp¨aiva¨n sis¨alta¨va¨ v¨ali-ilmaus ei olisi mieleka¨s.
x-lista ::= (X-ARVO | x-v¨ali | x-alkuarvo | x-loppuarvo | erityis-x )+ x-va¨li ::= X-ARVO X-ARVO x-alkuarvo ::= X-ARVO x-loppuarvo ::= X-ARVO erityis-x ::= TUNNUS
Esimerkeissa¨ 4.2.3 ja 4.2.4 ja niihin liittyvissa¨ kuvioissa 3 ja 4 on kaksi esimerkki¨a aikailmauksista ja niiden rakenteesta t¨am¨an kieliopin mukaan esitettyn¨a. Kuvioissa on lyhennetty v¨alisymbolien nimia¨ tilan sa¨¨ast¨amiseksi.
Esimerkki 4.2.3 Kuviossa 3 on aikailmaus, jonka tiivis merkkijonomuoto on
&2002(04-16_09-15[da{10_18}]);2003,2004(04_09{1030_1830})

aikailmaus aika-alkio

v-ilmaus

v-ilmaus

v-lista

kk-pv-ilmaus

v-lista

kk-ilmaus

V-ARVO kk-pv-lista

vkp-ilmaus V-ARVO V-ARVO kk-lista

t-ilmaus

2002 kk-pv-va¨li

vkp-lista

t-ilmaus 2003 2004 kk-va¨li

t-lista

KK-PV-ARVO KK-PV-ARVO erityis-vkp

t-lista

04-16

09-15

TUNNUS

t-v¨ali

da T-ARVO T-ARVO

KK-ARVO KK-ARVO t-va¨li 04 09 T-ARVO T-ARVO 1030 1830

10 18

Kuvio 3: Esimerkki aikailmauksen rakenteesta 1

Ylimm¨alla¨ tasollaan ilmaus sis¨alt¨aa¨ yhden aika-alkion, joka koostuu kahdesta erillisest¨a vuosi-ilmauksesta. Ensimm¨aisen vuosi-ilmauksen ali-ilmauksena on

33
kuukausi­p¨aiv¨ailmaus (va¨li), jonka ali-ilmauksena on viikonpa¨iva¨ilmaus (yksitt¨ainen merkkijonotunnus), jonka ali-ilmauksena on tunti-ilmaus (v¨ali). J¨alkimm¨aisess¨a vuosi-ilmauksessa on kahden yksitt¨aisen vuoden lista, joilla on ali-ilmauksenaan kuukausi-ilmaus (va¨li), jonka ali-ilmauksena on tunti-ilmaus (va¨li).8 MIETTAhankkeessa toteutetut suomen kielen generointis¨aa¨nn¨ot tuottavat ilmauksesta seuraavan suomenkielisen ilmauksen:
 16.4.-15.9.2002 p¨aivitta¨in klo 10-18; v. 2003 ja v. 2004 huhtikuusta syyskuuhun klo 10.30-18.30
Esimerkki 4.2.4 Kuviossa 4 on aikailmaus, jonka tiivis merkkijonomuoto on &2002(04_09,12[da]\07(10_21[5_7{cl}]))

aikailmaus aika-alkio v-ilmaus

v-lista

kk-ilmaus

V-ARVO

2002 kk-lista

vkp-ilmaus

poikkeusaikailmaus

kk-v¨ali

KK-ARVO vkp-lista

KK-ARVO KK-ARVO 12 04 09

erityis-vkp kk-lista TUNNUS KK-ARVO pv-lista
da 07 pv-va¨li

kk-ilmaus pv-ilmaus

vkp-ilmaus

vkp-lista

t-ilmaus

PV-ARVO PV-ARVO

vkp-va¨li

t-lista

10 21 VKP-ARVO VKP-ARVO erityis-t

5 7 TUNNUS

cl

Kuvio 4: Esimerkki aikailmauksen rakenteesta 2
8J¨alkimma¨isen vuosi-ilmauksen kuukausi-ilmauksen voi ajatella sisa¨lta¨v¨an implisiittisen pa¨ivitt¨ain-ilmauksen. Yhten¨aisyyden vuoksi se olisi hyva¨ merkit¨a eksplisiittisesti, mutta se on ta¨ssa¨ j¨atetty pois tilan s¨aa¨sta¨miseksi.

34
Ilmauksen ylimma¨n tason aika-alkio sis¨alt¨a¨a vuosi-ilmauksen (yksitta¨inen vuosi), jonka ali-ilmauksena on kuukausi-ilmaus (va¨lin ja yksitta¨isen kuukauden lista), jonka ali-ilmauksena on viikonp¨aiv¨ailmaus (yksitt¨ainen merkkijonotunnus). Kuukausi-ilmaukseen liittyy poikkeusaikailmaus, joka on itsekin kuukausi-ilmaus (yksitta¨inen kuukausi), jonka ali-ilmauksena on kuukaudenpa¨iv¨ailmaus (v¨ali), jonka ali-ilmauksena on viikonp¨aiv¨ailmaus (v¨ali), jonka ali-ilmauksena on tunti-ilmaus (yksitta¨inen merkkijonotunnus). Suomen generointisa¨a¨nno¨t tuottavat seuraavan ilmauksen:
 huhtikuusta syyskuuhun ja joulukuussa 2002 pa¨ivitta¨in, paitsi 10.­21.7.2002 perjantaista sunnuntaihin suljettu
4.3 Hinta- ja aikailmausten esitysmuodot
Lokalisointija¨rjestelm¨assa¨ hinta- ja aikailmauksilla kaksi kielesta¨ riippumatonta esitysmuotoa: ulkoinen, tiivis merkkijonomuoto, ja sis¨ainen, Java-tietorakenne. N¨aista¨ Java-tietorakenne on sika¨li ensisijainen, etta¨ generointikomponentti tuottaa tulosilmaukset sen pohjalta. Koska tiivis merkkijonomuoto on ka¨ytt¨aj¨alle n¨akyv¨an¨a la¨ht¨omuotona, siin¨a muodossa esitetty ilmaus ta¨ytyy j¨asent¨aa¨ Java-tietorakenteeksi ennen generointia. Aliluku 4.3.1 esittelee ilmausten tiivist¨a merkkijonomuotoa ja 4.3.2 k¨asittelee lyhyesti Java-esitysmuotoa. Tiiviin merkkijonomuodon ohella muutkin ulkoiset esitysmuodot olisivat mahdollisia: aliluku 4.3.3 ka¨sittelee lyhyesti relaatiotietokanta- ja XML-muodon etuja ja haittoja.
4.3.1 Ilmausten merkkijonomuoto
Ilmauksen muodon eli syntaksin mahdollisia tavoiteltavia ominaisuuksia ovat ilmausten tiiviys, luettavuus, kirjoitettavuus, j¨asennetta¨vyys ja laajennettavuus. Na¨ma¨ tavoitteet ovat kuitenkin osittain ristiriidassa kesken¨aa¨n, joten lopputulos on kompromissi. Tiiviiss¨a merkkijonomuodossa keskeisena¨ la¨ht¨okohtana oli se, ett¨a ilmausten t¨aytyi olla ja¨sennetta¨viss¨a LALR(1)-kieliopilla (DeRemer 1971, Aho & Johnson 1974: 109­116), koska toteutin ja¨sentimen JavaCUP-j¨asenningenerattorilla (Hudson et al. 1999). Ilmausten tuli myo¨s olla tekstimuodossa, joka on ainakin jollain tavalla ihmisenkin luettavissa. Lis¨aksi ilmausten tuli olla suhteellisen tiiviita¨, jotta pitk¨atkin ilmaukset mahtuisivat tietokannan kenttiin.
T¨am¨a aliluku kuvaa lyhyesti tiiviin merkkijonomuodon keskeisimpi¨a periaatteita. Tiiviiss¨a merkkijonomuodossa olevien hinta- ja aikailmausten ta¨ydellinen yh-

35
teydet¨on kielioppi on liitteess¨a C. Seuraavassa on esimerkkej¨a tiiviissa¨ merkkijonomuodossa olevista hinta- ja
aikailmauksista ja niiden merkityksista¨. Ilmausten tarkka merkitys riippuu erityisesti niiden sisa¨lt¨amien merkkijonotunnusten tulkinnasta; ilmausten selityksiss¨a on ka¨ytetty samaa tulkintaa kuin MIETTA-hankkeessa. Esimerkki-ilmaukset 1­3 ovat hintailmauksia ja esimerkit 4­6 aikailmauksia. Lis¨a¨a esimerkkeja¨ on liitteess¨a A.
1. $[fim](pp,vi22) *:50, ch(a_12):25, st,pe:35, gr(n20_39):40, gr(n40_):%40 Valuutta Suomen markka, hinnat henkea¨ kohti, hinnat sis¨alta¨va¨t 22 %:n arvonlisa¨veron; perushinta 50 mk, alle 12-vuotiaat lapset 25 mk, opiskelijat ja ela¨kela¨iset 35 mk, 20­39 hengen ryhm¨at 40 mk, yli 40 hengen ryhma¨t 40 %:n alennus.
2. $*:200_250fim(pp,vi22) Hinta 200­250 Suomen markkaa henke¨a kohti; hinta sis¨alt¨a¨a 22 %:n arvonlis¨averon.
3. $sg:450,db:550,eb:100,bf:in;<[we]>(sg:350,db:450,eb:70) Yhden hengen huone 450, kahden hengen huone 550, lisa¨vuode 100, aamiainen sisa¨ltyy hintaan; viikonloppuisin yhden hengen huone 350, kahden hengen huone 450, lisa¨vuode 70 (valuutta ma¨¨arittelema¨t¨on).
4. &2001(01-02_05-31[1_5{10_18};6{09_12,1330_16};7{cl}]) 2.1.­31.5.2001: maanantaista perjantaihin klo 10­18, lauantaisin klo 9­12 ja 13.30­16, sunnuntaisin suljettu.
5. &2001(01(02_12[1_5{10_18}];15_31[1_4{11_19}]);02_08[1_5{10_19}]) 2.­12.1.2001: maanantaista perjantaihin klo 10­18; 15.­31.1.2001: maanantaista torstaihin klo 11­19; helmikuusta elokuuhun 2001: maanantaista perjantaihin klo 10­19.
6. &2001(06_12[1_5{10_1730}]\08(10,17{10_15});ot{rq}) Kes¨akuusta joulukuuhun 2001 maanantaista perjantaihin klo 10­17.30, paitsi 10. ja 17.8. klo 10­15; muina aikoina (vuonna 2001) tilauksesta.
Seuraava tiivin merkkijonomuodon kuvaus sis¨alt¨aa¨ viitteit¨a edell¨a oleviin esimerkkeihin.
Ilmauksen ensimm¨ainen merkki kertoo ilmauksen tyypin: hintailmaus alkaa $-merkilla¨, aikailmaus &-merkill¨a.
Ilmausten sisa¨lta¨ma¨t merkkijonotunnukset voivat koostua mielivaltaisista kirjaimista,9 mutta numerot tai v¨alimerkit eiva¨t ole sallittuja. Tunnusten pituutta ei
9Kirjaimiksi lasketaan kaikki Unicode-merkisto¨n kirjaimiksi luokittelemat merkit (Unicode Consortium 1996: 4-14­4-15).

36
ole rajoitettu. MIETTA-datassa k¨aytin kuitenkin varsin lyhyita¨, yleens¨a yhdest¨a kolmeen kirjaimen mittaisia tunnuksia, jotta merkkijonomuotoiset ilmaukset sa¨ilyisiva¨t lyhyina¨. Merkkijonotunnuksia k¨aytet¨a¨an hintaryhmien (esimerkeissa¨ 1 ja 3), valuuttojen (1, 2), hintaryhmien ma¨a¨ritteiden (1), hintojen ma¨a¨ritteiden (1, 2), erityishintojen (3) ja erityisaikailmausten (3, 4, 6) tunnuksina.
Hintailmauksissa esiintyva¨t lukuarvot esiteta¨¨an kymmenj¨arjestelm¨an ei-negatiivisina kokonais- tai desimaalilukuina. Desimaalierottimena on piste.
Aikailmauksissa kullakin numeerisella aika-alkiotyypill¨a on ma¨a¨ra¨tty vakiomuotonsa. P¨aiv¨ama¨a¨r¨at ja niiden osat esitet¨aa¨n ISO 8601 -standardin mukaisessa ja¨rjestyksessa¨ vuosi­kuukausi­p¨aiv¨a; pa¨iva¨ma¨¨ara¨n osien erottimena on yhdysviiva (-), kuten standardin mukaisessa laajennetussa p¨aiva¨m¨aa¨ra¨muodossa (International Organization for Standardization 1988: 4). Esimerkiksi p¨aiv¨am¨aa¨r¨a 1.2.2002 ilmaistaan 2002-02-01, vuosi ja kuukausi 2002-02, kuukausi ja kuukaudenp¨aiv¨a 02-01, pelkk¨a vuosi 2002, pelkka¨ kuukausi 02 ja pelkk¨a kuukaudenp¨aiva¨ 01. Vuoden viikot ilmaistaan kahdella numerolla. Viikonp¨aiv¨at ilmaistaan numeerisesti yhdella¨ numerolla. Viikonpa¨iva¨numeron tulkinta riippuu generointiohjelmasta, mutta toteutuksessani 1 vastaa maanantaita ja 7 sunnuntaita, kuten ISO 8601 -standardissakin. Kellonaika ilmaistaan 24 tunnin ja¨rjestelma¨ss¨a joko tunteina tai tunteina ja minuutteina, kahdella tai nelja¨lla¨ numerolla: esimerkiksi kello 8 ilman minuutteja on 08 ja kello 8.15 on 0815. Kaikissa ilmauksissa k¨ayteta¨a¨n etunollia tarpeen mukaan, jotta esimerkiksi kuukausi, kuukaudenp¨aiv¨a, vuodenviikko ja tunnit ilman minuutteja olisivat aina kaksinumeroiset.
Listan alkioiden erotin on listan tyypista¨ riippuen pilkku, puolipiste tai kaksi puolipistett¨a. Erotin on puolipiste, jos listan alkiot voivat itse olla listoja, joissa erotin on pilkku. Vastaavasti erottimena on kaksi puolipistetta¨, jos alkiot voivat olla listoja, joissa erottimena on yksi puolipiste. Kahta puolipistetta¨ k¨aytet¨aa¨n vain erottamaan aikailmauksen ylimma¨n tason aika-alkioita, jos niiden ilmaustyyppi on eri: esimerkiksi &10_12;;2002(09_12) (loka­joulukuussa; vuonna 2002 syys­joulukuussa), jossa ylimm¨an tason ilmaustyypit ovat kuukausi ja vuosi. Puolipisteell¨a erotetaan hintailmauksen hinta-alkioryhma¨t (esimerkiss¨a 3) sek¨a samantyyppiset aika-alkiot, jos jollakin niist¨a on ali-ilmaus (esimerkeissa¨ 4­6). Muissa tapauksissa erottimena on pilkku. Eri erottimet ovat tarpeen kieliopin pita¨miseksi j¨asentimen kannalta yksiselitteisen¨a. Ta¨t¨a ongelmaa ja vaihtoehtoisia, merkint¨atavoiltaan yhtena¨isempi¨a ratkaisuvaihtoehtoja pohditaan luvussa 5.2.2.
V¨ali-ilmauksissa ilmauksen a¨a¨ripa¨a¨t erotetaan toisistaan alaviivalla (_), koska

37
yhdysmerkki on varattu p¨aiva¨m¨a¨arien esitysmuotoon.10 Esimerkiksi hintav¨ali voi olla 7.50_12.00 (7,50­12,00 ) ja pa¨iv¨ama¨¨ara¨va¨li 10-05_09-21 (5.10.­21.9.). Jos v¨ali-ilmausta k¨ayteta¨¨an alku- tai loppuarvon ilmaisemiseen, va¨lin toinen pa¨¨a yksinkertaisesti ja¨teta¨a¨n pois (esimerkiss¨a 3: _12 ja 40_).
Hintaryhma¨n ja itse hinnan v¨aliss¨a on erottimena kaksoispiste (esimerkit 1­ 3). Hintaryhm¨an mahdolliset ma¨¨aritteet ovat hintaryhm¨an tunnuksen j¨aljessa¨ kaarisulkeissa (esimerkiss¨a 1: a_12, n20_39 ja n40_). Absoluuttisen alennushinnan tunnuksena on miinusmerkki (yhdysviiva) ja prosentuaalisen alennuksen tunnuksena prosenttimerkki: esimerkiksi -20fim (-20 mk ) ja %50 (-50 % ). Yksitta¨ist¨a hintaa koskeva valuuttatunnus tulee va¨litt¨oma¨sti hinta-arvon j¨alkeen (esimerkissa¨ 2: 200_250fim). Mahdolliset hinnanma¨¨aritteet ovat hinnan ja mahdollisen valuutan pera¨ss¨a kaarisulkeissa pilkuilla erotettuina (esimerkissa¨ 2: pp ja vi22).
Kokonaista hinta-alkioryhma¨¨a koskeva valuuttatunnus on ennen ryhm¨an hinta-alkioita hakasulkeissa (esimerkissa¨ 1: [fim]) ja mahdolliset hinnanm¨a¨aritteet kaarisulkeissa (esimerkissa¨ 1: (pp,vi22)). Hinta-alkioryhma¨a¨n mahdollisesti liittyv¨a aikailmaus edelt¨aa¨ varsinaista hinta-alkioryhm¨aa¨ ja se on pienempi kuin- ja suurempi kuin -merkkien sis¨all¨a (esimerkissa¨ 3 <[we]> tarkoittaa viikonloppua; viikonp¨aiv¨ailmausta merkitseva¨t hakasulkeet kuuluvat aikailmaukseen).
Hintaryhm¨ana¨ voi olla merkkijonotunnuksen sijaan oletushintaryhm¨aa¨ ilmaiseva t¨ahti (*; esimerkeiss¨a 1 ja 2). Tyypillisesti generointisa¨a¨nno¨t eiva¨t tuota oletushintaryhma¨sta¨ teksti¨a. Hintaryhm¨aa¨ ei voi ja¨tt¨a¨a kokonaan pois, koska silloin ja¨sennyskielioppi ei olisi en¨a¨a yksiselitteinen.
Aikailmausten hierakkiset tasot merkit¨aa¨n sulkeilla. Jos ali-ilmaus on p¨aiva¨m¨a¨ara¨n osa tai vuodenviikko, sulkeina ovat kaarisulkeet: esimerkiksi esimerkiss¨a 5 ilmaus 2001(01(02_12. . . ). . . ) tarkoittaa 2.­12.1.2001. Viikonpa¨iva¨ilmaus ymp¨aro¨id¨aa¨n aina hakasulkeilla ja kellonaikailmaus aaltosulkeilla: esimerkiksi esimerkiss¨a 4 ilmaus [1_5. . . ] tarkoittaa maanantaista perjantaihin, {10_18} klo 10­18 ja {cl} on erityistunti-ilmaus suljettu. Poikkeusaikailmaus erotetaan kenoviivalla perusaikailmauksesta (esimerkissa¨ 6).
Kieliopin pita¨minen yksiselitteisen¨a vaatii ylima¨¨ar¨aisten tunnistemerkkien ka¨ytto¨¨a tietyiss¨a tapauksissa, joissa ilmausten j¨asennin ei muuten pystyisi p¨a¨attelema¨a¨n aika-alkion tyyppi¨a. Esimerkiksi vuodenviikkoilmaus alkaa lainausmerkilla¨, jotta se eroaisi kuukausi-ilmauksesta: esimerkiksi 2001("50) tarkoittaa vuoden 2001
10T¨ama¨ poikkeaa ISO 8601 -standardista, jossa v¨ali-ilmauksen a¨a¨rip¨aa¨t erotetaan vinoviivalla.

38
viikolla 50. Viikonp¨aiva¨- tai tunti-ilmaukseen liittyv¨a p¨aiva¨m¨a¨ara¨tason poikkeusaikailmaus alkaa sirkumfleksilla: esimerkiksi [1_5^\10[1_4]] tarkoittaa ma­pe, paitsi lokakuussa ma­to. Tunnistemerkkia¨ tarvitaan my¨os silloin, jos erityisaikailmauksen halutaan olevan jotain muuta tasoa kuin kuukausi­pa¨iva¨, viikonp¨aiv¨a tai tunti: esimerkiksi jos merkkijonotunnus ly tarkoittaisi karkausvuotta, ilmaus karkausvuosina 29.2. pita¨isi esitt¨aa¨ muodossa *%ly(02-29).
Ilmaukset voivat sis¨alta¨a¨ alkioiden va¨lissa¨ tyhja¨merkkej¨a ja kommentteja. Kommentit merkita¨¨an C-kielen tapaan /* . . . */.
4.3.2 Ilmausten Java-esitysmuoto
Java-esitysmuodossa hinta- ja aikailmaukset ovat Java-olioiden muodostamia tietorakenteita. Yksitt¨aisen ilmauksen voi ajatella puurakenteena, jonka solmut ovat Java-olioita. Olio sisa¨lta¨¨a olioviitteet sen osailmauksia vastaaviin olioihin eli solmun alipuihin. Puun lehdet ovat jotain Javan standarditietotyyppi¨a, tyypillisesti merkkijonoja, lukuja tai pa¨iva¨ma¨a¨r¨aarvoja.
Kaikki ilmausten osia kuvaavat luokat ovat abstraktin luokan PriceTimeObject aliluokkia pakkauksessa net.mietta.generation.pricetime. genobjects. Luokkia on kaikkiaan 79, joista 13 on abstrakteja. Lisa¨ksi pakkauksessa on 5 rajapintaluokkaa. Luokkien luokkahierarkia on esitetty UML-luokkakaaviona liitteessa¨ E.
Luokka PriceTimeObject ma¨¨arittelee generointimetodin generate. Ka¨yt¨ann¨ossa¨ t¨ama¨ metodi vain va¨litt¨aa¨ sita¨ kutsuvan olion generointiohjelmaan kuuluvalle generointimetodille, joka hoitaa varsinaisen generoinnin.
Ilmausten tietorakenteissa sin¨ans¨a ei ole mit¨aa¨n, mika¨ edellytt¨aisi Java-kielen ka¨ytta¨mista¨. Toteutuksessa on kuitenkin hy¨odynnetty rajapintaluokkia ja Javan kirjastoluokkia, joten ilmauksia kuvaavien luokkien muuntaminen jollekin toiselle oliokielelle ei todenna¨ko¨isesti olisi aivan suoraviivaista.
4.3.3 Muita esitysmuotovaihtoehtoja
Tiivis merkkijonomuoto ei suinkaan ole ainoa vaihtoehto hinta- ja aikailmausten ulkoiseksi esitysmuodoksi. Koska MIETTA-matkailutietokanta oli toteutettu relaatiotietokantana (Microsoft SQL Server -ja¨rjestelma¨ssa¨), yksi vaihtoehto olisi ollut mallintaa my¨os hinta- ja aikailmaukset relaatioina. Ilmauksille sopiva, riitta¨va¨n joustava relaatiomalli olisi kuitenkin todenn¨ak¨oisesti ollut melko monimutkainen ja hankalasti k¨asitelta¨va¨ seka¨ ohjelmille etta¨ ihmisille. Lis¨aksi ilmausten rakenteen muutta-

39
minen olisi ollut hankalampaa, koska se olisi tyypillisesti vaatinut my¨os tietokannan rakenteen muuttamista. Koska ei my¨osk¨aa¨n ollut varmaa, olisiko JTg2 pystynyt ka¨sittelem¨a¨an relaatioina esitettyja¨ hinta- ja aikailmauksia, en edes tutkinut tarkemmin relaatioesitysmuodon mahdollisuuksia.
Toinen mahdollinen vaihtoehto olisi ollut esitt¨a¨a hinta- ja aikailmaukset jossakin standardissa rakenteisessa tekstimuodossa, esimerkiksi XML:n¨a (Extensible Markup Language; Bray et al. 2000). Silloin ilmaukset olisivat olleet helpommin ihmisen luettavissa ja ehk¨a tuotettavissakin, mutta toisaalta mutkikkaita ilmauksia olisi ollut vaikea saada mahtumaan tietokannan lyhyehk¨oihin kenttiin. XML-esitysmuoto olisi kuitenkin toteutettavissa oleva vaihtoehto nykyiselle tiiviille merkkijonomuodolle. Asiaa pohditaan my¨os luvussa 5.4.4.
4.4 Monikielinen generointi kielest¨a riippumattomasta muodosta
Toteuttamani generointiohjelmakomponentti on Java-ohjelma (luokkajoukko), joka saa sy¨otteekseen kielesta¨ riippumattomassa muodossa olevan hinta- tai aikailmauksen ja tuottaa siit¨a vastaavan luonnolliskielisen ilmauksen annettujen s¨a¨ant¨ojen mukaan. Generointiohjelman k¨aytt¨am¨at generointisa¨¨ann¨ot kirjoitetaan Javan ominaisuustiedostoihin (property file).
Ylimm¨an tason rajapinnassa generointikomponentti saa sy¨otteekseen tiiviissa¨ merkkijonomuodossa olevan hinta- tai aikailmauksen.11 Ta¨lla¨ tasolla generoinnin pa¨a¨vaiheet ovat seuraavat:
1. Lue generointisa¨¨anno¨t kieli- ja maa-asetuksen mukaisesta ominaisuustiedostosta (tai -tiedostoista), ja¨senn¨a ne ja muunna ne sisa¨iseen esitysmuotoon Java-olioiksi.
2. J¨asenn¨a syo¨tteen¨a oleva hinta- tai aikailmaus ja muunna se sisa¨iseen esitysmuotoon Java-olioiksi (puurakenteeksi).
3. Ka¨y ilmauksen olioesitysmuoto rekursiivisesti l¨api: kutsu kussakin oliossa (puun solmussa) sen mahdollisesti sis¨alta¨mien olioiden (osailmausten alipuiden) generointimetodeja ja sovella niiden tuottamiin merkkijonoihin k¨asitelta¨v¨an¨a olevaa oliota (solmua) koskevaa generointis¨aa¨nto¨a¨.
11Rajapintaan voisi tarvittaessa lisa¨t¨a esimerkiksi XML-syo¨temuodon ka¨sittelyn.

40
Generointiohjelma ka¨y siis ilmauspuun l¨api juuresta lehtiin pa¨in j¨alkija¨rjestyksessa¨. Generointi on deterministista¨: ohjelma tuottaa aina vain yhden generointituloksen. Luvussa 5.2.3 perustellaan lyhyesti generoinnin determinismi¨a ja pohditaan ep¨adeterminismin mahdollista tarvetta.
Kohdan 3 toiminnan voi kuvata my¨os puoliformaalisti seuraavasti:
1. Olkoon e ilmaus, jonka tyyppi on T (e), ja R(t) sa¨¨anto¨, jota generointiohjelma soveltaa tyyppi¨a t olevaan ilmaukseen.
2. Jos ilmaus e ei sisa¨ll¨a osailmauksia eli jos se on ilmauspuun lehtisolmu, generointiohjelma tuottaa siit¨a s¨aa¨nno¨n R(T (e)) perusteella merkkijonon S(e).
3. Jos taas ilmaus e koostuu osailmauksista e1, . . . , en (n  1), joiden tyypit ovat T (e1), . . . , T (en), generointiohjelma soveltaa ensin osailmauksiin e1, . . . , en sa¨a¨nto¨ja¨ R(T (e1)), . . . , R(T (en)). Na¨ita¨ sa¨¨ant¨oj¨a kutsutaan sa¨a¨nno¨n R(T (e)) lapsiksi. Sa¨¨anno¨t tuottavat merkkijonot S(e1), . . . , S(en), joihin voi viitata s¨aa¨nn¨ossa¨ R(T (e)) ja jotka voi siten sis¨allytt¨a¨a tulokseen, jonka generointiohjelma tuottaa ilmauksesta e.
Ta¨ma¨n ylimm¨an tason rajapinnan sisa¨lta¨¨a pakkauksen net.mietta. generation.pricetime luokka PriceTimeGenerator. Varsinaisesta generoinnista vastaavat saman pakkauksen luokka Generator ja sen mahdolliset aliluokat. Luokka Generator sis¨alt¨a¨a oman generointimetodinsa kullekin generointis¨a¨anto¨tyypille eli tietyntyyppista¨ ilmausta ka¨sittelev¨alle s¨aa¨nto¨tyypille. N¨ama¨ generointimetodit k¨aytta¨va¨t useimmiten hyva¨kseen yleisia¨ generoinnin apumetodeja.
Generointikomponentissa on rajapinta erillisen morfologisen generaattorin k¨aytt¨amiseksi. Sen avulla on mahdollista ma¨¨aritell¨a esimerkiksi se, etta¨ tietyssa¨ yhteydess¨a esiintyva¨ sana taipuu tietyssa¨ sijassa. Kullekin kielelle on tyypillisesti oma morfologinen generaattorinsa. Morfologisen generaattorin rajapinta ei ota kantaa generaattorin k¨aytt¨amiin morfologisiin piirteisiin, vaan se vain va¨litta¨a¨ generointis¨aa¨nno¨iss¨a annetun piirteen nimen merkkijonona morfologiselle generaattorille. Ta¨st¨a on lisa¨tietoa j¨aljemp¨ana¨ generointisa¨a¨nto¨jen kuvauksen yhteydess¨a luvussa 4.5.5 ja esimerkkej¨a generointis¨a¨ann¨osto¨j¨a k¨asitteleva¨ss¨a liitteess¨a D.
Yhtena¨ tavoitteena generointiohjelman toteuttamisessa oli se, etta¨ tuen uudelle kielelle voisi yleensa¨ lisa¨ta¨ pelk¨ast¨a¨an kirjoittamalla tarvittavat generointis¨aa¨nno¨t. Koska s¨a¨anto¨formalismi on kuitenkin suhteellisen yksinkertainen, pelkk¨a s¨aa¨nto¨jen kirjoittaminen ei va¨ltta¨ma¨tta¨ aina riita¨. Niinpa¨ generaattoriluokalle

41
Generator voikin ma¨a¨ritell¨a kieli- ja maa-asetuksen mukaisen aliluokan (esimerkiksi Generator_de saksan kielelle), joka sis¨alta¨¨a tuen tarvittaville lis¨apiirteille. Ta¨llainen aliluokka voisi esimerkiksi tunnistaa joitain sellaisia sa¨¨ant¨oj¨a, joita perusgeneraattoriluokka ei tunnista.
4.5 Generointis¨a¨ann¨ot
Ta¨ma¨ aliluku kuvaa generointiohjelman k¨aytt¨amia¨ generointis¨a¨anto¨j¨a ja niiden muotoa ja ominaisuuksia. T¨ama¨n aliluvun aliluku 4.5.1 kuvaa s¨a¨ant¨otiedostojen yleisen toteutustavan ja muodon. Aliluku 4.5.2 kuvaa sa¨a¨nto¨jen hierarkian ja s¨a¨ant¨ojen nimien muodon. Aliluku 4.5.3 kuvaa sa¨¨anto¨jen p¨aa¨tyypit. Aliluku 4.5.4 kuvaa sa¨a¨nto¨jen muodon, syntaksin ja keskeiset ominaisuudet. Aliluku 4.5.5 kuvaa sa¨a¨nto¨ihin liittyva¨n attribuuttimekanismin. Aliluku 4.5.6 kuvaa s¨aa¨nt¨oihin liittyva¨n makro-ominaisuuden. Aliluku 4.5.7 kuvaa s¨aa¨nto¨joukon ominaisuuksia. Aliluku 4.5.8 esittelee joitain MIETTA-hankkeessa toteutettujen generointisa¨¨anno¨st¨ojen erityispiirteit¨a.
4.5.1 S¨a¨anto¨tiedostot
Generointisa¨a¨nn¨ot kirjoitetaan Javan ominaisuustiedostoihin (property file). Kukin s¨aa¨nt¨o on yksi ominaisuusma¨¨arittely eli avain-arvopari: ominaisuuden avain on sa¨¨ann¨on nimi ja ominaisuuden arvo on s¨aa¨nn¨on runko. Kukin sa¨¨anto¨ on siis muotoa nimi =runko. Ominaisuustiedostojen k¨aytt¨aminen mahdollistaa Javan standardiv¨alineiden hy¨odynta¨misen sa¨a¨nt¨ojen lokalisoinnissa kieli- ja maa-asetuksen mukaan (kirjastoluokat java.util.Locale ja java.util.PropertyResourceBundle).
Ominaisuustiedostojen ka¨ytta¨minen mahdollistaa myo¨s sellaiset yleiset sa¨a¨nn¨ot, jotka voi m¨aa¨ritell¨a uudelleen yksitt¨aisten kielten kohdalla: esimerkiksi kaikille kieli- ja maa-asetuksille yhteiset sa¨¨ann¨ot voivat olla ominaisuustiedostossa GenerationRules.properties, englannin eri varianttien yhteiset s¨aa¨nno¨t tiedostossa GenerationRules_en.properties ja brittienglannin sa¨¨anno¨t tiedostossa GenerationRules_en_GB.properties. Eri kielille yhteisess¨a sa¨¨ant¨otiedostossa voi olla oletussa¨a¨nto¨ja¨, jotka tyypillisesti ma¨a¨ritella¨a¨n uudelleen kielikohtaisissa sa¨a¨nn¨osto¨iss¨a. Lis¨aksi yhteisess¨a s¨a¨anto¨tiedostossa voi olla makrosa¨¨ant¨oj¨a, joita kielikohtaisten sa¨a¨nn¨ost¨ojen sis¨alta¨ma¨t varsinaiset s¨a¨ann¨ot k¨aytt¨av¨at hyva¨kseen.

42
4.5.2 S¨a¨ant¨ohierarkia ja s¨a¨anto¨jen nimet
Generointiohjelma tunnistaa kiinte¨an joukon s¨a¨ant¨oj¨a tai s¨a¨ant¨otyyppej¨a: generoidakseen tietyntyyppist¨a osailmausta (Java-oliota, alipuuta) vastaavan merkkijonon generointiohjelma kutsuu sita¨ vastaavaa generointisa¨a¨nto¨¨a. Generointisa¨a¨nn¨oilla¨ on siten er¨aa¨nlainen s¨a¨ant¨ohierarkia, joka noudattaa pa¨¨aosin hinta- ja aikailmausten ja erityisesti niiden Java-esitysmuodon rakennetta. Generointiohjelma soveltaa s¨a¨ant¨oj¨a hinta- tai aikailmaukseen sa¨¨ant¨ohierarkian mukaisessa ja¨rjestyksess¨a. S¨aa¨nt¨ohierarkia on siis s¨a¨ant¨ojen soveltamishierarkia, ei luokkahierarkia.
Osaan s¨aa¨nto¨tyypeist¨a kuuluu vain yksi generointis¨a¨anto¨, joka vastaa kaikkien tietyntyypisten ilmausten generoinnista. Toisiin sa¨a¨nt¨otyyppeihin taas voi kuulua useita eri sa¨¨ant¨oj¨a, jolloin generointiohjelma valitsee s¨aa¨nno¨n sek¨a ilmauksen tyypin etta¨ ilmauksen sis¨all¨on perusteella, esimerkiksi merkkijonotunnuksen perusteella.
Generointisa¨a¨nn¨oilla¨ on kiintea¨t nimet tai nimien perusosat. S¨a¨ann¨on koko nimi on kiintea¨, jos sa¨¨anto¨tyyppiin kuuluu vain yksi s¨aa¨nto¨. Jos sa¨a¨nto¨tyyppiin voi kuulua useita s¨a¨anto¨ja¨, s¨a¨ann¨on nimessa¨ on kiinte¨an perusosan lis¨aksi muuttuva loppuosa, joka vastaa tyypillisesti jotain ilmauksissa ka¨ytettya¨ merkkijonotunnusta. T¨all¨oin generointiohjelma k¨aytta¨a¨ kyseista¨ sa¨a¨nt¨oa¨ kyseisen merkkijonotunnuksen generointiin.
S¨a¨ant¨ojen nimet (ominaisuusavaimet) koostuvat pisteella¨ erotetuista osista eli komponenteista. Ensimm¨ainen osa m¨a¨arittelee s¨a¨anno¨n ka¨ytt¨oalueen, joka on yksi seuraavista:
gen yleinen sa¨¨anto¨ tai asetus, joka koskee sek¨a hinta- etta¨ aikailmauksia (general),
pr hintas¨aa¨nt¨o (price), tai
tm aikas¨a¨anto¨ (time).
Sa¨¨ann¨on nimen toinen osa ma¨a¨rittelee sa¨¨ann¨on pa¨a¨tyypin, joka on yksi seuraavista:
s merkkijonos¨a¨ant¨o, joka tuottaa merkkijonotunnusta vastaavan merkkijonon (string),
fmt muotoilus¨aa¨nt¨o, jolla voi yhdist¨aa¨ jo generoituja merkkijonoja alhaalta ylo¨spa¨in yhteydetto¨m¨an kieliopin tapaan tai muotoilla lukuilmauksia ja numeerisia aikailmauksia (f ormat), tai
opt valitsin- tai asetuss¨a¨ant¨o, jolla voi vaikuttaa generointituloksen yksityiskohtiin (option).

43
S¨a¨ann¨on nimen loppuosan rakenne vaihtelee sa¨a¨nno¨st¨a riippuen. Tyypillisesti nimen komponentteja on yhteensa¨ kolmesta viiteen.
Sa¨a¨nn¨on nimen osa voi olla myo¨s oletusarvo, jota merkita¨¨an kysymysmerkilla¨. Oletusarvomerkkia¨ ka¨yteta¨¨an eniten s¨aa¨nn¨on nimen viimeisen¨a tai toiseksi viimeisen¨a osana, muuttuvana loppuosana, jolloin se tyypillisesti kuvaa lokalisoitavaa merkkijonotunnusta. Merkkijonotunnusta generoidessaan generointiohjelma etsii ensin s¨aa¨nt¨oa¨, jossa muuttuvana loppuosana on lokalisoitava tunnus. Jos sellaista s¨a¨anto¨a¨ ei ole, ohjelma k¨aytt¨a¨a s¨aa¨nt¨o¨a, jossa tunnuksen tilalla on oletusarvomerkki.
Sa¨a¨nt¨ojen nimet sis¨alta¨va¨t useissa tapauksissa yhtena¨ osanaan sen Java-luokan nimen, jonka olioita ne ka¨sittelev¨at. K¨ayt¨anto¨ ei kuitenkaan ole t¨aysin johdonmukainen. Se on myo¨s sika¨li huono ka¨yta¨nto¨, ett¨a se on kiinnitetty yhteen ilmausten esitysmuotoon.
Seuraavassa on muutamia esimerkkeja¨ s¨a¨ant¨ojen nimist¨a. Sa¨¨anno¨n nimen mahdollinen muuttuva loppuosa on kursivoitu.
pr.s.groupname.gr Hintaryhm¨an merkkijonotunnuksen gr merkkijonos¨aa¨nt¨o.
pr.fmt.list.PriceItemList Hinta-alkiolistan (luokka PriceItemList) muotoilus¨a¨ant¨o.
pr.opt.currency.mark_style.? Hinnan valuuttailmauksen tyylin valitseva valitsins¨a¨ant¨o, joka kattaa kaikki ne valuutat, joille ei ole erillista¨ sa¨a¨nt¨oa¨ (sa¨¨ann¨on nimen muuttuva loppuosa vastaa valuutan merkkijonotunnusta).
tm.s.weekday.special.we Ei-numeerisen viikonpa¨iva¨ilmauksen we muotoilusa¨a¨nt¨o.
tm.fmt.class.TimeItem Aika-alkion (luokka TimeItem) muotoilusa¨a¨nt¨o.
tm.fmt.date.fulldate Kokonaisen p¨aiv¨am¨aa¨r¨an muotoilusa¨a¨nt¨o.
Generointikomponentin tunnistamien s¨a¨anto¨jen lis¨aksi sa¨a¨nto¨tiedosto voi sisa¨lt¨aa¨ my¨os muita ominaisuusm¨aa¨rittelyita¨, joita voi ka¨ytt¨aa¨ makroina ja joihin varsinaiset sa¨a¨nn¨ot voivat viitata. Na¨iden lisa¨sa¨¨anto¨jen tai -m¨aa¨rittelyiden nimien muoto on vapaa. Makrosa¨a¨nt¨oj¨a kuvaa lyhyesti luku 4.5.6.
Generointisa¨a¨nt¨ojen nimissa¨ pien- ja suuraakkoset ovat eriarvoiset, koska Javan ominaisuustiedostoissa niin on. Siten esimerkiksi kuvitteelliset s¨a¨anno¨t gen.opt.AB, gen.opt.ab ja gen.opt.Ab ovat eri s¨aa¨nto¨j¨a.
Generointiohjelman tunnistamia perussa¨a¨nto¨j¨a tai -s¨a¨ant¨otyyppej¨a on seka¨ hinta- etta¨ aikailmauksille noin 30 eli yhteensa¨ noin 60.

44
4.5.3 S¨a¨anto¨jen p¨a¨atyypit
Generointis¨aa¨nt¨ojen soveltamishierarkian alimmalla tasolla, puun lehtisolmuina, ovat merkkijonosa¨¨ann¨ot, jotka tuottavat merkkijonotunnuksia vastaavat tulosmerkkijonot. N¨ama¨ sa¨a¨nno¨t vastaavat niita¨ Java-luokkien merkkijonokenttia¨, joita j¨arjestelma¨ k¨asittelee merkkijonotunnuksina. Sa¨a¨nto¨jen runko on tyypillisesti pelkka¨ kiinte¨a merkkijono, joka tulee generointitulokseen ilmauksen sis¨alt¨am¨an merkkijonotunnuksen paikalle. T¨allaisia s¨a¨anto¨ja¨ ovat esimerkiksi seuraavat s¨a¨anno¨t:
pr.s.groupname.st = opiskelijat tm.s.date.special.su = kes¨alla¨ Ta¨ssa¨ st on hintaryhma¨n merkkijonotunnus ja su ei-numeerisen p¨aiva¨m¨a¨ar¨an merkkijonotunnus. S¨a¨ant¨ohierarkian alimmalla tasolla ovat myo¨s ne muotoilus¨aa¨nn¨ot, jotka muotoilevat numero- ja p¨aiv¨aysarvoja s¨a¨ann¨on rungon ja ka¨yt¨oss¨a olevan kieli- ja maaasetuksen m¨aa¨r¨aa¨m¨all¨a tavalla. Na¨ma¨ sa¨a¨nn¨ot vastaavat numero- ja p¨aiva¨ysarvoja ilmaisevia Java-luokkia. N¨aiden sa¨¨anto¨jen runkona on merkkijono, joka sis¨alta¨a¨ hakasulkeiden sis¨alla¨ muotoilumerkkijonon, jonka generointiohjelma v¨alitt¨aa¨ ilmauksen tyypin mukaiselle Java-muotoiluluokalle (java.text.NumberFormat tai java.text.SimpleDateFormat) ja jonka mukaan luokan muotoilumetodi muotoilee numero- tai p¨aiva¨ysarvon. Mahdolliset hakasulkeiden ulkopuolella olevat tekstit tulevat generointitulokseen sellaisinaan. T¨allaisia muotoilusa¨a¨nto¨j¨a ovat esimerkiksi seuraavat sa¨¨ann¨ot:
pr.fmt.price.whole = [#,##0] tm.fmt.date.mon = [MMMM] N¨aista¨ ensimm¨ainen s¨aa¨nto¨ muotoilee hinnan, joka ei sisa¨lla¨ desimaaliosaa, ja ja¨lkimma¨inen yksitt¨aisen kuukauden nimen. Generointisa¨a¨nt¨ohierarkian ylempien tasojen sa¨¨ann¨ot ovat muotoilus¨a¨anto¨j¨a, jotka yhdist¨av¨at merkkijonoja, jotka alempien tasojen sa¨¨ann¨ot ovat tuottaneet ka¨sitelta¨va¨n ilmauksen osailmauksista. T¨allaiset yhdist¨av¨at muotoilus¨aa¨nn¨ot viittaavat edellisen tason s¨a¨ant¨ojen tuottamiin merkkijonoihin muodolla {nimi }, missa¨ nimi on s¨a¨anno¨n lapsen nimi. Kullakin sa¨¨ann¨oll¨a on m¨a¨ar¨atyt lasten nimet; erityisesti lapsen nimi ei ole sama kuin sita¨ vastaavan merkkijonon tuottaneen edellisen tason sa¨a¨nno¨n nimi. Viittauksen s¨aa¨nn¨on lapseen voi mielta¨a¨ myo¨s argumenttiviittauksena: sa¨a¨nno¨n argumentteina ovat edellisen tason sa¨¨ant¨ojen tuottamat merkkijonot. Yhdista¨v¨at muotoilusa¨a¨nn¨ot on toteutettu ka¨ytt¨aen luokkaa java.text.MessageFormat. Nimetyt lapset tai argumentit ovat kuitenkin laajennus

45
luokan MessageFormat tunnistamaan muotoon, joka sallii vain argumentin paikkaa osoittavan numeron. Yhdist¨avi¨a muotoilus¨a¨ant¨oja¨ ovat esimerkiksi seuraavat sa¨¨ann¨ot:
pr.fmt.currency.usd = {currency}{amount} tm.fmt.range.date.min = {min} alkaen N¨aista¨ ensimma¨inen sa¨a¨nto¨ liitt¨a¨a Yhdysvaltain dollareina (usd) olevaan hintaan valuuttatunnuksen ja j¨alkimm¨ainen muotoilee pa¨iva¨ma¨¨ar¨av¨alin, joka sisa¨lta¨a¨ pelka¨n alkuarvon. Aaltosulkeiden ulkopuolella olevat osat tulevat sa¨a¨nn¨on tuottamaan merkkijonoon sellaisinaan. Valitsins¨aa¨nn¨oilla¨ voi vaikuttaa generointiohjelman toimintaan ja generointituloksen yksityiskohtiin. Valitsinsa¨¨ann¨ot eiva¨t varsinaisesti kuulu generointis¨aa¨nto¨hierarkiaan, koska ne eiv¨at vastaa mink¨aa¨n ilmausten osien generoinnista eiva¨tka¨ valitsins¨aa¨nto¨jen runkojen sisa¨lta¨m¨at merkkijonot tule generointitulokseen. Valitsins¨aa¨nto¨j¨a ovat esimerkiksi seuraavat sa¨a¨nno¨t: pr.opt.currency.default_decimals.itl = 0 tm.opt.datestyle = dmy Na¨ista¨ ensimma¨inen s¨aa¨nto¨ ma¨¨arittelee Italian liiroina olevien hinta-arvojen desimaalien ma¨a¨ra¨n ja j¨alkimma¨inen asettaa p¨aiva¨m¨a¨ar¨aalkioiden j¨arjestykseksi p¨aiva¨­ kuukausi­vuosi.
4.5.4 S¨a¨anto¨jen muoto ja ominaisuudet
Generointis¨aa¨nn¨on runko voi olla joko yksinkertainen (simple) tai rakenteinen (complex). Yksinkertaisen sa¨¨ann¨on runko on merkkijono, jonka arvoa generointiohjelma ka¨ytt¨aa¨ sellaisenaan tai muotoilus¨aa¨nt¨ojen tapauksessa asiaankuuluvana muotoilus¨a¨ant¨on¨a. Valitsinsa¨a¨nno¨t ovat aina yksinkertaisia s¨a¨anto¨j¨a ja merkkijonosa¨¨anno¨t useimmiten.
Rakenteisen sa¨¨ann¨on merkkin¨a on sa¨¨ann¨on rungon aloittava @-merkki. Rakenteinen sa¨a¨nto¨ voi sis¨alt¨aa¨ yhden tai useampia tuloslauseita, ehtolauseita, attribuuttisijoituslauseita ja lis¨alasten esittelylauseita. Sa¨a¨nn¨on per¨akk¨aiset lauseet erotetaan toisistaan puolipisteella¨; puolipiste ei kuitenkaan ole pakollinen ennen aaltosuljetta tai sen ja¨lkeen. Rakenteinen s¨aa¨nto¨ voi va¨litt¨a¨a attribuutteja lapsilleen ja attribuuttien arvoja voi tutkia ehtolauseiden ehdoissa. Attribuutteja ja niiden ka¨ytto¨a¨ kuvataan tarkemmin j¨aljempa¨na¨, aliluvussa 4.5.5.
Seuraavien kappaleiden sis¨alt¨ama¨ generointis¨aa¨nt¨ojen muodon kuvaus k¨aytt¨a¨a samoja merkint¨atapoja kuin liitteessa¨ B kuvattujen kielioppisa¨¨anto¨jen oikea puoli; niissa¨ ei ka¨yteta¨ kielioppisa¨a¨nto¨jen vasemmalla puolella olevaa v¨alisymbolia.

46
Rakenteisen sa¨a¨nno¨n pa¨a¨osa on tuloslause. Se ilmaisee arvon, jonka s¨aa¨nt¨o tuottaa generointia varten tuottaman arvon. Arvo voi olla joko kirjaimellinen merkkijono tai muotoilumerkkijono. Yksinkertainen sa¨¨anto¨ vastaa rakenteista sa¨a¨nt¨oa¨, jonka ainoa lause on tuloslause. Jos s¨a¨ant¨o sisa¨lta¨a¨ useita erillisi¨a tuloslauseita, generointiohjelma yhdista¨a¨ niiden tuottamat merkkijonot per¨akk¨ain sa¨a¨nn¨on tuottamaksi merkkijonoksi. Tuloksessa ovat mukana myo¨s niiden ehtolauseiden sisa¨lta¨ma¨t tuloslauseet, joiden ehdot t¨ayttyiva¨t. Tuloslauseen muoto on
'result'? '"'merkkijono'"'
Avainsana result ei siis ole pakollinen. Attribuuttisijoituslauseita k¨ayteta¨¨an sijoittamaan arvoja attribuuteille.
N¨ait¨a sijoituslauseita on kahdenlaisia: preset sijoittaa arvon ennen s¨aa¨nno¨n lasten ka¨sittely¨a eli osailmausten generointia, postset lasten ka¨sittelyn ja¨lkeen. Ennen lasten ka¨sittely¨a annetaan tyypillisesti arvoja ka¨sitelta¨vien lasten attribuuteille, jotka vaikuttavat lasten tuottamien osailmausten generointiin. Lasten k¨asittelyn ja¨lkeen lasten attribuuttien arvoja voi tutkia ja ka¨ytta¨¨a s¨aa¨nno¨ssa¨, jota generointiohjelma parhaillaan k¨asittelee, ja ne voi tarvittaessa v¨alitta¨a¨ edelleen ylemma¨n tason s¨aa¨nn¨olle. Attribuuttisijoituslauseen muoto on
('preset' | 'postset') attribuutti '='arvo (',' attribuutti '='arvo)
Ehtolause muistuttaa rakenteeltaan Java- tai Perl-kielen ehtolausetta.12 Ehtolauseen ehdon peruslausekkeet ovat merkkijonovertailuja attribuuttien arvojen tai merkkijonovakioiden v¨alill¨a. Seka¨ yht¨asuuruus- ett¨a ja¨rjestysvertailut ovat mahdollisia: ka¨yto¨ss¨a ovat vertailuoperaattorit ==, !=, <, <=, > ja >=. Na¨ita¨ peruslausekkeita voi yhdist¨a¨a loogisilla operaattoreilla ja (&&), tai (||) ja ei (!), ja lausekkeita voi ryhmitell¨a sulkeilla. Ehtolauseen muoto on
'if' '('ehto')' '{' lauseita '}' ( ( 'elseif' '('ehto')' '{' lauseita '}' )
'else' '{' lauseita '}' )?
Lis¨alasten esittelylause esittelee sa¨a¨nno¨lle lisa¨lapsia, jotka ovat ka¨yta¨nn¨ossa¨ ylima¨a¨r¨aisia¨ argumentteja. T¨allaiset lis¨aargumentit ovat tarpeen esimerkiksi haluttaessa sis¨allytt¨a¨a jonkin attribuutin arvo sa¨¨ann¨on tulokseen. Lisa¨lapsen merkkijonoarvoon voi viitata muodolla {nimi } samaan tapaan kuin s¨aa¨nn¨on tavallisenkin lapsen tuottamaan merkkijonoon. Arvo t¨aytyy asettaa k¨aytta¨ma¨lla¨ lis¨alapsen erityisattribuuttia %value. Lis¨alasten esittelylauseen muoto on
12Perlin tapaan ja Javasta poikkeavasti aaltosulkeet lauseiden ympa¨rilla¨ ovat pakolliset. Perlin tapaan ka¨yto¨ss¨a on erillinen elseif haara, mutta avainsana on elseif eika¨ elsif kuten Perlissa¨.

47
'child' nimi ( , nimi )
Lis¨alasten esittelylauseen ka¨yt¨osta¨ on esimerkkeja¨ liitteen D kuvaamissa generointis¨aa¨nn¨ost¨oiss¨a, esimerkiksi luvussa D.2.3 listauksen riveill¨a 174­188.
4.5.5 Attribuutit
Keskeinen generointisa¨¨ant¨ojen ilmaisuvoimaa lis¨aa¨v¨a ominaisuus ovat attribuutit. Niiden avulla voi sa¨a¨dell¨a generointia valitsemalla ehtolauseissa sopivat tuloslauseet attribuuttien arvojen perusteella. Attribuutin arvo on aina merkkijono. Attribuutteja voi ka¨ytta¨¨a generointis¨aa¨nto¨hierarkiassa (generointisa¨¨ant¨ojen kutsupuussa) periytyv¨asti, synteettisesti tai globaalisti. Generointis¨aa¨nt¨ojen attribuutit muistuttavat paljolti attribuuttikielioppien attribuutteja (Knuth 1968). Attribuutit liittyva¨t aina generointis¨aa¨nt¨oihin. Useimmiten generointisa¨¨anto¨ vastaa jotain hinta- tai aikailmauksen osailmausta, jolloin attribuutin voi mielt¨a¨a liittyv¨aksi kyseiseen osailmaukseen. Ta¨llaista suoraa vastaavuutta ei kuitenkaan ole kaikissa tapauksissa, esimerkiksi listojen generointis¨a¨anno¨iss¨a ja yksitta¨isen valuuttainformaation kohdalla. Generointis¨aa¨nt¨ohierarkian ja ilmausten rakenteen eroja tarkastellaan lyhyesti luvussa 4.5.7.
Attribuuttiviitteen muoto on ryhm¨a:nimi. Attribuutin ryhma¨a¨ voisi pit¨aa¨ er¨a¨anlaisena attribuutin omistajana tai nimiavaruutena. Se voi olla joko viite generointisa¨a¨nto¨¨on tai globaali attribuuttiryhm¨a. S¨aa¨nn¨on omaan attribuuttiryhm¨aa¨n viitataan nimella¨ this, ylemm¨an (edellisen) tason s¨aa¨nno¨n attribuuttiryhm¨aa¨n nimell¨a parent ja sa¨¨ann¨on lasten (alemman tason s¨aa¨nto¨jen) attribuuttiryhmiin lasten nimill¨a. Globaali attribuuttiryhma¨ global sis¨alta¨a¨ kaikki generointis¨a¨ann¨ot: sen kautta on mahdollista viitata esimerkiksi valitsinsa¨a¨nn¨on pr.opt.currency.mark_style arvoon attribuutilla global:pr.opt.currency.mark_style. T¨ama¨n lis¨aksi s¨aa¨nto¨jen kirjoittaja voi k¨aytt¨a¨a mita¨ tahansa muuta ryhma¨nimea¨ globaalina attribuuttiryhm¨an¨a.
Generointikomponentti ei v¨alit¨a attribuuttien arvoja automaattisesti s¨a¨ann¨olt¨a sen lapsille tai p¨ain vastoin. Jos jonkin attribuutin arvo halutaan va¨litt¨aa¨ suuntaan tai toiseen, sen arvo t¨aytyy kopioida kaikissa sa¨a¨nno¨issa¨ attribuuttiryhm¨ast¨a this sa¨a¨nn¨on lasten attribuuttiryhmiin tai pa¨in vastoin.
Sa¨a¨nn¨on sisa¨lt¨am¨a attribuuttisijoituslause voi sijoittaa attribuutille vain arvon, joka on varmasti m¨aa¨ritelty s¨a¨anno¨n soveltamisvaiheessa, joko ennen lasten k¨asittelemist¨a (preset; periytyv¨at attribuutit) tai lasten ka¨sittelemisen j¨alkeen

48
(postset; synteettiset attribuutit). Koska s¨a¨anno¨n lasten k¨asittelyja¨rjestys on ma¨a¨rittelem¨ato¨n, s¨aa¨nto¨ ei voi sijoittaa yhden lapsen attribuuttiin toisen lapsen attribuutin arvoa. Sa¨¨anto¨ ei my¨oska¨¨an voi viitata lasten attribuuttien arvoihin ehtolauseiden ehdoissa, koska ohjelma evaluoi ehdot ennen lasten generointia ja siten lasten attribuuttien arvojen laskemista. Poikkeuksena ovat muutamat erityisattribuutit, jotka viittaavat s¨aa¨nno¨n ka¨sittelema¨n osailmauksen (ilmausolion) ominaisuuksiin ja joilla on arvo jo ennen generointia. Erityisattribuuttien nimet alkavat &-merkilla¨.
Kaikilla ilmausolioilla on seuraavat erityisattribuutit: osailmauksen (ilmausolion) Java-luokan nimi (&type), osailmauksen merkkijonoesitys (&value) ja osailmauksen mahdollisesti sisa¨lt¨amien listojen syvyys (&depth). Osailmauksen merkkijonoesitys on hy¨odyllinen virheiden ja¨ljitta¨misessa¨ sek¨a erityisesti sen tutkimisessa, sisa¨ltyyko¨ ilmaukseen jokin osailmaus vai ei. Osailmauksen olemassaolon tutkiminen on tarpeen esimerkiksi aikailmauksen generoinnissa: jos aikailmaus sisa¨lt¨aa¨ poikkeusaikailmauksen, ta¨ytyy perusaikojen ja poikkeusaikojen v¨aliin generoida sana paitsi tai vastaava, muussa tapauksessa sit¨a ei saa generoida.
Seuraavat erityisattribuutit on m¨aa¨ritelty osalle ilmausoliotyypeist¨a: onko lukuarvon arvo yksi, onko solmu merkkijonotunnuksena ilmaistu erityishinta tai -ajankohta sek¨a aikalistan ensimm¨aisen alkion Java-luokan nimi. Lukuarvon yksik¨ollisyyden ilmaiseva erityisattribuutti on tarpeellinen tutkittaessa, tarvitseeko lukuarvoon liittyv¨asta¨ sanasta generoida yksikko¨ vai monikko.
Edell¨a mainittujen erityisattribuuttien lis¨aksi generointikomponentti tunnistaa kolme erityisattribuuttia, joille annettava arvo vaikuttaa generoinnin tulosmerkkijonoon. Na¨iden erityisattribuuttien nimet alkavat prosenttimerkill¨a. Generointiohjelma v¨alitt¨a¨a merkkijonosa¨¨anno¨n attribuutin %morph arvon morfologiselle generaattorille yhdessa¨ s¨a¨anno¨n tuottaman merkkijonon kanssa; ta¨lla¨ attribuutilla voi ilmaista merkkijonolle haluttavan taivutuksen. Attribuutin %value kautta voi antaa merkkijonoarvon child-lauseessa m¨aa¨ritellylle lisa¨lapselle, mika¨ mahdollistaa attribuutin arvon sisa¨llytt¨amisen tulosmerkkijonoon. Attribuuttia %dateformat voi ka¨ytta¨a¨ sellaisessa s¨a¨anno¨ssa¨, joka vastaa pa¨iva¨ysarvon sisa¨lta¨v¨aa¨ ilmausoliota. Jos ta¨llaisen sa¨¨ann¨on lisa¨lapsen attribuutille %dateformat antaa arvon true, kyseisen lis¨alapsen merkkijonoarvoksi tulee ilmausolion sisa¨lt¨ama¨ p¨aiv¨aysarvo, jonka generointikomponentti muotoilee ka¨ytta¨en muotoilumerkkijonona lisa¨lapsen %value-attribuutin arvoa. N¨aiden erityisattribuuttien k¨ayto¨sta¨ on esimerkki liitteen D.2.3 listauksen riveilla¨ 204­209.

49
Erityisattribuuttiryhma¨n rulename attribuutit sisa¨lta¨v¨at sa¨¨ann¨on nimen ja sen osat, joihin voi viitata sa¨a¨nn¨oss¨a n¨aiden attribuuttien kautta. S¨aa¨nn¨on nimeen viittaaminen on hyo¨dyllista¨ erityisesti makrosa¨a¨nno¨issa¨, joissa voi siten tutkia varsinaisen (makrokutsun sisa¨lta¨neen) s¨a¨anno¨n nimea¨ ehtolauseessa. Ta¨ma¨ ominaisuus on hyo¨dyllinen myo¨s merkkijonotunnuksia tuottavien s¨aa¨nt¨ojen oletusversioissa, joita generointiohjelma k¨aytt¨aa¨, jos se ei lo¨yd¨a ilmauksen sis¨alta¨ma¨lle merkkijonotunnukselle omaa s¨aa¨nto¨¨a. Na¨in on mahdollista tuottaa esimerkiksi ilmoitus tuntematon hintaryhma¨ "xx".
4.5.6 Makrot
Generointisa¨¨anto¨jen syntaksia ta¨ydenta¨a¨ makro-ominaisuus, joka mahdollistaa ominaisuuden arvon eli generointis¨a¨anno¨n rungon sis¨allytta¨misen toisen s¨aa¨nn¨on runkoon. Makrot eiv¨at ole generointis¨a¨anto¨formalismin kannalta v¨altt¨am¨atto¨mi¨a eiv¨atk¨a ne varsinaisesti lisa¨¨a s¨aa¨nto¨jen ilmaisuvoimaa. Ne mahdollistavat kuitenkin s¨aa¨nto¨jen modularisoinnin, kun samaa peruss¨aa¨nto¨runkoa ei tarvitse toistaa moneen kertaan. Ta¨m¨a parantaa s¨aa¨nto¨jen yll¨apidetta¨vyytta¨.
Yksinkertaisimmillaan makroviite eli makrokutsu on muotoa $(makronnimi ).13 Makroilla voi olla my¨os nimettyj¨a argumentteja, jolloin makroviite on muotoa
'$('makronnimi ( argumentinnimi '='argumentinarvo )+ ')'
Makron rungon rungon sis¨all¨a argumentin arg arvoon viitataan muodolla $(%arg). Argumentille voi antaa makron rungossa oletusarvon, jonka argumentti saa, jos makroviite ei anna argumentille arvoa.
Makroviitteit¨a voi k¨aytt¨aa¨ seka¨ tavallisten sa¨a¨nt¨ojen ett¨a toisten makrosa¨a¨nto¨jen rungoissa. Generointiohjelman sa¨¨anto¨k¨aa¨nnin laajentaa makrot sek¨a yksinkertaisissa etta¨ rakenteisissa s¨aa¨nno¨iss¨a. Ohjelma laajentaa makrot ennen rakenteisten s¨aa¨nto¨jen j¨asent¨amista¨, joten sa¨¨anto¨jen ei tarvitse olla muodoltaan oikeellisia ennen makrojen laajentamista. Tavallista s¨aa¨nto¨¨a voi k¨aytta¨a¨ suoraan argumentittomana makrona. Sen sijaan argumentillista makroa ei voi ka¨ytt¨aa¨ tavallisena sa¨¨anto¨n¨a, koska makroargumenttiviitteit¨a sisa¨lt¨ava¨ makron runko ei tyypillisesti ole syntaktisesti oikeellinen generointis¨a¨ant¨o.
Makros¨aa¨nno¨ist¨a on useita esimerkkej¨a liitteen D sisa¨lta¨missa¨ generointisa¨a¨nn¨osto¨iss¨a. Makros¨a¨ant¨ojen nimet alkavat m-kirjaimella.
13Makrojen syntaksiin olen lainannut piirteita¨ Bourne-komentotulkin ja Make-ohjelman muuttujista.

50
4.5.7 S¨a¨anto¨joukko
Ta¨ma¨ aliluku esittelee lyhyesti muutamia generointis¨aa¨nt¨oj¨a tai -sa¨¨ant¨otyyppej¨a ja niiden avulla toteutettuja generoinnin ominaisuuksia.
Muutamilla s¨a¨anto¨hierarkian keskell¨a olevilla¨ yhdist¨avilla¨ muotoilusa¨a¨nno¨illa¨ on vain yksi lapsi. Ta¨llaisia sa¨a¨nto¨j¨a ovat esimerkiksi hinta- ja aikailmausten ylimma¨n tason s¨a¨anno¨t. Vaikka ta¨llaiset s¨a¨ann¨ot saattavat n¨aytta¨¨a tarpeettomilta, niit¨a voisi ka¨ytta¨¨a tuottamaan hinta- ja aikailmauksia rakenteisessa muodossa, esimerkiksi XML-muodossa.
Ilmausten sisa¨lta¨mien listojen generointis¨aa¨nn¨ot ovat yhdist¨avi¨a muotoilusa¨¨anto¨ja¨. Generointiohjelma soveltaa listangenerointisa¨a¨nt¨o¨a erikseen listan kuhunkin alkioon: s¨aa¨nto¨ yhdista¨a¨ alkion generointituloksen sita¨ edelta¨vien alkioiden yhdessa¨ muodostamaan generointitulokseen. Kullakin listangenerointisa¨a¨nno¨ll¨a on kaksi lasta: ensimma¨inen on ohjelman parhaillaan ka¨sittelema¨ listan alkio ja toinen on merkkijono, joka sis¨alta¨¨a t¨ata¨ alkiota edelta¨vien alkioiden yhdistetyn generointituloksen.14 Listan ensimm¨aisen ja viimeisen alkion voi ka¨sitell¨a erikseen, mik¨a mahdollistaa esimerkiksi ja-sanan k¨ayt¨on listan kahden viimeisen alkion v¨aliss¨a, vaikka alkioiden erottimena muuten olisikin pilkku.
Listojen generointia varten tein toteuttamiini generointis¨a¨anto¨ihin makroja, joita useimmat listojen generointis¨a¨anno¨t ka¨ytta¨v¨at (liite D.1.1, erityisesti rivit 1­ 55). Listamakroja on kolmea tyyppia¨ erityyppisille listoille sen mukaan, sisa¨lta¨v¨atko¨ listan alkiot listoja aina, joskus vai eiv¨at koskaan. T¨all¨a pystyy vaikuttamaan listan alkioiden erotimerkkiin: jos listan alkiot sisa¨lt¨ava¨t listoja, alkioiden erottimena on puolipiste, muuten pilkku.
Hintaryhmiin ja hintoihin liittyvien m¨a¨aritelistojen generointis¨aa¨nn¨ot eroavat muiden listojen generointis¨a¨anno¨ist¨a siten, etta¨ generointiohjelman k¨aytt¨ama¨ sa¨a¨nto¨ riippuu ma¨a¨ritteesta¨ ja hintaryhmien m¨a¨aritteill¨a mahdollisesti my¨os ryhm¨an nimest¨a. N¨ain kunkin ma¨a¨ritteen voi liitta¨a¨ tulosmerkkijonoon sille parhaiten soveltuvalla tavalla. Ma¨a¨ritteita¨ ei yleens¨a haluta tulosmerkkijonoon listana, vaan ne voivat liitty¨a hintaryhma¨a¨n tai hintaan eri tavoin m¨aa¨ritteest¨a riippuen: jotkin m¨a¨aritteet saattavat tulla hintaryhma¨n tai hinnan eteen ja toiset sen per¨a¨an. Esimerkiksi ryhm¨an koon ilmaiseva ma¨a¨rite on luonnollinen ennen ryhma¨n nime¨a,
14Koska generointisa¨a¨nt¨ojen lapset ovat sa¨¨ant¨oja¨, listangenerointis¨a¨ant¨ojen ensimm¨ainen lapsi on oikeastaan sa¨a¨nt¨o, joka ka¨sittelee listan alkioina oleva osailmaukset. Sen sijaan toinen lapsi on erikoistapaus, koska sen on tuottanut sama listangenerointis¨aa¨nto¨. Toinen lapsi ei myo¨sk¨a¨an vastaa suoraan mita¨a¨n yksitt¨aista¨ osailmausta.

51
10­20 lasta, kun taas hinnanm¨aa¨rite "vuorokautta kohti" on luontevampi hinnan j¨alkeen, 400 mk/vrk.
Hintojen generointisa¨¨ann¨ot eiva¨t kaikilta osiltaan suoraan vastaa hintailmausten rakennetta. Esimerkiksi yksitta¨inen hinta-alkio ei v¨altt¨am¨atta¨ sisa¨lla¨ valuuttainformaatiota, jos hinta-alkioryhma¨ sis¨alt¨aa¨ valuuttatiedon. Kuitenkin valuuttatieto halutaan usein generointituloksen kaikkiin yksitta¨isiin hintoihin. Lis¨aksi jotkin valuuttasymbolit voidaan merkita¨ hintava¨li-ilmauksen kumpaankin osapuoleen, toiset vain yhden kerran v¨ali-ilmausta kohti: esimerkiksi $20­$50, mutta 20­50 mk. T¨ah¨an voi vaikuttaa valuuttakohtaisella valitsinsa¨a¨nn¨olla¨. Generointis¨aa¨nno¨t liitta¨va¨t valuuttasymbolin suoraan yksitt¨aiseen numeroarvoon, vaikka valuuttatieto tuleekin ylemma¨lt¨a tasolta, joko hinta-alkiosta tai hinta-alkioryhma¨sta¨. Valuuttasymbolin merkitsemiseen ennen hintaa tai sen ja¨lkeen voi vaikuttaa valuuttakohtaisella muotoilusa¨¨anno¨lla¨. Generointiohjelma ei tue valuuttasymbolin merkitsemista¨ desimaalierottimen tilalle, mita¨ k¨aytet¨aa¨n joidenkin valuuttojen kohdalla.
Sa¨a¨nno¨t mahdollistavat eri valuuttanimen tai -symbolin k¨aytt¨amisen yksiko¨lliselle ja monikolliselle hinnalle.15 Vaihtoehtoisesti monikollisen valuuttanimen voi tuottaa yksik¨ollisesta¨ muodosta morfologisella generaattorilla. Hintaryhmien nimien sek¨a hintaryhmien ja hintojen m¨aa¨ritteiden taivuttamiselle ei ole vastaavaa erityista¨ tukea, mutta samaan tulokseen p¨aa¨see morfologisen generaattorin ja aliluvussa 4.5.5 mainitun erityisattribuutin &equalsOne avulla.
Generointis¨a¨ann¨oissa¨ on tuki hintojen tuottamiselle useina eri valuuttoina, vaikka hintailmauksessa kullakin hinnalla on vain yksi valuutta. T¨am¨a mahdollistaa hintojen tuottamisen esimerkiksi sek¨a markkoina etta¨ euroina. Generointitulokseen haluttavat lisa¨valuutat ja valuuttojen v¨aliset vaihto- tai muuntokurssit ilmaistaan valitsins¨aa¨nno¨illa¨. Tulokseen tulee kuitenkin aina mukaan hintailmauksen itsensa¨ sis¨alt¨ama¨ valuutta.
Aika-alkioiden generointisa¨a¨nno¨t yhdista¨va¨t yleensa¨ aika-alkion ja sen ali-ilmauksen samalla tavalla ilmausten tyypeist¨a riippumatta. Kullekin aika-alkiotyypille voi kuitenkin kirjoittaa oman generointisa¨¨ant¨ons¨a, jolla voi vaikuttaa siihen, miten generointiohjelma yhdist¨aa¨ aika-alkion ja sen ali-ilmauksen tulosmerkkijonoksi. Esimerkiksi vuosi-ilmauksen ja sit¨a seuraavan tulevan ali-ilmauksen va¨liin voi generoida kaksoispisteen, vaikka muissa tapauksissa aika-alkion ja sen ali-ilmauksen va¨liin ei tulisikaan v¨alimerkki¨a. Samoin aika-alkion ja sen ali-ilmauksen keskin¨ainen
15Yksiko¨llinen hinta on vain hinta, joka on t¨asm¨alleen 1.

52
ja¨rjestys tulosmerkkijonossa voi haluttaessa riippua aika-alkion tyypista¨. Aikailmauksen voi tietyiss¨a tapauksissa yhdist¨aa¨ ali-ilmauksiinsa. Esimerkiksi
aikailmaus &2000(10-10_12-12) tuottaa tuloksen 10.10.­12.12.2000. Aikailmausten yhdist¨amisen voi kuitenkin esta¨¨a valitsins¨a¨anno¨ll¨a. Ta¨ll¨oin esimerkkitapauksessa vuosilukua ei yhdistett¨aisi v¨ali-ilmauksen ja¨lkimma¨iseen pa¨iv¨am¨aa¨r¨aa¨n, joten tulos olisi tyypillisesti 2000: 10.10.­12.12. Ilmausten yhdist¨amiseen vaikuttaa my¨os ka¨ytetty p¨aiv¨ama¨¨ar¨an osien j¨arjestys: eurooppalainen pa¨iva¨­kuukausi­vuosi, amerikkalainen kuukausi­p¨aiv¨a­vuosi vai ISO 8601 -standardin mukainen vuosi­kuukausi­ pa¨iv¨a. Ei-numeerisia aikailmauksia ei voi yhdist¨aa¨ muiden aikailmausten kanssa, joten ne t¨aytyy tarvittaessa k¨asitella¨ erikseen: esimerkiksi pa¨¨asi¨aisen¨a, vappuna ja juhannuksena 2001.
Sellaiseen p¨aiv¨am¨aa¨ra¨a¨n, johon ei liity viikonp¨aiv¨ailmausta, voi liitt¨aa¨ kyseisen pa¨iva¨n viikonpa¨iva¨n. N¨ain esimerkiksi aikailmauksesta &2001-09-30 voisi tuottaa merkkijonon su 30.9.2001. T¨am¨an toiminnon voi valita valitsinsa¨a¨nno¨lla¨.
Generointiohjelman tuottamat kuukausien, viikonp¨aivien ja vuorokaudenaikojen (aamup¨aiva¨, iltap¨aiv¨a) nimet ja lyhenteet ovat oletuksena ne, jotka Java ma¨a¨rittelee k¨aytett¨av¨alle kieli- ja maa-asetukselle. Ne voi kuitenkin ma¨¨aritella¨ sa¨¨anno¨iss¨a uudelleen.
4.5.8 MIETTA-hankkeessa toteutetut generointis¨a¨anno¨st¨ot
MIETTA-demonstraatioja¨rjestelm¨a¨a varten kirjoitin suomen ja englannin generointis¨aa¨nno¨sto¨t, jotka kattavat MIETTA-matkailutietokannan sis¨alta¨ma¨t hinta- ja aikailmaukset sek¨a joitain muitakin ilmauksia. Hankkeen toiset osapuolet toteuttivat englannin sa¨¨ann¨osto¨n pohjalta vastaavat italian ja saksan s¨aa¨nno¨st¨ot.
Generointis¨a¨anno¨sto¨ihin kuuluu yhteinen kielesta¨ riippumaton osa. Se sisa¨lta¨¨a kielesta¨ riippumattomia s¨a¨ant¨oj¨a, joita ovat erityisesti monet osailmauksia yhdist¨av¨at muotoilusa¨a¨nn¨ot. Niiden lis¨aksi s¨a¨anno¨sto¨jen kielesta¨ riippumaton osa m¨a¨arittelee useita makros¨a¨ant¨oja¨, joita kielikohtaiset sa¨a¨nno¨t k¨aytt¨ava¨t.
Englannin generointisa¨a¨nno¨issa¨ on mahdollisuus vaikuttaa generointiohjelman aikailmauksesta tuottaman tuloksen monisanaisuuteen (verbosity). T¨ama¨ ominaisuus on toteutettu pelka¨st¨aa¨n generointis¨a¨anto¨jen ominaisuuksien avulla, ilman generointiohjelman erityist¨a tukea. Tuloksen monisanaisuuden ma¨a¨ra¨¨a yksi valitsins¨aa¨nto¨ (makro), jonka arvon perusteella sa¨a¨nto¨jen ehtolauseet valitsevat sopivat tuloslauseet. Pitka¨ssa¨ muodossa s¨aa¨nno¨t esimerkiksi merkitseva¨t va¨li-ilmaukset totai through-prepositiolla ja k¨aytta¨va¨t kuukausista ja viikonp¨aivist¨a pitki¨a nimia¨,

53
kun taas lyhyess¨a muodossa va¨li-ilmauksisissa on va¨liviiva ja kuukausilla ja viikonpa¨ivilla¨ lyhenteet. Generointis¨a¨anno¨t tuottavat esimerkiksi viikonpa¨iva¨ilmauksesta &[1_4] pitka¨n muodon Monday through Thursday ja lyhyen muodon Mon­Thu.
Englannin generointis¨a¨ann¨oissa¨ on mahdollisuus valita kellonaikojen ilmaiseminen joko 12 tai 24 tunnin ja¨rjestelma¨ssa¨ sek¨a keskip¨aiv¨an ja keskiy¨on ilmaiseminen sanallisesti (noon ja midnight). My¨os na¨m¨a ominaisuudet on toteutettu pelk¨asta¨a¨n s¨a¨ant¨ojen ominaisuuksien avulla.
Englannin s¨a¨anno¨iss¨a ei nykyisell¨a¨an ole tukea kuukaudenpa¨ivien ilmaisemiseen ja¨rjestysnumeroilla. T¨am¨an ominaisuuden voi kuitenkin toteuttaa melko suoraviivaisesti morfologisen generaattorin ja sa¨¨ant¨ojen ominaisuuksien avulla.
Suomen generointis¨aa¨nno¨iss¨a on mahdollisuus valita viikonp¨aivien generointi joko lyhyess¨a tai pitk¨ass¨a muodossa (ma tai maanantaina). Suomen s¨a¨anno¨t ka¨ytta¨va¨t yksinkertaista morfologista generaattoria taivuttamaan kuukausien ja viikonpa¨ivien nimia¨: joulukuussa, tammikuusta maaliskuuhun, maanantaisin, tiistaista perjantaihin. Kuukausiva¨li-ilmaukset voi vaihtoehtoisesti generoida muodossa tammi­maaliskuussa: t¨assa¨ morfologinen generaattori poistaa v¨alin ensimma¨isen kuukauden nimen kuu-loppuosan.16 N¨aiden lis¨aksi hintaryhmien ma¨¨arite lis¨amaksu taivuttaa hintaryhm¨an nimen genetiiviss¨a, esimerkiksi yhden hengen huoneen lisa¨maksu.17 Toteutettamani morfologinen generattori on hyvin yksinkertainen: se osaa tuottaa vain ne taivutusmuodot, joita tarvittiin MIETTA-hankkeessa suomenkielisten hinta- ja aikailmausten generoinnissa.
4.6 Ilmausten muuntaminen kielest¨a riippumattomaan muotoon
Hinta- ja aikailmausten kirjoittaminen ka¨sin kielest¨a riippumattomassa tiiviiss¨a merkkijonomuodossa on ty¨ol¨ast¨a ja aikaaviev¨a¨a. Teht¨av¨aa¨ helpottaisi muunnosohjelma, joka muuntaisi ilmauksia tiiviiseen muotoon tietokantaa varten jostain sellaisesta muodosta, jota ihmisen olisi helpompi tuottaa. A¨ ¨aritapauksessa l¨aht¨omuoto voisi olla t¨aysin rajoittamatonta tekstia¨. K¨ayta¨nn¨ossa¨ t¨allo¨in muunnoksen tulos ei kuitenkaan v¨altta¨m¨atta¨ vastaisi la¨hto¨ilmausta. Todenna¨ko¨isesti olisikin hy¨odyllisemp¨aa¨ rajoittaa la¨ht¨omuotoa jollain tavalla.
16Vaikka sanan loppuosan poistaminen onkin tavallaan morfologisen generaattorin v¨a¨arinka¨ytt¨oa¨, t¨ama¨ on yksinkertaisin tapa generoida t¨allainen kuukausiv¨ali-ilmaus.
17Perusmuotona on t¨assa¨ tapauksessa yhden hengen huone; ka¨ytetty yksinkertainen morfologinen generaattori osaa taivuttaa vain sanan tai ilmauksen lopun.

54
MIETTA-hankkeessa toteutin ilmausten muunnosohjelman alustavan prototyypin. Muuntimen syo¨te on era¨a¨nlaista rajoitettua kielt¨a, josta muunnin tuottaa kielesta¨ riippumattoman ilmauksen muunnossa¨¨ant¨ojen avulla. Ohjelman tunnistama aikailmausten sy¨otemuoto on pa¨¨aosin melko luonnollinen, mutta hintailmausten sy¨otemuoto on varsin j¨aykka¨.
4.6.1 Muuntimen toimintaperiaate
Muunnin on komentorivilta¨ ajettava Java-ohjelma. Muunnin muuntaa ilmauksen kahdessa vaiheessa: ensin se esik¨asittelee sy¨oteilmauksen k¨aytt¨aen s¨aa¨nn¨ollisten lausekkeiden korvauss¨aa¨nt¨oj¨a, ja sitten se ja¨sent¨aa¨ esika¨sittelem¨ansa¨ ilmauksen ja muuntaa sen tulosmuotoon. Esik¨asittelyvaihe ei ole pakollinen, mutta se on usein hy¨odyllinen sy¨otteen muuntamiseksi sellaiseen muotoon, jonka varsinaisen muunnosvaiheen ja¨sennin hyva¨ksyy. Muunnosohjelman ka¨ytt¨am¨at korvaussa¨a¨nno¨t vastaavat ilmaisuvoimaltaan Perlin s¨aa¨nn¨ollisten lausekkeiden korvausoperaatioita (Wall et al. 1996: 57­76).
Varsinaisessa muunnosvaiheessa muunnin kuvaa ensin syo¨teilmauksen sis¨alt¨am¨at tunnukset tai sanat kielest¨a riippumattoman muodon merkkijonotunnuksiksi tai muunnosohjelman itsensa¨ ka¨ytt¨amiksi erityistunnuksiksi. Erityistunnuksella voi merkit¨a esimerkiksi hintaryhma¨n m¨aa¨ritelistan alkamisen. Tunnusten kuvaukset (mappings) esiteta¨¨an ominaisuustiedostoina. Ominaisuustiedostojen k¨aytta¨minen mahdollistaa muunnoksen yksinkertaisen s¨aa¨telyn kielen ja syo¨tedatan tyypin tai la¨hteen mukaan: esimerkiksi PROMIS-tietokannasta tuleville sy¨oteilmauksille voisi olla m¨a¨aritelty lisa¨kuvauksia englanninkielisten ilmausten peruskuvausten lis¨aksi.
Tunnisteiden kuvaamisen ja¨lkeen muunnin ja¨senta¨a¨ sy¨oteilmauksen ja tuottaa esitysmuodon, joka sisa¨lt¨aa¨ hinta- ja aikailmausten Java-tietorakenteita. Hintailmausten muunnoksen tuloksena on la¨hes suoraan lopullinen kielesta¨ riippumaton ilmaus, mutta aikailmauksissa vasta osittain j¨asennetty v¨aliesitysmuoto, josta erillinen heuristiikka kokoaa lopullisen ilmauksen.
4.6.2 Muuntimen tunnistamat hinta- ja aikailmaukset
Muunnosohjelma vaatii hintailmauksilta esik¨asittelyn j¨alkeen melko tarkkaa muotoa: ilmausten osien t¨aytyy olla m¨a¨ara¨tyssa¨ j¨arjestyksess¨a ja v¨alimerkkien k¨aytto¨ poikkeaa selva¨sti luonnollisesta kielesta¨. Esimerkiksi koko hinta-alkioryhma¨¨a koskevan valuutan tunnus t¨aytyy merkita¨ hakasulkeisiin ja hinnan m¨a¨aritteet kaarisul-

55
keisiin. Lisa¨ksi tietyt alkiotyypit t¨aytyy merkit¨a erityistunnuksin, esimerkiksi alennushinnat. Yksinkertaisissa tapauksissa syo¨teilmaukset voivat kuitenkin olla kohtalaisen luonnollisiakin. Sopivien esika¨sittelysa¨a¨nto¨jen ja¨lkeen muunnin tunnistaa ja¨rkev¨asti sellaisia v¨ali-ilmauksia kuin va¨hinta¨a¨n 5 ja 5 tai useampia.
Sopivien esik¨asittelys¨aa¨nto¨jen ja tunnusten kuvausten avulla muunnin osaa muuntaa esimerkiksi seuraavat hintailmaukset kielesta¨ riippumattomaan muotoon:
$ [FIM] 50, children (up to 12 years) 30, groups (15 or more persons) 35 $ [FIM] single 500, double 600, extra bed 100, breakfast included $ single 150 DM, double 180 DM; weekends: single 120 DM, double 150 DM
Aikailmausten sy¨otemuoto ei ole yhta¨ tiukka kuin hintailmausten, vaan muunnin pyrkii tulkitsemaan ja yhdistelem¨aa¨n aikailmauksen osia heuristisesti. Ta¨ma¨n haittapuolena on se, etta¨ joissain tapauksissa saattaa olla vaikeaa saada juuri tavoiteltu muunnostulos. Lisa¨ksi muunnin tunnistaa nykyisell¨aa¨n p¨aiv¨ama¨¨ar¨ailmaukset vain ja¨rjestyksess¨a p¨aiva¨­kuukausi­vuosi. Pa¨iv¨ama¨¨ar¨an osien erottimena ei voi k¨aytta¨a¨ yhdysviivaa, koska se on erottimena va¨li-ilmauksissa.
Jotkin yksitta¨iset aikailmausten osat voivat olla monitulkintaisia. Esimerkiksi yksitt¨ainen numero voi merkita¨ kuukaudenp¨aiva¨¨a, kuukautta, tuntia tai vuodenviikkoa. T¨allaisessa tapauksessa muunnin yritt¨aa¨ p¨aa¨tella¨ aikailmauksen oikean tyypin sen ympa¨risto¨n perusteella: jos aikailmaus on osa jotakin listaa tai v¨ali-ilmausta, joka sis¨alta¨a¨ yksiselitteisi¨a aikailmauksia, se saa saman tyypin kuin n¨am¨a ilmaukset. Monitulkintaisen ilmauksen tulkintaan vaikuttavat my¨os sita¨ v¨alitt¨oma¨sti edelt¨ava¨t ja seuraavat ilmaukset. Jos muunnin ei pysty yksiselitteist¨am¨a¨an aikailmausta, se olettaa sen olevan tunti-ilmaus.
Muunnin kokoaa kokonaisen lopullisen aikailmauksen yksitt¨aisista¨ aika-alkioista alhaalta yl¨osp¨ain. Se yhdist¨a¨a ensin samantyyppisten aika-alkioiden listat ja liitt¨aa¨ sitten ta¨llaiset listat viereisen, ylemm¨an tason ilmauksen ali-ilmauksiksi. Jos ilmauksen kummallakin puolella on sita¨ ylemma¨n tason ilmaus, muunnin yhdist¨a¨a ilmauksen niista¨ alemmantasoiseen. Muunnin toistaa ali-ilmausten liitta¨mista¨ tunti-ilmauksista vuosi-ilmauksiin.
Muunnin osaa muuntaa esimerkiksi seuraavat aikailmaukset kielest¨a riippumattomaan muotoon:
& 5 May 2000-20 Jun 2001 & 2000: Mon-Wed 10-13, Thu-Fri 10-12, Sat, Sun closed & May to Jun: Mon to Fri up to 23:00, Sat up to 22:00

56

4.7 Tekninen toteutus

Hinta- ja aikailmausten Java-esitysmuoto ja generointiohjelma on toteutettu Java 2:lla (Java Development Kit 1.2 tai uudempi; Arnold et al. 2000). Ne k¨aytt¨ava¨t Javan kirjastoluokkia, erityisesti pakkauksen java.util s¨ailio¨luokkia, pakkauksen java.io sy¨otto¨- ja tulostusluokkia sek¨a pakkauksen java.text muotoiluluokkia (id.: 522­524). Generointiohjelman p¨aa¨luokka Generator ka¨ytt¨aa¨ hyv¨akseen my¨os olioiden rakennetta tutkivaa reflektiota (pakkaus java.lang.reflect; id.: 282­303), kun se valitsee generointimetodin ilmausolion luokan perusteella.
Hinta- ja aikailmauksiin ja niiden generointiin liittyva¨t luokat ovat pakkauksessa net.mietta.generation.pricetime ja sen alipakkauksissa seuraavasti:

net.mietta.generation.pricetime sis¨alt¨a¨a hinta- ja aikailmausten tiiviin merkkijonomuodon ja¨sent¨amiseen tarvittavat luokat, varsinaiset generointiluokat, morfologisen generaattorin oletustoteutuksen seka¨ muutamia yleisia¨ rajapinta- ja apuluokkia.
net.mietta.generation.pricetime.genobjects sis¨alt¨aa¨ hinta- ja aikailmausten Java-esitysmuodon luokat.
net.mietta.generation.pricetime.rulecompiler sisa¨lt¨aa¨ generointis¨aa¨nt¨ojen ja¨sentimen ja s¨aa¨nto¨jen sis¨aisen esitysmuodon k¨aytta¨ma¨t luokat.
net.mietta.generation.pricetime.importer sis¨alta¨¨a ilmauksia kielest¨a riippumattomaan muotoon muuntavan muunnosohjelman luokat.

Hinta- ja aikailmausten, generointisa¨a¨nt¨ojen seka¨ ilmausten muuntimen ja¨-

sentimet on tuotettu Java CUP -j¨asenningeneraattorilla (Hudson et al. 1999). Java

CUP on YACC-tyyppinen j¨asenningeneraattori (Johnson 1979, Levine et al. 1992),

joka tuottaa annetun kielioppim¨a¨arittelyn perusteella Java-kielisen LALR(1)-j¨asen-

timen (Aho & Johnson 1974: 109­116). Na¨iden ja¨sentimien k¨aytta¨ma¨t leksikaaliset

selaimet on tuotettu JLex-ohjelmalla (Berk & Ananian 2000), joka on Lex-tyyppinen

selaingeneraattori Javalle (Lesk & Schmidt 1979, Levine et al. 1992).

Pakkaus

net.mietta.generation.pricetime.jlexprep

sisa¨lt¨a¨a

JLexPreprocessor-esika¨sittelyohjelman JLex-selaingeneraattorille. Ta¨ma¨ esi-

k¨asittelyohjelma laajentaa selainma¨¨arittelyiden sa¨a¨nn¨ollisiss¨a lausekkeissa ka¨ytetyt

POSIX-tyyliset merkkiluokat (Friedl 1997: 90) tavanomaisiksi merkkijoukoiksi,

koska JLex ei tunnista merkkiluokkia. Merkkiluokkien avulla on yksinkertais-

ta ilmaista esimerkiksi "mik¨a tahansa kirjain" ([[:alpha:]]), mik¨a helpottaa

ei-ASCII-kirjainten sallimista ilmausten sisa¨lta¨missa¨ merkkijonotunnuksissa.

57
Hinta- ja aikailmausten ja¨sennin tuottaa tiiviiss¨a merkkijonomuodossa olevasta ilmauksesta vastavan Java-tietorakenteen. Generointis¨aa¨nto¨jen k¨aa¨nnin ja¨sent¨a¨a ominaisuustiedostoissa annetut merkkijonomuotoiset sa¨¨ann¨ot ja k¨a¨ant¨aa¨ ne sis¨aiseen esitysmuotoon era¨a¨nlaisiksi lausepuiksi, joita generointiohjelma tulkkaa. Ilmausten muunnin j¨asenta¨¨a syo¨tteen¨a saamansa rajoitetun kielen ilmaukset ja muuntaa ne va¨liesitysmuotoon, joka sisa¨lt¨aa¨ hinta- ja aikailmausten Java-tietorakenteita.
Generointikomponentin, generointis¨a¨anto¨jen sek¨a ilmausten muuntimen muunnoss¨a¨anto¨jen lokalisointi eri kielille k¨aytt¨a¨a Javan standardikirjaston ResourceBundle-mekanismia (Arnold et al. 2000: 504­510).
Ilmausten muunnin k¨aytt¨aa¨ syo¨teilmausten esik¨asittelyyn s¨aa¨nn¨ollisten lausekkeiden korvausoperaatioita, jotka vastaavat Perl-kielen s¨a¨ann¨ollisten lausekkeiden operaatioita. N¨ama¨ operaatiot on toteutettu Jakarta ORO -kirjaston avulla, joka sis¨alt¨aa¨ Perlin sa¨¨ann¨ollisten lausekkeiden ka¨sittelyn Javalla (Apache Software Foundation 2001).18
MIETTA-j¨arjestelm¨assa¨ hinta- ja aikailmausten generointikomponenttia k¨aytettiin JTg2 Light -generointij¨arjestelm¨an lis¨amoduulina, joka poimii sy¨oterakenteesta halutun osan (InputBrowser). T¨am¨a edellytti IT.Celi.JTg2.InputBrowserrajapinnan toteuttavan luokan net.mietta.generation.MiettaInputBrowser kirjoittamista. T¨am¨a luokka kutsui hinta- ja aikailmausten generointikomponenttia niille MIETTA-matkailutietokannan kentille, jotka sis¨alsiv¨at tiiviiss¨a merkkijonomuodossa olevia hinta- tai aikailmauksia, ja palautti JTg2:lle generointikomponentin tuottaman merkkijonon. Jos t¨allaisen kent¨an sisa¨lt¨ama¨ merkkijono ei kuitenkaan alkanut hinta- tai aikailmauksen tunnistemerkill¨a, luokka va¨litti merkkijonon suoraan JTg2:lle. Ta¨m¨a mahdollisti ja¨rjestelm¨an yhteensopivuuden taaksepa¨in, mik¨a oli hy¨odyllist¨a, koska hinta- ja aikailmausten generointi lisa¨ttiin MIETTA-ja¨rjestelma¨a¨n vasta hankkeen loppuvaiheessa. Sy¨oterakennetta ka¨sittelev¨an lisa¨moduulin ka¨ytta¨minen ta¨ytyi ottaa huomioon myo¨s itse JTg2-generointis¨a¨ann¨oiss¨a.
Vaikka hinta- ja aikailmausten generointiohjelmakomponentti onkin tarkoitettu osaksi laajempaa generointija¨rjestelma¨a¨, sit¨a voi ka¨ytta¨a¨ my¨os sellaisenaan itsena¨isen¨a ohjelmana komentorivilt¨a ka¨sin. T¨ast¨a on hyo¨ty¨a erityisesti generointiohjelman testaamisessa. Muuten ohjelmalla tuskin on juuri itsena¨ista¨ k¨aytto¨¨a. Ilmausten muunnin puolestaan on ensisijaisesti itsen¨ainen komentorivilta¨ k¨aytetta¨v¨a tyo¨kalu,
18S¨aa¨nno¨llisi¨a lausekkeita k¨asitteleva¨ kirjasto todenna¨ko¨isesti vaihtuu, jos myo¨s ilmausten muunnin halutaan lisensoida GNU-lisenssilla¨, sill¨a Jakarta ORO:n lisenssi on BSD-tyylinen Apachen lisenssi (Apache Software Foundation 2000), joka ei ole yhteensopiva GNU-lisenssin kanssa (Free Software Foundation 2001).

58
mutta sit¨akin voisi ka¨ytt¨aa¨ laajemman ohjelman osana.
5 Arviointi ja johtop¨a¨at¨okset
T¨am¨a luku arvioi t¨am¨an raportin kuvaamaa hinta- ja aikailmausten lokalisointij¨arjestelm¨aa¨ ja pohtii siihen liittyva¨ ratkaisuja ja koko tyo¨n merkitysta¨. Aliluku 5.1 arvioi tyo¨n tavoitteiden toteutumista. Aliluku 5.2 arvioi ja pohtii tyo¨ssa¨ ka¨ytettyj¨a menetelmia¨ ja siin¨a tehtyj¨a ratkaisuja. Aliluku 5.3 k¨asittelee muutamia hintaja aikailmausten erityisia¨ puutteita. Aliluku 5.4 esittelee muutamia mahdollisia jatkotutkimus- ja jatkokehityskohteita. Aliluku 5.5 pohtii lyhyesti tyo¨n merkityst¨a ja hinta- ja aikailmausten lokalisoinnin ka¨ytto¨mahdollisuuksia.
5.1 Tyo¨n tavoitteiden toteutuminen
Toteuttamani hinta- ja aikailmausten esitysmuoto ja generointija¨rjestelm¨a ta¨yttiva¨t MIETTA-hankkeen ensisijaiset tarpeet. Hinta- ja aikailmausten merkkijonoesitysmuoto on kielest¨a riippumaton ja varsin tiivis. Se oli riitta¨v¨a esitta¨m¨aa¨n MIETTA-demonstraatioja¨rjestelm¨assa¨ k¨aytetyn tietokantadatan sis¨alt¨am¨at hinta- ja aikailmaukset pa¨a¨piirteissa¨¨an. My¨os ilmausten kirjoittaminen n¨aytti onnistuvan puoliautomaattisesti, joskin ilmausten tiiviin merkkijonoesitysmuodon oppiminen vaati aikaa.
Generointikomponentti tuotti kielest¨a riippumattomasta muodosta kohtalaisen luontevia luonnolliskielisi¨a ilmauksia usealla eri kielell¨a. Esimerkkej¨a kielest¨a riippumattomista ilmauksista ja niista¨ generoiduista suomen- ja englanninkielisista¨ ilmauksista on liitteessa¨ A. Generointikomponentti pystyttiin myo¨s yhdista¨m¨aa¨n JTg2 Light -generointija¨rjestelm¨a¨an eli osaksi MIETTA-ja¨rjestelm¨an generointialija¨rjestelma¨¨a.
Toteuttamatta ja¨i hinta- ja aikailmausten erist¨aminen tekstista¨ ja muuntaminen kielesta¨ riippumattomaan muotoon. Se ei tosin ollut MIETTA-hankkeen loppuvaiheessa en¨aa¨ suunnitelmissakaan. Ilmausten muuntimen prototyyppi toteuttaa joitain erista¨miskomponentin tehta¨via¨, mutta se ei ole l¨ahesk¨aa¨n riitt¨av¨a todelliseen ka¨ytto¨o¨n.
Toinen aikapulan vuoksi toteuttamatta ja¨a¨nyt tavoite oli alkupera¨isiss¨a MIETTA-suunnitelmissa mainittu mahdollisuus tehd¨a hakukyselyita¨, jotka ka¨ytt¨aisiva¨t hyva¨kseen hinta- ja aikailmausten sis¨alt¨ama¨¨a informaatiota (ks. luku 1.4.4; Buite-

59
laar et al. 1999: 73). Kokonaisuudessaan toteuttamani komponentti n¨ahda¨kseni ta¨ytti tehta¨v¨ans¨a
MIETTA-demonstraatioj¨arjestelma¨ss¨a. Ta¨ta¨ on kuitenkin vaikea sanoa varmuudella, koska hankkeen ulkopuolisten ihmisten kokemuksia MIETTA-demonstraatioj¨arjestelma¨st¨a ei ker¨atty.
J¨arjestelma¨n toteuttamatta j¨a¨aneet osat ja ominaisuudet ovat mahdollisia jatkokehityskohteita.
5.2 Ratkaisujen arviointia
5.2.1 Menetelm¨at
Tein hinta- ja aikailmausten lokalisointija¨rjestelma¨n hyvin ka¨yta¨nno¨nla¨heisesti, l¨ahinna¨ MIETTA-hankkeen tarpeita ajatellen. En ole l¨oyta¨nyt tietoa muista vastaavista j¨arjestelmista¨, joten valmista mallia ei ollut. Ilmausten rakenne ja generointija¨rjestelma¨ eiv¨at varsinaisesti pohjaudu mihink¨a¨an taustateoriaan. Ta¨m¨a hankaloittaa esimerkiksi generointija¨rjestelm¨an ilmaisuvoiman tutkimista ja sen vertaamista muihin j¨arjestelmiin. Muutamat puutteet ilmausten ilmaisuvoimassa olisi ehk¨a voinut v¨altta¨a¨, jos tutkimani aineisto olisi ollut laajempi tai monipuolisempi.
5.2.2 Hinta- ja aikailmaukset
Ja¨rjestelma¨n hinta- ja aikailmausten laajentaminen ei aina ole helppoa, vaikka laajennettavuus olikin alunperin yksi tavoitteista. Laajennukset ovat todenna¨k¨oisesti usein kohtuullisella vaivalla toteutettavissa Java-esitysmuotoon. Ilmausten tiivista¨ merkkijonoesitysta¨ on kuitenkin ainakin joissain tapauksissa vaikea laajentaa sa¨ilytta¨en samalla ilmausten yksiselitteisyys ja j¨asennett¨avyys LALR(1)-ja¨sentimella¨ seka¨ aiemmin oikeellisten ilmausten oikeellisuus. T¨am¨a tulee esille erityisesti silloin, jos ilmausten kokonaisrakennetta pit¨aisi muuttaa. Ta¨llainen rakenteen muuttaminen olisi esimerkiksi se, jos sallittaisiin aikava¨li-ilmausten ¨a¨arip¨aiden koostuminen kahden tai useamman eri tason aika-alkioista.
Aikailmausten esitysmuoto kattaa gregoriaanisen kalenterin ilmaukset nykyaikana; sill¨a ei voi nykyisella¨a¨n ilmaista vuosilukuja ennen Kristuksen syntym¨a¨a. Esitysmuotoa saattaisi olla mahdollista soveltaa myo¨s muihin kalenterij¨arjestelmiin, joissa on jaottelu vuosiin, kuukausiin, kuukaudenp¨aiviin ja viikkoihin. En kuitenkaan ole tutkinut t¨ata¨ mahdollisuutta tarkemmin.

60
Tyo¨ssa¨ olen olettanut, ett¨a hinta- ja aikailmausten lokalisointija¨rjestelm¨an kattamat ilmaukset voi ilmaista eri kielill¨a pitka¨lti samaan tapaan, koska ilmausten kattama kielen osa on suppea. Jos jonkin kielen tyypilliset matkailualan hinta- ja aikailmaukset poikkeavat sisa¨llo¨lt¨aa¨n tai rakenteeltaan merkitta¨v¨asti lokalisointij¨arjestem¨an tukemista ilmauksista, niit¨a voi olla vaikea esitta¨a¨ ja generoida luonnollisesti.
Lokalisointija¨rjestelma¨ itsess¨a¨an ei ota kantaa hinta- ja aikailmausten sisa¨lt¨amien merkkjonotunnusten merkitykseen, vaan t¨allaiset seikat ta¨ytyy ottaa huomioon sovelluskohtaisesti, kun valitaan tarvittavia merkkijonotunnuksia ja kirjoitetetaan niita¨ vastaavia generointis¨a¨ant¨oja¨. Ta¨llo¨in on otettava huomioon my¨os eri kielten tai kulttuurien mahdolliset erot esimerkiksi hintaryhmien ja erityisaikailmausten rajauksissa.
Ilmausten rakenne ja merkkijonotunnusten tarkoitteet m¨a¨ara¨a¨v¨at yhdessa¨ ja¨rjestelma¨n hinta- ja aikailmausten ontologian. Ontologia on rakenteen osalta kiinte¨a, mutta merkkijonotunnuksilla sita¨ voi laajentaa rajoitetusti.
Vaihtoehto ilmausten kiintea¨lle rakenteelle olisi voinut olla rakenteen ma¨a¨ritteleminen jonkinlaisten yleisten alkio-, lista- ja suhdetyyppien pohjalta. T¨am¨a olisi mahdollistanut ilmausten rakenteen muuttamisen ja ontologian kuvaamisen huomattavasti nykyist¨a joustavammin. Ilmauksen osien v¨aliset suhteet seka¨ sa¨a¨nto¨hierarkia olisi t¨all¨oin pit¨anyt ma¨a¨ritella¨ esimerkiksi erillisell¨a formalismilla. Ta¨llaisten ilmausten esitysmuotona ei kuitenkaan olisi voinut ka¨ytt¨aa¨ nykyisenkaltaista tiivista¨ merkkijonomuotoa, vaan esitysmuodon olisi pit¨anyt kuvata rakenne eksplisiittisesti esimerkiksi jonkinlaisella listanotaatiolla. Generointiohjelma ei olisi voinut ottaa huomioon yksitta¨isten sa¨a¨nt¨ojen erityispiirteit¨a, vaan sen olisi pita¨nyt perustua yleisiin periaatteisiin, mika¨ olisi kylla¨ todenna¨k¨oisesti tehnyt siita¨ nykyist¨a selke¨amma¨n. Kaikkiaan t¨alla¨inen yleisk¨aytt¨oisempi ja¨rjestelma¨ olisi ollut rakenteeltaan nykyista¨ mutkikkaampi ja ty¨ol¨a¨ampi toteuttaa.
Aikailmaukset sallivat rajoittamattoman ma¨¨ara¨n sis¨akk¨aisi¨a poikkeusaikailmauksia (paitsi-ilmauksia). Poikkeuksen poikkeuksilla saattaisi periaatteessa olla ka¨ytto¨¨a, joskin niista¨ generoitu luonnolliskielinen ilmaus voi olla vaikeasti luettavissa. Sit¨a syvempi¨a poikkeustasoja tuskin tarvitaan. Poikkeustasojen rajoittaminen olisi kuitenkin mutkistanut j¨arjestelma¨n toteutusta.
Hinta- ja aikailmausten tiivis merkkijonomuoto oli perusteltu MIETTA-hankkeessa, koska ilmaukset piti saada sopimaan tietokannan kenttiin. Ihmisen on kuitenkin vaikea lukea ja kirjoittaa ilmauksia t¨ass¨a muodossa. Se on my¨os ta¨ysin oma

61
muotonsa, joka ei pohjaudu mihinka¨¨an standardiin. Yksi harkinnan arvoinen vaihtoehto olisikin esitt¨aa¨ ilmaukset esimerkiksi sopivan XML-rakennem¨a¨arittelyn mukaisina. Ta¨llaista esitysmuotoa olisi my¨os helpompi laajentaa kuin tiivista¨ merkkijonomuotoa.
Yksi toteuttamani hinta- ja aikailmausten tiiviin merkkijonomuodon ongelma on se, etta¨ eri yhteyksissa¨ t¨aytyy k¨aytta¨¨a erilaisia ryhmittelysulkeita ja listojen alkioiden erotinmerkkeja¨. Erilaiset listan alkioiden erottimet ovat tarpeen kieliopin pita¨miseksi ja¨sentimen kannalta yksiselitteisen¨a: koska ilmauksen hierarkiatasoja ei kaikissa tapauksissa erotella sulkeilla, j¨asennin ei pystyisi pelka¨n erottimen perusteella tunnistamaan erottimen ja¨lkeen alkavan ilmauksen hierarkiatasoa, jos erotin olisi kaikissa tapauksissa sama. Aikailmauksissa on myo¨s joitain tilanteita, joissa aika-alkion edella¨ ta¨ytyy olla erityinen tunnistemerkki, jottei ja¨sennin esimerkiksi tulkitsisi kaksinumeroista aika-alkiota kuukaudeksi.
Ilmausten tiiviille merkkijonoesitysmuodolle olisi ollut vaihtoehtoja, joissa ei olisi ollut erilaisten sulkeiden ja erotinmerkkien ongelmia tai ainakin ongelmat olisivat olleet pienempia¨. Ryhmittelyn ja rakennehierarkian olisi voinut toteuttaa yhten¨aisesti esimerkiksi Lisp-tyyppisilla¨ listoilla tai muunlaisella etu- tai j¨alkimerkinta¨isella¨ muodolla (prefix, postfix). T¨allo¨in my¨os kaikissa listoissa olisi voinut k¨aytt¨a¨a samaa erotinta, koska selva¨n ryhmittelyn ansiosta eri hierarkiatasojen listojen alkiot eiv¨at olisi voineet sekaantua. Lis¨aksi erityisesti ja¨lkimerkint¨aisella¨ muodolla olisi voinut v¨altta¨¨a sulkeet kokonaan. Sek¨a etu- etta¨ ja¨lkimerkinta¨inen muoto olisi vaatinut ilmauksen kullekin hierarkiatasolle jonkinlaisen tyyppitunnuksen tai funktorin, josta olisi voinut tunnistaa hierarkiatason tyypin. T¨ama¨ olisi saattanut tehda¨ ilmauksista hieman nykyist¨a pitempi¨a, mutta toisaalta se olisi tehnyt ilmausten merkkijonomuodosta nykyist¨a helpommin laajennettavan. Erityisesti ja¨lkimerkint¨aisen muodon haittapuolena olisi kuitenkin ollut se, etta¨ sit¨a olisi ollut ihmisen vaikea lukea tai kirjoittaa.
5.2.3 Generointiohjelma ja generointis¨a¨ann¨ot
Yhtena¨ kielioppisa¨a¨nt¨ojen tavoiteltavana ominaisuutena pidet¨a¨an yleensa¨ sa¨a¨nto¨jen deklaratiivisuutta: sa¨a¨nto¨jen pita¨isi kuvata se, mit¨a on tarkoitus tehd¨a, eika¨ sit¨a, miten se tehda¨a¨n (esim. Gazdar & Mellish 1989: 4­5). Hinta- ja aikailmausten generointisa¨¨anno¨issa¨ on seka¨ deklaratiivisia ett¨a proseduraalisia piirteit¨a. Generointis¨aa¨nto¨ja¨ voi ehka¨ pit¨a¨a muodoltaan pa¨a¨osin deklaratiivisina: niissa¨ ei esimerkiksi voi vaikuttaa s¨a¨anto¨jen soveltamisja¨rjestykseen, vaan generointiohjelma m¨a¨arittelee

62
ja¨rjestyksen. Yksi proseduraalinen piirre taas on esimerkiksi globaalien attribuuttien ka¨ytto¨.
Merkitt¨avin proseduraalinen piirre on se, ett¨a itse generointiohjelma sisa¨lt¨aa¨ melko paljon erityista¨ tukea yksitta¨isille sa¨a¨nt¨otyypeille: esimerkiksi jokaiselle s¨aa¨nto¨tyypille on oma generointimetodinsa, joka voi esimerkiksi m¨a¨aritell¨a sa¨¨ant¨otyyppikohtaisia attribuutteja. S¨a¨ann¨oill¨a ei siis ole yhta¨, yleist¨a generointikoneistoa, vaikka ne ka¨ytta¨v¨atkin hyva¨kseen samoja generoinnin apumetodeja. Sa¨a¨nno¨t eiv¨at ole riippumattomia j¨arjestelma¨n sis¨alta¨m¨an generointikoneiston toteutuksesta. Myo¨s morfologista generaattoria voi k¨aytt¨aa¨ (tai v¨a¨arinka¨ytta¨¨a) proseduraalisena komponenttina, jolla voi muuntaa generointitulosta hyvinkin mutkikkaasti, ilman ett¨a se n¨akyy generointisa¨a¨nn¨oissa¨.
Generointij¨arjestelma¨n proseduraalisiin piirteisiin vaikuttaa todenna¨k¨oisesti osittain se, etta¨ toteutetulla generoinnilla ei ole varsinaista taustateoriaa, vaikka attribuuttien ka¨ytta¨miseen s¨a¨ann¨oiss¨a ovatkin vaikuttaneet attribuuttikieliopit (Knuth 1968).
Yksi generointis¨a¨anto¨j¨arjestelma¨n ongelma on se, etta¨ ilmaukseen sovellettavat generointis¨aa¨nno¨t (s¨aa¨nt¨ojen kutsupuu) eiva¨t aina vastaa suoraan ilmauksen rakennetta (ks. luku 4.5.7). Ta¨m¨a vaikeuttaa my¨os attribuuttien mielta¨mista¨, sill¨a ne liittyva¨t periaatteessa generointis¨aa¨nt¨oihin eiva¨tka¨ itse ilmaukseen. Monet erikoisattribuutit puolestaan liittyva¨t ilmauksen osiin, vaikka ne na¨kyv¨atkin generointisa¨¨ant¨oihin liittyvina¨ attribuutteina. Sa¨¨ant¨ohierarkian ja ilmauksen rakenteen eroja voi kuitenkin perustella s¨a¨ant¨ojen yksinkertaistumisella: esimerkiksi valuuttainformaation va¨litta¨minen hinta-alkioryhm¨asta¨ yksitt¨aiseen hintaan olisi ty¨ola¨sta¨ tehd¨a generointis¨a¨ann¨oissa¨ ka¨sin; nyt se on tavallaan sis¨aa¨nrakennettuna generointiohjelmaan ja -s¨aa¨nto¨ihin.
Hinta- ja aikailmausten esitysmuotoja ei ole sidottu MIETTA-hankkeessa toteutettuun generointiohjelmakomponenttiin, vaan ilmauksille voisi toteuttaa muunlaisenkin generaattorin.19 T¨allainen vaihtoehtoinen generaattori voisi esimerkiksi k¨aytt¨aa¨ aivan toisenlaista sa¨a¨nt¨oformalismia.
Generointija¨rjestelma¨ssa¨ ei ole erillista¨ leksikkoa tai muuten toteutettua leksikaalista tasoa, joka sisa¨lt¨aisi yksitta¨isten sanojen generointiin tarvittavat tiedot. Sen sijaan merkkijonos¨a¨ann¨ot hoitavat leksikaalisen generoinnin. Myo¨s yhdista¨va¨t muotoilus¨a¨anno¨t voivat sisa¨lta¨a¨ kiinteita¨ leksikaalisia elementteja¨. T¨am¨a yksinker-
19Vaihtoehtoisen generointiohjelman toteuttamista tosin helpottaisi erillinen generointirajapintaluokka, jonka generaattoriluokka Generator toteuttaisi.

63
tainen ratkaisu oli riitta¨v¨a MIETTA-j¨arjestelma¨n tarpeisiin. Erillinen leksikko tai leksikaalinen s¨aa¨nn¨osto¨ voisi kuitenkin olla hy¨odyllinen, jos generointituloksen kieliopillisuus edellytta¨isi tietoa yksitta¨isten sanojen kieliopillisista piirteist¨a, esimerkiksi sanan suvun tai taivutusluokan. Nykyisella¨a¨n vastaavia asioita pystyy osittain k¨asittelem¨aa¨n attribuuttien ja morfologisen generaattorin avulla, mutta ratkaisu ei ole kovin siisti.
Hinta- ja aikailmausten generointi on deterministista¨, mik¨a on perusteltua, koska monikielisen matkailuinformaation hakupalvelun tulosteissa todenna¨k¨oisesti halutaan ja¨rjestelm¨an generoimien ilmausten olevan mahdollisimman yhtena¨isia¨. Hinta- ja aikailmaukset ovat my¨os melko yksinkertaisia rakenteeltaan, joten generointituloksissa ei ole suuria vaihtelumahdollisuuksia. Deterministisessa¨ generoinnissa generointis¨aa¨nt¨ojen kirjoittaja ma¨¨ara¨¨a yksiselitteisesti generoitavien ilmausten muodon.
Ep¨adeterministiselle generoinnille voisi kuitenkin olla ka¨ytt¨o¨a, jos esimerkiksi haluttaisiin saada mahdollisimman informatiivinen generointitulos mahtumaan m¨a¨ar¨atynpituiseen kentt¨aa¨n. T¨allo¨in generointiohjelma voisi tuottaa useampia ilmauksia, joista ja¨rjestelm¨an muut osat valitsisivat esimerkiksi sopivimman pituusrajan alittavan ilmauksen. Epa¨deterministinen generointi edellytt¨aisi keskena¨¨an vaihtoehtoisten sa¨a¨nt¨ojen sallimista. Vaihtoehtoisilla sa¨a¨nno¨ill¨a voisi toteuttaa niit¨a piirteita¨, jotka nyt on toteutettu valitsins¨a¨anno¨ill¨a. Ep¨adeterministisen generoinnin voisi toteuttaa per¨aytymist¨a (backtracking) ka¨ytta¨en joko tuottamalla kaikki tulosvaihtoehdot kerralla tai tuottamalla yhden vaihtoehdon kerrallaan, jolloin kutsuva ohjelma voisi tarvitessaan pyyta¨¨a seuraavan vaihtoehdon. Jos sa¨¨ant¨ojen kirjoittajan haluttaisiin voivan vaikuttaa generointiohjelman tuottamien tulosvaihtoehtojen j¨arjestykseen, vaihtoehtoisille generointisa¨¨ann¨oille pit¨aisi voida ma¨¨aritell¨a ja¨rjestys.
Nykyisell¨aa¨n generointi on suhteellisen hidasta, joten generointikomponentti ei sovellu suurten tietom¨a¨arien generointiin reaaliaikaisesti. Alustavissa kokeissani yhden, tiivissa¨ merkkijonomuodossa olevan noin 50 merkki¨a pitka¨n hinta- tai aikailmauksen20 generointiin kului keskim¨a¨arin noin 0,19 sekuntia. Generointiohjelman k¨aynnista¨miseen kului keskima¨¨arin 6,5 sekuntia, josta generointis¨a¨ant¨ojen j¨asent¨amiseen ja ka¨¨anta¨miseen keskim¨a¨arin 4,3 sekuntia. Testilaitteistossa oli 333 megahertsin AMD K6-2 -prosessori ja Debian GNU/Linux 2.2 -k¨aytto¨j¨arjestelma¨;
20Ilmauksen rakennepuun solmujen m¨aa¨r¨a kuvaisi paremmin ilmauksen kompleksisuutta generoinnin kannalta kuin ilmauksen pituus, koska pituuteen vaikuttavat esimerkiksi ka¨ytettyjen merkkijonotunnusten pituudet.

64
Java-virtuaalikoneen versio oli 1.3.0 (build Blackdown-1.3.0-FCS). Generointis¨a¨anno¨st¨oina¨ ka¨ytin MIETTA-demonstraatioja¨rjestelm¨an suomen ja englannin sa¨a¨nno¨st¨oj¨a. Kielten v¨alilla¨ ei ollut merkitta¨va¨a¨ nopeuseroa, koska suomen ja englannin sa¨¨anno¨sto¨t poikkeavat toisistaan vain suhteellisen pienilt¨a osin.
Generoinnin hitauteen vaikuttavat todenna¨k¨oisesti ilmausten monikerroksinen rakenne ja mahdollinen mutkikkaiden generointis¨a¨anto¨jen ka¨ytto¨, erityisesti sa¨a¨nno¨t, jotka sis¨alt¨av¨at paljon ehtolauseita. Generointiohjelman ka¨ynnista¨minen on hidasta, koska ohjelma joutuu ensin j¨asenta¨ma¨a¨n ja ka¨a¨nta¨m¨aa¨n generointis¨a¨ann¨ot. Siksi ohjelmaa ei kannatakaan ka¨ynnista¨¨a uudelleen jokaista generointitehta¨v¨aa¨ varten.
Generointi tukeutuu pitk¨alti Javan standardikirjaston tarjoamiin pa¨iv¨ama¨¨arien ja numeroilmausten lokalisointiva¨lineisiin. N¨aiden v¨alineiden ka¨ytto¨ helpotti generointiohjelman toteuttamista, koska vastaavia va¨lineita¨ ei tarvinnut toteuttaa itse. Toisaalta se tekee generoinnista nykyisell¨aa¨n varsin Java-sidonnaista. Generointisa¨¨anno¨issa¨ Java-sidonnaisuus na¨kyy erityisesti Javan NumberFormatja SimpleDateFormat-luokkien tunnistamien muotoilumerkkijonojen ka¨ytta¨misen¨a. Kaikki n¨ama¨ ominaisuudet olisi mahdollista toteuttaa muutenkin kuin Javalla, mutta se vaatisi paljon ty¨ota¨ tai jonkinlaisten Java-yhteensopivuuskirjastojen ka¨ytta¨mist¨a.
Generointis¨a¨anto¨jen kirjoittaminen Javan ominaisuustiedostoina mahdollistaa s¨aa¨nto¨jen helpon lokalisoinnin Javan vakiov¨alineilla¨. Ta¨m¨an ratkaisun ongelmana on kuitenkin se, etta¨ kunkin sa¨¨anno¨n (ominaisuuden arvon) ta¨ytyy olla yhdell¨a loogisella rivill¨a. Pitk¨at s¨a¨anno¨t on ta¨llo¨in selkeint¨a kirjoittaa k¨aytt¨aen kenoviivaan pa¨¨attyvi¨a jatkoriveja¨. T¨am¨a on kuitenkin virhealtista, sill¨a kenoviiva unohtuu helposti rivin lopusta. Voisi siis olla ja¨rkeva¨¨a toteuttaa sa¨a¨nto¨tiedostot muunlaisina tekstitiedostoina. T¨allo¨in t¨aytyisi toteuttaa itse mekanismi, joka valitsee s¨aa¨nt¨otiedoston ka¨yt¨ossa¨ olevan kieli- ja maa-asetuksen mukaan ja hakee tarvittaessa sa¨¨anto¨ja¨ myo¨s tiedostoista, joiden kieli- ja maa-asetus on yhteensopiva mutta va¨hemma¨n m¨a¨aritelty, esimerkiksi brittienglanti ­ englanti ­ yleinen. Lis¨aksi ta¨ytyisi toteuttaa sa¨¨anto¨tiedostojen matalan tason k¨asittely eli ka¨yta¨nn¨ossa¨ tiedostojen yksinkertainen j¨asent¨aminen. Nykyisess¨a ja¨rjestelma¨ss¨a Javan standardikirjaston luokka java.util.PropertyResourceBundle hoitaa kaiken t¨am¨an.
Generointisa¨¨anto¨jen jakaminen eri tiedostoihin kieli- ja maa-asetuksen mukaan helpottaa s¨a¨anto¨jen modularisointia. Se helpottaa myo¨s s¨aa¨nto¨jen kirjoittamisen hajauttamista siten, etta¨ eri ihmiset kirjoittavat eri kielten s¨a¨ann¨ot. Moneen

65
tiedostoon jakamisen haittana on kuitenkin se, etta¨ eri kielten s¨a¨anno¨t voivat olla eri vaiheissa ja tukea eri ilmauksia. Sa¨¨ant¨ojen pita¨mista¨ yhten¨aisin¨a voisi auttaa jonkinlainen monikielinen ominaisuustiedostojen hallintaja¨rjestelm¨a, kuten esimerkiksi MIETTA-hankkeessa k¨aytetty MLEditor (MIETTA Project 2000b: 65­72) tai IBM:n RBManager (Jackson 2000).
Nykyisell¨aa¨n generointisa¨a¨nno¨iss¨a voi k¨aytt¨a¨a vain merkkijonoarvoisia attribuutteja. Joissain tapauksissa olisi kuitenkin hyo¨dyllista¨ voida ka¨ytta¨¨a kokonaislukuarvoja ja kokonaislukuvertailuja. Ta¨ll¨oin voisi paremmin verrata esimerkiksi kahden aika-alkion arvoa kesken¨aa¨n.
Generointis¨aa¨nn¨oiss¨a on erityinen tuki erilaisen valuuttanimen tai -symbolin tuottamiseen yksiko¨lliselle ja monikolliselle hinnalle. Jotkin kielet vaatisivat kuitenkin enemma¨n tai muunlaisia erotteluja: esimerkiksi ven¨aj¨assa¨ lukuihin 2­4 liittyv¨at sanat taipuvat muista poikkeavasti (ks. esim. Alestalo-Shepelenko & H¨am¨ala¨inen 1997: 74­75). T¨allainen kieli vaatisi luokan Generator aliluokaksi oman generointiluokkansa, joka ka¨sittelisi t¨allaiset tapaukset. Ta¨llaiset tapaukset voisi ehk¨a ka¨sitell¨a generointisa¨¨ant¨ojen tasolla, jos sa¨a¨nno¨iss¨a voisi vertailla attribuuttien numeerisia arvoja.
Generointitulokset ovat ymma¨rrett¨avi¨a, mutta niiden luonnollisuus vaihtelee (esimerkkej¨a on liitteessa¨ A). Joissain tapauksissa tulokset ovat hyvinkin luonnollisia, toisissa eiv¨at. Luonnollisuuteen vaikuttaa yht¨a¨alta¨ ilmauksen rakenne ja toisaalta ka¨ytetty generointisa¨a¨nno¨sto¨. Englanninkielisten generointitulosten ep¨aluonnollisuuksia selitta¨¨a osaltaan se, ett¨a en tarkistuttanut ilmauksia ¨aidinkielisell¨a englanninpuhujalla.
Nykyisell¨a generointis¨aa¨nto¨ja¨rjestelm¨alla¨ on joissain tapauksissa hankalaa tai mahdotonta tuottaa aivan luonnollisia tuloksia. Ta¨m¨a tulee esille esimerkiksi silloin, jos haluttu generointitulos riippuu mutkikkaasti ilmauksen esiintymisympa¨risto¨st¨a tai jos generointituloksen rakenteen tai j¨arjestyksen pita¨isi poiketa huomattavasti ilmauksen kielesta¨ riippumattoman esitysmuodon rakenteesta. Toisaalta joitakin rakenteita on hankala esitt¨aa¨ luonnollisella kielell¨a ymm¨arrett¨ava¨sti ja luonnollisesti; ta¨llaisia ovat esimerkiksi monitasoiset sisa¨kka¨iset listat. Jotkin generoitavat rakenteet voivat olla sellaisia, etta¨ ne pystyy kylla¨ periaatteessa toteuttamaan generointisa¨¨anto¨j¨arjestelm¨all¨a, mutta niiden toteuttaminen vaatisi mutkikkaiden sa¨¨anto¨jen kirjoittamista ja olisi hyvin tyo¨l¨ast¨a.
Yksinkertaisia generointisa¨¨ant¨oja¨ on mielest¨ani kohtuullisen helppo kirjoittaa. Jos s¨a¨ann¨ot kuitenkin k¨aytt¨av¨at paljon periytyvia¨ tai synteettisi¨a attribuutteja tai

66
jos sa¨¨anno¨t sis¨alta¨v¨at paljon mutkikkaita ehtolauseita, oikein toimivien sa¨¨anto¨jen kirjoittaminen voi olla varsin tyo¨la¨st¨a. Sa¨a¨nt¨ojen modularisointi makrosa¨a¨nto¨jen avulla v¨ahenta¨¨a kirjoitus- ja yll¨apitoty¨ot¨a, mutta vaatii toisaalta enemma¨n suunnittelua. Koko generointis¨aa¨nto¨ja¨rjestelma¨n, s¨aa¨nto¨formalismin ja sa¨¨anto¨hierarkian luontevuudesta, opittavuudesta ja ka¨ytett¨avyydesta¨ ei kuitenkaan ole puolueetonta kokemusta.
5.2.4 Ilmausten muuntaminen kielest¨a riippumattomaan muotoon
Toteuttamani hinta- ja aikailmausten muunnosohjelman prototyyppi oli varsin alustava ja se vaatisi paljon kehitt¨amist¨a ollakseen laajemmin k¨aytto¨kelpoinen. Muuntimen ka¨sittelema¨ hintailmausten syo¨temuoto oli melko ja¨ykk¨a ja osin ep¨aluonnollinen, mutta muunnin tuotti sy¨oteilmauksesta halutun tuloksen. Aikailmausten syo¨temuoto puolestaan oli joustavampi ja luonnollisempi, ja muunnin toimi yleens¨a hyvin; kuitenkin joissain tapauksissa t¨asm¨alleen halutun tulosilmauksen tuottaminen oli hankalaa muuntimen soveltamien heuristiikkojen vuoksi. Muuntimen syo¨temuodosta on esimerkkej¨a edell¨a luvussa 4.6.2.
Muunnin oli k¨aytto¨kelpoinen avustamaan ilmausten kirjoittamista kielesta¨ riippumattomassa muodossa, ilman etta¨ olisi tarvinnut opetella ilmausten tiivin merkkijonomuodon syntaksia. Sen sijaan valmiiden, todellisten ilmausten muuntamiseen se ei soveltunut kovin hyvin. Kokeilin k¨aytta¨¨a muunninta PROMIS-matkailutietokantadatan sis¨alta¨mien englanninkielisten hinta- ja aikailmausten muuntamiseen kielesta¨ riippumattomaan muotoon. Aikailmausten osalta se pitk¨alti onnistuikin, mutta hintailmaukset tuottivat enemm¨an ongelmia. Yksi ongelma oli PROMIS-datan sis¨alt¨amien hintailmausten epa¨yhtena¨isyys, toinen puolestaan muuntimen tunnistaman hintailmausten sy¨otemuodon epa¨luonnollisuus. Kumpikin syy vaikutti siihen, ett¨a ilmaukset vaativat paljon esik¨asittelysa¨a¨nto¨ja¨.
Muuntimen esik¨asittelyyn k¨aytta¨m¨at sa¨¨anno¨llisten lausekkeiden muunnossa¨a¨nn¨ot ovat melko ilmaisuvoimaisia, mutta sa¨a¨nt¨ojen ma¨¨ara¨n kasvaessa niiden hallitseminen vaikeutuu. Muunnin soveltaa sa¨¨anto¨j¨a j¨arjestyksessa¨. S¨a¨anto¨joukossa aiemmin oleva sa¨a¨nt¨o saattaa muuntaa ilmausta siten, ett¨a j¨aljemp¨an¨a oleva s¨a¨ant¨o ei en¨aa¨ sovellukaan siihen. Vaatii tarkkuutta kirjoittaa s¨aa¨nno¨t niin, etta¨ n¨ain ei ka¨y vahingossa. Sa¨a¨nn¨ollisill¨a lausekkeilla on my¨os tyo¨l¨ast¨a ilmaista tapauksia, joissa pita¨isi muuntaa kaikki muut paitsi ma¨¨ar¨atynmuotoiset ilmaukset.
Yksi muunnosohjelman monikielisyyden erityinen puute on se, etta¨ se, etta¨ se tunnistaa p¨aiv¨am¨aa¨ra¨ilmaukset vain j¨arjestyksess¨a pa¨iva¨­kuukausi­vuosi. Lis¨aksi

67
pa¨iv¨ama¨¨ar¨an osien erottimena ei voi k¨aytt¨aa¨ yhdysviivaa, koska se on k¨ayt¨oss¨a v¨ali-ilmausten erottimena.
Ilmausten muuntimen prototyyppi on komentorivilta¨ ajettava Java-ohjelma, jonka toimintaan k¨aytta¨ja¨ voi vaikuttaa vain k¨aynnist¨aess¨a¨an ohjelman. Usein olisi kuitenkin hy¨odyllista¨, etta¨ k¨aytt¨aja¨ voisi vuorovaikutteisesti na¨hd¨a muunnettavat ja muuntimen tuottamat ilmaukset ja korjata mahdolliset virheet. Ta¨m¨a auttaisi silloin, kun muunnettava ilmaus on virheellinen tai kun muunnin toimii toisin kuin k¨aytt¨aja¨ oletti.
5.3 Hinta- ja aikailmausten erityisi¨a puutteita
Hinta- ja aikailmausten kielesta¨ riippumattomassa esitysmuodossa on nykyisell¨aa¨n muutamia erityisi¨a puutteita, jotka esta¨v¨at tiettyjen todellisuudessa k¨aytettyjen ilmausten esitta¨misen sellaisinaan ta¨ma¨n tyo¨n kuvaamassa kielest¨a riippumattomassa muodossa. Osa n¨aist¨a puutteista esiintyy luvun 3 aineistoesimerkeissa¨. Na¨iden puutteiden korjaaminen olisi monissa tapauksissa melko ty¨ola¨sta¨, silla¨ se edellytt¨aisi useimmiten muutoksia ilmausten Java-tietorakenteisiin ja tiiviiseen merkkijonoesitykseen seka¨ generointisa¨a¨nt¨ojoukkoon ja generointiohjelmaan.
5.3.1 Hinta- ja aikailmauksille yhteisi¨a puutteita
V¨ali-ilmauksissa ei nykyisell¨a¨an ole eroa avoimilla ja suljetuilla v¨aleilla¨ (alle 15 ja eninta¨a¨n 15 ). Niiden erotteleminen olisi kuitenkin usein hy¨odyllista¨ erityisesti hintaryhmien ma¨¨aritteiss¨a, jotta generoitu tulos vastaisi alkuper¨aista¨ tietoa mahdollisimman hyvin. Avointen ja suljettujen va¨lien erottelu olisi todenna¨k¨oisesti mahdollista toteuttaa melko suoraviivaisesti.
5.3.2 Hintailmausten puutteita
P¨aa¨sylippujen hintoja voidaan joskus esitt¨a¨a muodossa 100/80 mk tai 100/80/60 mk : ensimma¨inen hinta on perushinta ja seuraavat ovat alennushintoja, joiden ryhmia¨ ei ole erikseen m¨a¨aritelty. Ta¨m¨an vuoksi ta¨llaiset hintailmaukset eiva¨t mielest¨ani ole yksiselitteisia¨. Toteutetuissa hintailmauksissa hintoja ei voi tyydytta¨va¨sti ilmaista ta¨lla¨ tavoin, vaan joko ilmaukseen on merkitt¨av¨a alennusryhma¨t tai kullekin mainitulle hinnalle on merkitta¨va¨ hintaryhm¨aksi oletushintaryhma¨. J¨alkimm¨aisess¨a tapauksessa hintojen erottimeksi tulee tavanomainen hintojen erotin, yleens¨a pilkku, ja kunkin hinnan yhteyteen tulee erillinen valuuttatunnus. Koska ta¨llaisia

68
lyhennettyja¨ ilmauksia kuitenkin ka¨yteta¨a¨n todellisuudessa, nekin olisi hyva¨ voida esitta¨a¨ kielesta¨ riippumattomassa muodossa. T¨allaiset ilmaukset voisi toteuttaa esimerkiksi lisa¨¨ama¨ll¨a hintailmauksiin yhden uuden listatason: yhteen hintaryhm¨aa¨n voisi liitty¨a yksitta¨isten hintojen ja hintava¨lien lis¨aksi my¨os hintalista. Ta¨llaisen laajennuksen toteuttaminen olisi kuitenkin tyo¨l¨ast¨a.
Joskus voisi olla k¨ayt¨ann¨ollista¨ ilmaista yhden hintaryhma¨n sisa¨lla¨ useita hinta-alkioita, jotka eroavat ma¨a¨ritteilt¨aa¨n: esimerkiksi yhden hengen huone kylpyhuoneen kanssa ja ilman kylpyhuonetta. Ta¨llainen ominaisuus edellytta¨isi muutosta hintailmausten rakennehierarkiaan, joten sen lis¨a¨aminen ei olisi yksinkertaista.
Hintailmauksissa on joskus kahden tai mahdollisesti useammankin eri tason tai tyypin hintaryhmia¨, esimerkiksi eri osakohteita, joissa kussakin voi olla eri hinnat eri asiakasryhmille (ks. luku 3.2, erityisesti esimerkki 4). Osakohteita voisi pita¨a¨ hintaryhmina¨, jos niissa¨ ei olisi eri hintoja eri asiakasryhmille. T¨allaisten hintailmausten esitt¨aminen toteuttamassani kielesta¨ riippumattomassa muodossa vaatisi nykyist¨a laajemman hintailmausten hierarkian, jossa hintaryhm¨aa¨n voisi liittya¨ hinnan sijaan my¨os kokonainen hinta-alkio. On kuitenkin kyseenalaista, liittyv¨atko¨ n¨am¨a osakohteet niin kiintea¨sti hintailmauksiin, ett¨a niiden ilmaisemista kannattaisi tukea. Osakohdetietojen rajaamista pois ilmauksista on ka¨sitelty luvussa 4.1.
Jotkin hintailmaukset voi ilmaista kielesta¨ riippumattomassa muodossa vain sellaisella tavalla, jota voi pit¨a¨a er¨aa¨nlaisena kielest¨a riippumattoman rakenteen va¨a¨rink¨aytto¨na¨. Esimerkiksi hintaryhm¨assa¨ perhe (2 aikuista ja 2 lasta) perheen koko olisi luontevasti yksi hintaryhma¨n m¨a¨arite. Yhteen hintaryhm¨an ma¨¨aritteeseen ei kuitenkaan voi liittya¨ kahta lukuarvoa. Perheen koko pit¨aisi siis ilmaista joko yhten¨a kiintea¨na¨ ma¨a¨ritteena¨ tai kolmena erillisen¨a hintaryhm¨an ma¨a¨ritteena¨: 2 aikuista, ja ja 2 lasta. Ensimma¨isess¨a vaihtoehdossa kukin eri perhekoko vaatisi oman erillisen m¨aa¨ritteensa¨; toisessa taas generointis¨a¨anno¨t ta¨ytyy kirjoittaa siten, etta¨ ne tuottavat j¨arkeva¨n tuloksen t¨allaisesta ilmauksesta. Kumpaakaan ei voine pit¨a¨a kovin luonnollisena tapana ilmaista asia. Luonnollisempi tapa olisi sallia yhdelle hintaryhma¨n m¨a¨aritteelle useampi kuin yksi lukuarvo, mutta sen toteuttaminen olisi vaikeaa.
Kielest¨a riippumattoman rakenteen va¨¨arink¨aytto¨n¨a voi pita¨¨a myo¨s sellaisen hinnan esitta¨mist¨a, joka koostuu ryhma¨hinnasta ja henkil¨okohtaisesta lis¨ahinnasta: esimerkiksi 2928 mk/ryhma¨ + 388 mk/henkilo¨. T¨allaisen hinnan voi esitt¨aa¨ siten, ett¨a ryhma¨hinta ja henkilo¨kohtainen lis¨ahinta ovat kaksi erillist¨a hintaa, joista ja¨lkimma¨iseen liittyy hinnanma¨a¨rite plus. Generointisa¨a¨nno¨t ta¨ytyy kirjoittaa si-

69
ten, etta¨ hinnanma¨¨arite plus tuottaa sopivan merkkijonon, joka edelt¨a¨a itse hintaa. Hintojen v¨aliin tulee silti v¨aist¨am¨att¨a myo¨s hinta-alkiolistan alkioiden erotin (ks. liitteen A.1 esimerkki A.1.6). Ta¨llaisenkin hintailmauksen voisi ehk¨a ilmaista luonnollisemmin, jos hintailmauksissa olisi yksi listataso lisa¨a¨.
5.3.3 Aikailmausten puutteita
Aikailmauksissa ei ole suoraa tukea ilmauksille, jotka ovat tyyppi¨a joka x:n n:nten¨a y:na¨, esimerkiksi joka kuun toisena sunnuntaina. Niit¨a ei pysty ilmaisemaan ja tuottamaan yleisella¨ tavalla rakenteisina, jolloin kielest¨a riippumaton muoto sis¨alt¨aisi jollain tavalla ilmauksen muuttujat x, n ja y. Ta¨llaisia ilmauksia voi kuitenkin esitt¨aa¨ jollain tavalla k¨aytta¨ma¨ll¨a kullekin erilaiselle ilmaukselle omaa merkkijonotunnustaan.
Aikav¨ali-ilmausten ¨aa¨rip¨a¨at eiv¨at voi koostua kahden tai useamman eri tason aika-alkioista. Ka¨yt¨ann¨oss¨a t¨ama¨ tulee esille la¨hinna¨ vuodenviikkojen yhteydess¨a: ei ole mahdollista esitta¨a¨ ilmauksia vuoden 2001 viikosta 48 vuoden 2002 viikkoon 3 ja vuoden 2002 viikosta 4 alkaen. Vastaavasti myo¨sk¨aa¨n viikonpa¨iva¨n ja kellonajan yhdist¨aminen ei onnistu (esimerkiksi to klo 20 ­ la klo 10 ), mutta t¨allaiset ilmaukset lienev¨at harvinaisempia.21 P¨aiva¨m¨a¨arien kohdalla t¨am¨a ei ole ongelma, koska ilmauksissa on suoraan tuki erilaisille vuoden, kuukauden ja kuukaudenpa¨iv¨an yhdistelmille, joita j¨arjestelm¨a ka¨sittelee yksitt¨aisin¨a aika-alkioina. Ta¨m¨an rajoituksen poistaminen vaatisi merkitt¨avi¨a muutoksia ilmausten rakenteeseen ja esitysmuotoihin seka¨ mahdollisesti my¨os generointis¨a¨anto¨ihin.
Aikailmauksiin tai niiden osiin olisi joskus tarvetta liitta¨¨a jonkinlaisia ma¨¨aritteita¨, tarkenteita tai huomautuksia: esimerkiksi teatterin n¨ayta¨nto¨aikojen listassa jotkin na¨yta¨nn¨ot voisi merkit¨a ensi-illoiksi tai ennakkon¨ayt¨oksiksi (ks. luvun 3.3 esimerkki 5). T¨allaiset m¨a¨aritteet voisi ehka¨ toteuttaa samaan tapaan kuin hintojen ja hintaryhmien ma¨¨aritteet, vaikka tiiviiss¨a merkkijonomuodossa niiden syntaksi olisikin erilainen.
Hintailmausten tapaan my¨os aikailmaukset sisa¨lta¨va¨t joskus moneen eri osakohteeseen liittyvia¨ ilmauksia, esimerkiksi aukioloaikoja (ks. luvun 3.3 esimerkki 7). Jos ne haluttaisiin merkit¨a yhden yksitta¨isen aikailmauksen sisa¨ll¨a, aikailmausten yl¨apuolelle tarvittaisiin jonkinlainen valinnainen osakohdetaso tai -hierarkia. It-
21Ta¨m¨a rajoitus johtuu siit¨a, etta¨ en alunperin hinta- ja aikailmausten esitysmuotoa suunnitellessani ottanut huomioon ta¨llaisten aikav¨ali-ilmausten tarvetta. Vuodenviikkojen ka¨sittelyn lis¨asin j¨arjestelm¨aa¨n vasta my¨ohemm¨ass¨a vaiheessa.

70
se osakohteiden merkitsemiseen voisi ka¨ytta¨a¨ merkkijonotunnuksia. Aikailmausten osakohdeilmauksiin liittyy kuitenkin samoja periaatteellisia ongelmia kuin hintailmausten osakohdeilmauksiin (ks. luku 4.1). Aikailmaukset eiv¨at myo¨ska¨a¨n sis¨alla¨ hintaryhmien tapaista valmista mallia osakohteille.
5.4 Jatkotutkimus ja -kehitys
Ta¨ma¨ aliluku esittelee hinta- ja aikailmausten lokalisointij¨arjestelma¨¨an liittyvia¨ mahdollisia jatkotutkimus- ja jatkokehityskohteita. Osa niist¨a on k¨ayta¨nn¨onla¨heisi¨a ja ja¨rjestelma¨n tekniseen toteutukseen liittyvi¨a, osa teoreettisempia. Toteutukseen liittyva¨ jatkokehityskohde on my¨os edella¨ aliluvuissa 5.2 ja 5.3 kuvattujen puutteiden ja ongelmien korjaaminen.
5.4.1 Hinta- ja aikailmauskorpus
Hinta- ja aikailmausten lokalisoinnin jatkotutkimusta ja -kehitysta¨ varten olisi hyva¨ koota laajempi matkailualan tekstien korpus, jossa olisi hinta- ja aikailmauksia sis¨alt¨avia¨ tekstej¨a. Korpus voisi koostua ensisijaisesti WWW-sivuista, mutta ilmauksia voisi ehk¨a ker¨at¨a myo¨s esimerkiksi painetuista matkaoppaista ja -esitteist¨a. Korpuksessa voisi olla myo¨s muiden alojen vastaavia hinta- ja aikailmauksia sisa¨lta¨vi¨a tekstej¨a, jos sellaisia lo¨ytyy.
5.4.2 Ilmausten erist¨aminen tekstist¨a ja muuntaminen kielest¨a riippumattomaan muotoon
Hinta- ja aikailmausten tunnistaminen ja erista¨minen tekstista¨, esimerkiksi WWWsivuilta, olisi suurehko tutkimusalue, koska ilmaukset voidaan esitt¨aa¨ hyvin monella eri tavalla. Hinta- ja aikailmaukset eiva¨t va¨ltt¨am¨atta¨ ole varsinaisten tekstikappaleiden sisa¨ll¨a, vaan tiedot voidaan usein esitta¨a¨ taulukkoina. Erilaisten tietoalkioiden erottelemiseen voidaan k¨aytta¨a¨ my¨os muita typografisia keinoja.
Yksi merkitta¨v¨a jatkokehityskohde olisi ilmausten muuntimen kehitt¨aminen. Erityisesti hintailmausten la¨hto¨muodon pita¨isi olla nykyist¨a paljon joustavampi. Yksi vaihtoehto olisi mahdollistaa kahden erilaisen menetelm¨an ka¨ytta¨misen tilanteen mukaan: yksi olisi joustava, heuristiikkoja soveltava menetelm¨a; toinen olisi j¨aykempi ja kaavamaisempi menetelma¨, jolla kuitenkin tuloksen suhde syo¨tteeseen olisi suoraviivaisempi ja jolla pystyisi aina tuottamaan halutun tuloksen.

71
Ilmausten muuntamista voisi ehka¨ tarkastella rajoitetun kielen na¨ko¨kulmasta, jossa muunnoksen l¨aht¨omuoto olisi rajoitettua luonnollista kielt¨a (Lehrberger 1982: 102; Kittredge 1987: 59­60). T¨all¨oin muuntimen tehta¨v¨a olisi helpompi kuin jos sen pita¨isi yritt¨a¨a muuntaa vapaassa muodossa, rajoittamattomalla luonnollisella kielella¨ ilmaistuja ilmauksia. Muuntimen ymma¨rt¨ama¨n rajoitetun kielen pita¨isi kuitenkin olla riitt¨av¨an luonnollista, jotta ihminen pystyisi kirjoittamaan sita¨ kohtuullisen helposti.
Yksi vaihtoehto tietojen syo¨temuodoksi voisi olla jonkinlainen taulukko- tai tietokantamuoto. T¨all¨oin tietojen syo¨tta¨ja¨ voisi sy¨otta¨a¨ tiedot taulukkolaskentaohjelman tai tietokantasovelluksen lomakkeen kautta. Taulukkomuoto voisi pitk¨alti mahdollistaa kielesta¨ riippumattomuuden: esimerkiksi kunkin hotellihuonetyypin hinta olisi omalla rivilla¨a¨n ja mahdolliset alennuskaudet omina sarakkeinaan. PROMIS-tietokannan sis¨alt¨ama¨t majoitustiedot olivat ta¨ma¨ntapaisessa muodossa. Erillinen muunnosohjelma muuntaisi sitten ilmaukset t¨asta¨ taulukkomuodosta lopulliseen kielest¨a riippumattomaan muotoon. Taulukkomuodossa olisi kuitenkin todenn¨ako¨isesti vaikea ilmaista kovin mutkikkaita ilmauksia.
Tietojen sy¨otta¨miseen voisi ajatella ka¨ytetta¨va¨n my¨os tarkoitusta varten tehtya¨ sovellusohjelmaa tai ohjelmakomponenttia, jonka avulla voisi syo¨tt¨a¨a monimutkaisiakin ilmauksia. Ta¨llaisen ohjelman tekeminen riitt¨av¨an monipuoliseksi seka¨ helppo- ja nopeak¨aytto¨iseksi olisi kuitenkin suurehko tehta¨v¨a.
5.4.3 Hinta- ja aikailmausten formalisointi
Nykyisell¨aa¨n hinta- ja aikailmaukset on esitetty hyvin ep¨amuodollisesti. Ilmausten monipuolisempaa k¨asittely¨a ja laajentamista varten olisi hy¨odyllista¨ pyrki¨a formalisoimaan niit¨a jollain tavalla. Formalisointi saattaisi helpottaa esimerkiksi hintoja ja aikoja koskevien kyselyjen ja p¨a¨attelyiden toteuttamista.
Aikav¨alej¨a ja muita aikailmauksia varten on kehitetty logiikoita ja p¨aa¨ttelyja¨rjestelmi¨a, esimerkiksi kalenterilogiikka (Ohlbach 1997, 2000). Hintailmaukset sen sijaan lienev¨at niin tavanomaisia ja yleens¨a yksinkertaisia, ett¨a niille vastaavia tuskin on olemassa. Yksi kysymys onkin, voiko ja onko edes j¨arkev¨aa¨ yritt¨a¨a formalisoida hintailmauksia jotenkin.
Hinta- ja aikailmauksille ja niiden rakenteelle voisi myo¨s yritta¨a¨ l¨oyt¨aa¨ jonkin yleisemma¨n ilmaustyypin ja rakenteen, jonka erikoistapauksia hinta- ja aikailmaukset olisivat. Kovin yleisp¨ateva¨ ilmaustyyppi saattaisi kuitenkin vaatia hinta- ja aikailmauksia ajatellen tarpeettoman mutkikkaan generointi- ja pa¨¨attelyj¨arjestelm¨an.

72
Hinta- ja aikailmausten formalisointiin liittyen olisi kiinnostavaa tutkia, miten Rannan (2001b, 2001a, 2001c) Grammatical Framework (GF) soveltuisi na¨iden ilmausten esitt¨amiseen ja generoimiseen (ks. luku 2.2). Ilmausten kielest¨a riippumaton rakenne pita¨isi ta¨llo¨in kuvata GF:n tyyppiteoreettisena abstraktina syntaksina ja generoitavat luonnolliskieliset ilmaukset konkreettisena syntaksina. Generointis¨a¨anto¨j¨a vastaisivat GF:n linearisointis¨aa¨nn¨ot. Yksi kysymys olisi, voisiko GF:n pa¨a¨ttelymekanismilla toteuttaa hintoja ja aikoja koskevia kyselyit¨a.
5.4.4 Ilmausten ja s¨a¨ant¨ojen XML-esitysmuoto
Kuten luvussa 4.3.3 todettiin, hinta- ja aikailmaukset voisi esitta¨a¨ XML-muodossa. Ta¨m¨a edellytta¨isi soveltuvan XML-rakennem¨a¨arittelyn kirjoittamista. XML-muodon etuna olisi mahdollisuus ka¨ytt¨a¨a yleisi¨a XML-tyo¨kaluja. Lisa¨ksi ilmausten sy¨ott¨aminen XML-muodossa voisi olla helpompaa kuin tiiviiss¨a merkkijonomuodossa, etenkin jos k¨ayt¨ossa¨ on hyv¨a XML-editointiohjelma. XML-muoto vaatisi oman j¨asentimens¨a, joka tuottaisi muodosta vastaavat ilmausten Java-tietorakenteet.
My¨os generointisa¨¨anno¨t voisi esitt¨a¨a sopivassa XML-muodossa. Ta¨llainen XML-muoto olisi todenn¨ak¨oisesti raskaampaa kirjoittaa kuin nykyinen muoto, mutta toisaalta sopivaa XML-editoria k¨aytt¨ama¨ll¨a voisi olla mahdollista v¨altt¨aa¨ syntaksivirheita¨ helpommin kuin sa¨a¨nto¨jen nykyisessa¨ muodossa.
Kiinnostava tutkimuskohde olisi erityisesti generoinnin toteuttaminen kokonaan tai ainakin pa¨¨aosin XSLT-muunnoksilla (Extensible Stylesheet Language Transformations; Clark 1999). XSLT-muunnosten ka¨ytt¨amist¨a luonnollisen kielen generointiin esittelee Wilcock (2001). XSLT-muunnoksia k¨aytetta¨essa¨ ei tarvittaisi nykyisenkaltaista erityist¨a generointiohjelmaa, joka k¨aytt¨aa¨ omaa sa¨¨anto¨formalismiaan, vaan voisi k¨aytta¨¨a jotain yleisesti k¨aytettya¨ XSLT-prosessointiohjelmaa. XSLT-muunnoss¨a¨anto¨jen rajallisen ilmaisuvoiman vuoksi esimerkiksi morfologinen generointi vaatisi kuitenkin erillisen, esimerkiksi Java-kielisen moduulin, joka toimisi XSLT-laajennusfunktiona (extension function). Myo¨s yksitt¨aisten hinta- ja aikaalkioiden lokalisointi voisi olla ty¨ol¨ast¨a pelkilla¨ XSLT-sa¨a¨nno¨illa¨. Sopivien XSLTs¨aa¨nt¨ojen kirjoittaminen voisi olla ty¨ola¨sta¨, mutta toisaalta ei tarvitsisi opetella erillist¨a s¨a¨ant¨oformalisimia. Myo¨s sa¨¨ant¨ojen lokalisointi kieli- ja maa-asetuksen mukaan saattaisi vaatia enemma¨n tyo¨t¨a kuin nykyisess¨a j¨arjestelm¨assa¨.

73
5.4.5 Hinta- ja aikailmausten kielellinen luonne
Yksi mahdollinen tutkimuskohde olisi sen selvitta¨minen, mit¨a yksik¨oit¨a matkailualan teksteissa¨ esiintyva¨t hinta- ja aikailmaukset oikeastaan ovat kielellisesti tai kieliopillisesti. T¨am¨an tutkimiseksi ilmauksia sis¨alt¨ava¨ korpus olisi erityisen tarpeellinen.
Yleisesti ottaen na¨ytta¨isi silta¨, ett¨a ilmaukset voivat olla nominaalilausekkeita tai pre- tai postpositiolausekkeita, jotka sisa¨lta¨v¨at usein rinnastuksia. Ilmaukset voivat my¨os olla vaillinaisia lauseita tai lauseenosia, joista puuttuu verbi ja muitakin osia, jotka ilmausten lukija pystyy p¨aa¨ttelema¨a¨n asiayhteydesta¨. Jos ilmaus on esitetty taulukkomuodossa, sen puuttuvat osat saattavat tulla esimerkiksi taulukon rivi- ja sarakeotsikoista.
5.4.6 Generointis¨a¨anto¨jen ilmaisuvoima
Voisi olla kiinnostavaa tutkia tarkemmin generointis¨aa¨nto¨jen ilmaisuvoimaa sek¨a ka¨yt¨ann¨ossa¨ etta¨ muodollisesti: millaisia ilmauksia s¨aa¨nn¨oilla¨ voi tuottaa ja millaisia ei; millaiset kielen rakenteet ovat ongelmallisia; mita¨ generointis¨aa¨nno¨t ja ilmaukset olettavat generoitavasta kielest¨a; ja pita¨isiko¨ ilmausten sis¨alt¨a¨a joitakin kieli¨a varten nykyista¨ enemm¨an informaatiota. K¨ayta¨nn¨on tasolla voisi tutkia eri kielten hintaja aikailmauksia ja kokeilla, onnistuuko niiden tuottaminen.
Generointis¨a¨ant¨ojen muodollisen ilmaisuvoiman tutkimisessa saattaisi auttaisi, jos s¨a¨anno¨t pystyisi jotenkin formalisoimaan. S¨a¨anto¨j¨arjestelm¨aa¨ voisi esimerkiksi verrata attribuuttikielioppeihin (Knuth 1968; laajemmin esim. Derensart et al. 1988, Alblas 1991), puuautomaatteihin (Thatcher & Wright 1968, Doner 1970; laajemmin esim. G´ecseg & Steinby 1997, Comon et al. 1997) tai termien uudelleenkirjoitusj¨arjestelmiin (esim. Dershowitz & Jouannaud 1990, Klop 1992), tai sen voisi yritt¨a¨a palauttaa johonkin na¨ist¨a.
5.4.7 Lokalisointij¨arjestelm¨an sovellusalueen laajentaminen
Hinta- ja aikailmausten lokalisoinnissa ka¨ytettyj¨a periaatteita ja menetelmia¨ voisi ehka¨ soveltaa myo¨s muunlaisiin ilmauksiin. Soveltaminen edellytt¨aisi sopivan kielesta¨ riippumattoman muodon kehitta¨mista¨ seka¨ generointiohjelman ja generointis¨aa¨nto¨joukon sovittamista na¨iden ilmausten generointiin. Jos hinta- ja aikailmauksille voisi lo¨yt¨a¨a yhteisen yleisemm¨an ilmaustyypin (ks. aliluku 5.4.3), olisi hyv¨a, jos sita¨ voisi soveltaa my¨os muihin rakenteeltaan samantapaisiin ilmauksiin.

74
MIETTA-hankkeessa tuli esille tarve lokalisoida tiettyja¨ nimia¨ kokonaan tai osittain eri kielille: esimerkiksi Basilica di San Pietro ­ Pietarinkirkko ­ St Peter's Cathedral. Joissain tapauksissa olisi tarvetta lokalisoida vain nimen yleisnimiosa, esimerkiksi juuri kirkko. T¨allaisten nimien lokalisointi ei kuitenkaan aina ole s¨aa¨nn¨onmukaista. Todenna¨k¨oisesti ongelmallisia tapauksia olisivat my¨os ne, joissa nimea¨ t¨aytyy taivuttaa yhdess¨a kielessa¨, mutta ei toisessa: esimerkiksi Turun tuomiokirkko ­ Turku Cathedral. Myo¨s nimien esitta¨minen yhdyssanoina tai sanaliittoina voi aiheuttaa ongelmia: esimerkiksi Mikaelinkirkko mutta Pyh¨an Katariinan kirkko ja Maarian kirkko.
Rakenteeltaan hintailmauksia muistuttavia numeroilmauksia esiintyy muissakin yhteyksissa¨, kuten esimerkiksi laitteiden teknisina¨ tietoina. Na¨iss¨a tapauksissa vain valuutan tilalla on jokin muu (mitta)yksikko¨. Voisikin yritt¨aa¨ tutkia hintailmausten yleista¨mista¨ muihin, la¨hinn¨a numeerisiin suureisiin.
5.5 Hinta- ja aikailmausten lokalisoinnin merkitys ja k¨aytt¨omahdollisuudet
Ta¨ma¨n tyo¨n merkityksen arvioinnin kannalta keskeinen kysymys on, mit¨a ka¨ytto¨a¨ on matkailualan hinta- ja aikailmausten lokalisoinnilla. Matkailualalla monikielisyys on luonnollista, joten periaatteessa kielest¨a riippumaton esitysmuoto sopisi matkailutietokantoihin tai monikielisiin tapahtumakalentereihin, etenkin jos esitysmuotoon pystyisi tekema¨¨an kyselyj¨a. Ta¨llaisissa tietokannoissa on yleensa¨ monen eri kohteen tietoja, ja hinta- ja aikainformaation rakenne vaihtelee kohteesta toiseen, jolloin esitysmuodon on tarpeen olla monipuolinen ja joustava. Yksitt¨aisen tapahtuman, matkailukohteen tai liikkeen tietojen esitta¨miseen ja¨rjestelma¨ olisi todenn¨ak¨oisesti ylimitoitettu ja tarpeettoman raskas.
Monikielisen generoinnin vaihtoehtona hinta- ja aikailmausten lokalisoinnissa voisi olla automaattinen kielenka¨¨ant¨aminen, jos se toimisi riitta¨va¨n hyvin: hintaja aikailmauksetkin voisi t¨allo¨in esitt¨a¨a yhdell¨a kielell¨a ja ka¨¨anta¨a¨ muille kielille. Monikielinen konek¨a¨anno¨sj¨arjestelma¨kin vaatisi jonkinlaisen v¨alikielen, jota voisi verrata ta¨ma¨n ty¨on esittelema¨n ja¨rjestelma¨n kielesta¨ riippumattomaan muotoon. Koneka¨¨ant¨amisen vaikeuden vuoksi generoinnin ka¨ytta¨minen on perusteltua. Generoinnissa voi my¨os paremmin sa¨¨adell¨a ilmausten luonnolliskielist¨a esitysmuotoa, esimerkiksi niiden pituutta.
Voi kyseenalaistaa sen, onko j¨arkeva¨¨a tuottaa mutkikkaista hinta- ja aikail-

75
mauksista lauseita tai lauseenosia. Tiedonhakijan kannalta olisi usein selkea¨mpa¨a¨ esitt¨aa¨ hinta- ja aikainformaatio taulukkomuodossa. Taulukkomuodossa informaation lokalisointi saattaisi olla yksinkertaisempaa: taulukon rivi- ja sarakeotsikoiden sis¨alta¨m¨an informaation voisi lokalisoida tavanomaisilla v¨alineill¨a, esimerkiksi Javan ResourceBundle-mekanismilla, ja taulukon solujen sis¨alt¨am¨at hinta- tai aikailmaukset olisivat tyypillisesti niin yksinkertaisia, etta¨ ta¨m¨an tyo¨n esittelem¨a lokalisointija¨rjestelma¨ olisi niille turhan mutkikas ja raskas. Toisaalta monissa yhteyksiss¨a hinta- ja aikailmaukset on upotettu tekstiin, etenkin jos ne ovat suhteellisen lyhyita¨. Tekstimuoto on myo¨s tiiviimpi kuin taulukkomuoto, joten sen voisi ajatella sopivan erityisesti laajojen tietokantahakutulosten esitt¨amiseen.
Matkailutietokannan todellinen monikielisyys edellytta¨isi sita¨, ett¨a kaikki tietokannan tiedot tai ainakin suurin osa niista¨ olisi kielest¨a riippumattomassa muodossa; hinta- ja aikailmaukset olisivat tyypillisesti vain pieni osa n¨aista¨ tiedoista. Kielesta¨riippumattomuutta on kuitenkin vaikea toteuttaa ka¨yta¨nn¨ossa¨, etenkin jos tarkoituksena on hy¨odynt¨a¨a olemassa olevaa dataa. T¨ama¨ todettiin myo¨s MIETTAhankkeessa: esimerkiksi paikkojen ja tapahtumien nimet olivat MIETTA-tietokannassa alkupera¨iskielell¨a, vaikka ne usein olisi tarpeen lokalisoida. Mita¨ enemm¨an ja mita¨ yksityiskohtaisempia tietoja halutaan esitt¨a¨a kielest¨a riippumattomassa muodossa, sita¨ mutkikkaampi ta¨sta¨ muodosta tulee ja sita¨ vaikeampi tietoja on sy¨otta¨¨a tai muuntaa kyseiseen muotoon. Toisaalta MIETTA-ja¨rjestelm¨assa¨ ka¨ytetyt melko suppeatkin kielesta¨ riippumattomat tiedot voivat olla hyo¨dyllisi¨a, jos ka¨ytta¨ja¨ voi niiden perusteella arvioida, kannattaako h¨anen yritt¨a¨a etsia¨ lisa¨a¨ tietoa muuta kautta. Jotta kielesta¨ riippumatonta tietokantamuotoa ka¨ytta¨v¨a j¨arjestelm¨a olisi k¨aytt¨okelpoinen, pita¨isi myo¨s tietojen syo¨tta¨misen ja muuntamisen muista muodoista olla mahdollisimman yksinkertaista.
T¨am¨an tyo¨n ka¨sittelemien ilmausten tapaisilla hintailmauksilla ja ehka¨ myo¨s aikailmauksilla saattaisi olla k¨aytt¨oa¨ myo¨s matkailualan ulkopuolella ainakin monikielisiss¨a tuoteluetteloissa ja verkkokaupoissa. Pit¨aisi kuitenkin selvitta¨¨a, tarjoaisiko t¨am¨an tyo¨n kuvaama hinta- ja aikailmausten lokalisointi mit¨aa¨n olennaista parannusta verrattuna siihen, miten ta¨llaiset monikieliset ja¨rjestelma¨t on nyky¨a¨an toteutettu. Yksi monikielisten tuoteluetteloiden esitt¨amiseen k¨aytetty ja¨rjestelma¨ on Webtran, joka perustuu rajoitetun kielen automaattiseen k¨a¨anta¨miseen (Lehtola et al. 1999a,b). Toinen monikielisi¨a tuoteluetteloita ja verkkokauppoja kehitta¨v¨a hanke on MKBEEM, jossa keskeist¨a on ontologioiden ka¨ytto¨ (L´eger et al. 2000, 2001).

76
Yhteenvetona voi todeta, ett¨a ta¨ma¨n tyo¨n kuvaaman kaltaisella hinta- ja ai-
kailmausten lokalisoinnilla voisi olla ka¨ytt¨o¨a pienen¨a osana matkailualan ja mahdol-
lisesti muidenkin alojen monikielisi¨a ja¨rjestelmia¨. Todellista k¨aytto¨¨a varten pit¨aisi
kuitenkin ainakin helpottaa tietojen syo¨tt¨amist¨a kielest¨a riippumattomassa muo-
dossa tai muuntamista siihen. Ilmausten ja mahdollisesti myo¨s generointisa¨¨ant¨ojen
ilmaisuvoimaa olisi tarpeen laajentaa. Ilmausten ja sa¨a¨nt¨ojen esitta¨minen XML-
muodossa tekisi ja¨rjestelma¨n todenna¨ko¨isesti k¨aytto¨kelpoisemmaksi ja ehk¨a my¨os
madaltaisi sen k¨aytt¨oo¨nottokynnysta¨.
L¨ahteet
Aho, Alfred V. & Stephen C. Johnson 1974. LR Parsing. ACM Computing Surveys 6: 99­124.
Alblas, Henk 1991. Introduction to Attribute Grammars. Henk Alblas & Borivoj Melichar, toim., Attribute grammars, applications and systems. Lecture Notes in Computer Science 545, 1­15. International Summer School SAGA, Prague, Czechoslovakia, June 4­13. Berlin: Springer.
Alestalo-Shepelenko, Marjatta & Eija Ha¨ma¨la¨inen 1997. Ven¨aja¨n kielioppi. Toinen, korjattu painos. Helsinki: Finn Lectura.
Apache Software Foundation 2000. The Apache Software License. Version 1.1. WWW-sivu. http://cvs.apache.org/viewcvs/~checkout~/jakarta-oro/ LICENSE?content-type=text/plain (luettu 24.11.2001).
Apache Software Foundation 2001. Jakarta ORO. WWW-sivu. http:// jakarta.apache.org/oro/ (luettu 16.10.2001).
Arnold, Ken, James Gosling & David Holmes 2000. The Java Programming Language. Third Edition. Addison-Wesley.
Bateman, John A. 1997. Enabling technology for multilingual natural language generation: the kpml development environment. Natural Language Engineering 3: 15­55.
Bateman, John A., Christian M. I. M. Matthiessen, Keizo Nanri & Licheng Zeng 1991. Multilingual Text Generation: an Architecture Based on Functional Typology. International Conference on Current Issues in Computational Linguistics. 389­407. Penang, Malaysia. Also available as technical report of the Department of Linguistics, University of Sydney.
Bell Telephone Laboratories 1983. UNIX Programmer's Manual, Seventh Edition. New York: Holt, Rinehart and Winston. Revised and expanded version; first version 1979.
Berk, Elliot & C. Scott Ananian 2000. JLex: A Lexical Analyzer Generator for Java. WWW-sivu. http://www.cs.princeton.edu/~appel/modern/ java/JLex/ (luettu 16.10.2001).
Bray, Tim, Jean Paoli, C. M. Sperberg-McQueen & Eve Maler, toim. 2000. Extensible Markup Language (XML) 1.0. Second Edition. The World Wide Web Consortium (W3C). http://www.w3.org/TR/2000/ REC-xml-20001006 (luettu 8.10.2001). W3C Recommendation 6 October 2000.
Buitelaar, Paul, Luca Dini, Vittorio Di Tomaso, Alessandro Giaran-

77
te, Giampaolo Mazzini, Rosa Meo, Klaus Netter, Jyrki Niemi & Feiyu Xu 1999. MIETTA Deliverable 3.2/3.3: Requirements & Functional Specification. Version 1.29. Busemann, Stephan 1996. Best-First Surface Realization. Donia Scott, toim., Proceedings of the Eighth International Natural Language Generation Workshop (INLG '96). 101­110. Herstmonceux, Sussex. Also available as Research Report RR-96-05, Deutsches Forschungszentrum fu¨r Ku¨nstliche Intelligenz, Saarbru¨cken, Germany. Busemann, Stephan 1998. A Shallow Formalism for Defining Personalized Text. Workshop Professionelle Erstellung von Papier- und Online-Dokumenten: Perspektiven fu¨r die automatische Textgenerierung at the 22nd Annual German Conference on Artificial Intelligence (KI-98). Bremen. Busemann, Stephan sa. TG/2: Practical Generation of Natural Language Text. WWW-sivu. http://www.dfki.de/pas/f2w.cgi?lts/tg2-e (luettu 8.8.2001). CELI 1998. JTg2Light 1.0 Beta 1 Home Page. HTML-muotoinen dokumentaatio. Clark, James, toim. 1999. XSL Transformations (XSLT), Version 1.0. The World Wide Web Consortium (W3C). http://www.w3.org/TR/1999/ REC-xslt-19991116 (luettu 16.10.2001). W3C Recommendation 16 November 1999. Comon, Hubert, Max Dauchet, Re´mi Gilleron, Florent Jacquemard, Denis Lugiez, Sophie Tison & Marc Tommasi 1997. Tree Automata Techniques and Applications. WWW-sivu. http://www.grappa. univ-lille3.fr/tata/ (luettu 30.11.2001). Book draft. Dale, Robert, Eduard Hovy, Dietmar Ro¨sner & Oliviero Stock, toim. 1992. Aspects of Automated Natural Language Generation: Proceedings of the 6th International Workshop on Natural Language Generation. Lecture Notes in Computer Science 587. Berlin: Springer. DeRemer, Franklin L. 1971. Simple LR(k) grammars. Communications of the ACM 14: 453­460. Derensart, Pierre, Martin Jourdan & Bernard Lorho 1988. Attribute grammars: definitions, systems and bibliography. Lecture Notes in Computer Science 323. Berlin: Springer. Dershowitz, Nachum & Jean-Pierre Jouannaud 1990. Rewrite Systems. Jan van Leeuwen, toim., Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics. 243­320. Amsterdam: Elsevier ­ MIT Press. Doner, John 1970. Tree acceptors and some of their applications. Journal of Computing and System Sciences 4: 406­451. Eriksson, Hans-Erik & Magnus Penker 1989. UML Toolkit. New York: John Wiley & Sons. Forster, David R. 1989a. Generating Temporal Expressions in Natural Language. Proceedings of the 11th Annual Conference of the Cognitive Science Society (COGSCI-89). 259­266. Ann Arbor, MI. Forster, David R. 1989b. Time and Natural Language Generation. Technical report UM-CS-1989-001, University of Massachusetts, Amherst, MA. http://www.cs.umass.edu/Dienst/UI/2.0/Describe/ncstrl. umassa_cs%2FUM-CS-1989-001 (luettu 27.11.2001). Forster, David R. 1990. The Generation of Temporal Expressions in Natural Language. PhD thesis, University of Massachusetts, Amherst, MA. Free Software Foundation 1999. GNU Lesser General Public License. Ver-

78
sion 2.1. WWW-sivu. http://www.gnu.org/licenses/lgpl.html (luettu 8.8.2001). Free Software Foundation 2001. Various Licenses and Comments about Them. WWW-sivu. http://www.gnu.org/licenses/license-list.html (luettu 24.11.2001). Friedl, Jeffrey E. F. 1997. Mastering Regular Expressions. Sebastopol, CA: O'Reilly. Gagnon, Michel 1993. Expression de la localisation temporelle dans un g´en´erateur de texte. Th`ese de doctorat, D´epartement d'informatique et de recherche op´erationelle, Universit´e de Montr´eal, Montr´eal. Gagnon, Michel & Guy Lapalme 1996. Pr´etexte: a generator for the expression of temporal information. G. Adorni & M. Zock, toim., Trends in Natural Language Generation: An Artificial Intelligence Perspective. Lecture Notes in Computer Science 1036, 238­259. Berlin: Springer. http://www.iro. umontreal.ca/~scriptum/GagnonPise.ps.gz (luettu 27.11.2001). Gazdar, Gerald & Chris Mellish 1989. Natural language processing in Prolog: An introduction to computational linguistics. Wokingham, England: AddisonWesley. Ge´cseg, Ferenc & Magnus Steinby 1997. Tree Languages. G[rzegorz] Rozenberg & A[rto] Salomaa, toim., Handbook of Formal Languages, Volume 3, Beyond Words. 1­68. Berlin: Springer. Hudson, Scott E., Frank Flannery & C. Scott Ananian 1999. CUP Parser Generator for Java. WWW-sivu. http://www.cs.princeton.edu/ ~appel/modern/java/CUP/ (luettu 16.10.2001). International Organization for Standardization 1988. International Standard ISO 8601 : 1988. Data elements and interchange formats ­ Information interchange ­ Representation of dates and times. Switzerland. Jackson, Jared 2000. Harnessing internationalization: Using RBManager to manage the complexity of your internationalized development. Technical report, IBM, Almaden Research Center. http://www-106.ibm.com/ developerworks/library/j-rbmgr/ (luettu 6.10.2001). Johnson, Stephen C. 1979. Yacc: Yet Another Compiler-Compiler. Bell Telephone Laboratories (1983), 357­384. http://dinosaur.compilertools.net/ lex/lex.ps (luettu 24.11.2001). Kittredge, Richard I. 1987. The significance of sublanguage for automatic translation. Sergei Nirenburg, toim., Machine translation: Theoretical and methodological issues. Studies in Natural Language Processing, 59­67. Cambridge: Cambridge University Press. Klop, J[an] W[illem] 1992. Term rewriting systems. S. Abramsky, Dov M. Gabbay & T. S. E. Mailbaum, toim., Handbook of Logic in Computer Science, Volume 2: Background: Computational Structures. 1­116. Oxford: Oxford University Press. Knuth, Donald E. 1968. Semantics of context-free languages. Mathematical Systems Theory 2: 127­145. Lehrberger, John 1982. Automatic Translation and the Concept of Sublanguage. Richard Kittredge & John Lehrberger, toim., Sublanguage: Studies of Language in Restricted Semantic Domains. 81­106. Berlin: Walter de Gruyter. Lehtola, Aarno, Jarno Tenni, Catherine Bounsaythip & Kristiina Jaaranen 1999a. Controlled Languages as the Basis for Multilingual Catalogues on the WWW. Jean-Yves Roger, Brian Stanford-Smith & Paul T.

79
Kidd, toim., Business and Work in the Information Society: New Technologies and Applications. 207­213. Amsterdam: IOS-Press. http://www.vtt.fi/ tte/projects/language_engineering/publications/emmsec99.pdf (luettu 28.11.2001). Lehtola, Aarno, Jarno Tenni, Catherine Bounsaythip & Kristiina Jaaranen 1999b. WEBTRAN: A Controlled Language Machine Translation System for Building Multilingual Services on Internet. Proceedings of Machine Translation Summit VII. Singapore. http://www.vtt.fi/tte/ projects/language_engineering/publications/mtsummit1999.pdf (luettu 28.11.2001). Lesk, M. E. & E. Schmidt 1979. Lex ­ A Lexical Analyzer Generator. Bell Telephone Laboratories (1983), 388­400. http://dinosaur.compilertools. net/lex/lex.ps (luettu 24.11.2001). Levine, John R., Tony Mason & Doug Brown 1992. Lex & Yacc. Second Edition. Sebastopol, CA: O'Reilly. Le´ger, Alain, Aarno Lehtola & Victor Villagra 2001. MKBEEM ­ Developing Multilingual Knowledge-Based Marketplace. ERCIM News 46: 50­ 52. http://www.ercim.org/publication/Ercim_News/enw46/leger.html (luettu 28.11.2001). Le´ger, Alain, Ge´raldine Michel, Peter Barrett, Sylvain Gitton, Asuncion Gome´z-Pe´rez, Aarno Lehtola, Kristiina Mokkila, Santiago Rodrigez, Jean Sallantin, Theodora Varvarigou & Je´ro^me Vinesse 2000. Ontology Domain Modeling Support for Multi-lingual Services in E-Commerce: MKBEEM. Proceedings of the 14th European Conference on Artificial Intelligence ECAI'00. Berlin. http://delicias.dia.fi.upm.es/ WORKSHOP/ECAI00/19.pdf (luettu 28.11.2001). Matkailun edista¨miskeskus a. Finland Travel Guide. WWW-sivu. http: //www.finlandtravelguide.com/ (luettu 8.10.2001). Matkailun edista¨miskeskus b. PROMIS on parhaiden suomalaisten matkailutuotteiden sa¨hk¨oinen tietokanta. WWW-sivu. http://www.mek.fi/web/ mekfi.nsf/(pages)/Promis?OpenDocument (luettu 8.10.2001). Matthiessen, Christian M. I. M. & John A. Bateman 1991. Text Generation and Systemic-Functional Linguistics: Experiences from English and Japanese. Communication in Artificial Intelligence Series. London: Pinter Publishers. MIETTA Project 1998. Multilingual Information Extraction for Tourism and Travel Assistance: Project Programme. Commercial in confidence. MIETTA Project 2000a. MIETTA. WWW-sivu. http://mietta.dfki.de/ (luettu 8.10.2001). MIETTA Project 2000b. MIETTA User Manual. Draft version 0.4. Niemi, Jyrki 2001. Generating Detailed Prices and Times. Hinta- ja aikailmausten generointij¨arjestelma¨n version 0.06.02 ka¨ytt¨oohje HTML-muodossa. Nirenburg, Sergei 1992. On Language-Independent Inputs for Multilingual Generation. Dale et al. (1992), 303­305. Nordstro¨m, Bengt, Kent Petersson & Jan M. Smith 1990. Programming in Martin-L¨of 's Type Theory: An Introduction. Oxford University Press. http://www.cs.chalmers.se/www.cs.chalmers.se/Cs/Research/ Logic/book/ (luettu 25.11.2001). Ohlbach, Hans Ju¨rgen 1997. About Real Time, Calendar Systems and Temporal Notions. Howard Barringer & Dov Gabbay, toim., Proceedings of the Second International Conference on Temporal Logic ICTL 1997. Manches-

80
ter, UK: Kluwer Academic Publishers. http://citeseer.nj.nec.com/ rd/0%2C117182%2C1%2C0.25%2CDownload/http%253A%252F%252Fciteseer. nj.nec.com/cache/papers/cs/3428/http%253AzSzzSzwww.dcs.kcl.ac. ukzSzstaffzSzohlbachzSzhomepagezSzpublicationszSzconferenceszSztime. ps.gz/ohlbach97about.ps.gz (luettu 3.10.2001). Ohlbach, Hans Ju¨rgen 2000. Calendar Logic. Dov M. Gabbay, Marcelo Finger & Mark Reynolds, toim., Temporal Logic: Mathematical Foundations and Computational Aspects, Volume 2. Chapter 19. Oxford: Oxford University Press. http://www.pms.informatik.uni-muenchen.de/mitarbeiter/ohlbach/ homepage/publications/TL/calendar/book.ps.gz (luettu 3.10.2001). Peterson, John & Olaf Chitil, toim. 2001. The Haskell Home Page. WWWsivu. http://www.haskell.org/ (luettu 25.11.2001). Ranta, Aarne 2001a. The GF Language: Syntax and Type System. http://www. cs.chalmers.se/~aarne/GF/pub/work-index/doc/gf-report.ps.gz (luettu 27.11.2001). Draft. Ranta, Aarne 2001b. Grammatical Framework. WWW-sivu. http://www.cs. chalmers.se/~aarne/GF/ (luettu 25.11.2001). Ranta, Aarne 2001c. Grammatical Framework Tutorial. WWW-sivu. http:// www.cs.chalmers.se/~aarne/GF/doc/tutorial/gf-tutorial.html (luettu 25.11.2001). Ro¨sner, Dietmar 1992. Remarks on Mulitlinguality and Generation. Dale et al. (1992), 306­308. Thatcher, J. W. & J. B. Wright 1968. Generalized Finite Automata Theory with an Application to a Decision Problem. Mathematical Systems Theory 2: 57­82. Unicode Consortium 1996. The Unicode Standard: Version 2.0. Reading, MA: Addison-Wesley. Wall, Larry, Randal L. Schwartz, Tom Christiansen & Stephen Potter 1996. Programming Perl. Second Edition. A nutshell handbook. Sebastopol, CA: O'Reilly. Wilcock, Graham 2001. Pipelines, Templates and Transformations: XML and Natural Language Generation. Proceedings of the 1st NLP and XML Workshop. Tokyo. http://www.ling.helsinki.fi/users/gwilcock/Pubs/ NLPXML-01.pdf (luettu 29.9.2001). Tulossa.

81
A Esimerkkej¨a hinta- ja aikailmauksista
Ta¨ma¨ liite sisa¨lt¨a¨a esimerkkeja¨ tiiviiss¨a merkkijonomuodossa olevista hinta- ja aikailmauksista seka¨ niit¨a vastaavista generointiohjelman tuottamista suomen- ja englanninkielisista¨ ilmauksista. Osa ilmauksista on pera¨isin MIETTA-tietokannasta, osa on muodostettu esittelema¨a¨n ilmausten ominaisuuksia. Luonnolliskieliset ilmaukset perustuvat MIETTA-hankkeessa ka¨ytettyihin generointisa¨a¨nt¨oihin, jotka esitella¨¨an liitteess¨a D.
Kukin esimerkki sisa¨lt¨a¨a tiiviissa¨ merkkijonomuodossa olevan hinta- tai aikailmauksen seka¨ generointiohjelman siita¨ tuottaman suomen- ja englanninkielisen ilmauksen. Muutamat esimerkit esitteleva¨t valitsinsa¨a¨nt¨ojen vaikutusta generointitulokseen; t¨allaisissa esimerkeissa¨ generointituloksia on useampia kuin kaksi.
A.1 Hintailmaukset
Esimerkki A.1.1 Pa¨a¨symaksuhintailmaus, jossa valuutta kattaa koko hintaryhma¨n ja joka sisa¨lta¨a¨ oletushintaryhma¨n ja nimettyj¨a hintaryhmia¨ sek¨a hintaryhmien m¨aa¨ritteit¨a:
$[itl]*:10000,ch(a_18),pe:0,gr(n10):150000
 (hinnat Italian liiroina) 10 000 liiraa; eninta¨¨an 18-vuotiaat lapset ja el¨akel¨aiset 0 liiraa; 10 hengen ryhm¨at 150 000 liiraa
 (prices in Italian liras) 10,000 liras; children of up to 18 years old and seniors 0 liras; groups of 10 persons 150,000 liras
Esimerkki A.1.2 Hotellihintailmaus, joka sisa¨lt¨a¨a hintav¨alej¨a ja erityishintoja seka¨ hintaryhm¨an m¨aa¨ritteita¨, joihin ei liity lukuarvoa:
$[itl]db(nbr):100000_150000,db(br):110000_180000;bf:in
 (hinnat Italian liiroina) kahden hengen huone ilman kylpyhuonetta 100 000150 000 liiraa ja kahden hengen huone kylpyhuoneen kanssa 110 000-180 000 liiraa; aamiainen sis¨altyy hintaan
 (prices in Italian liras) double without bathroom from 100,000 to 150,000 liras and double with bathroom from 110,000 to 180,000 liras; breakfast included
Esimerkki A.1.3 Seuraava hotellihintailmaus sisa¨lta¨¨a kaksi hinta-alkioryhma¨a¨, joihin kumpaankin kuuluu voimassaoloaika. Lis¨aksi ilmaus sis¨alta¨¨a koko hintaryhm¨a¨a koskevan hinnanm¨aa¨ritteen.
$<2002(05-01_09-30[we])>([eur](pn)sg:60,db:70);<ot>(sg:80,db:95)
 (hinnat y¨ot¨a kohti) (hinnat euroina) 1.5.-30.9.2002 viikonloppuisin: yhden hengen huone 60 euroa ja kahden hengen huone 70 euroa; muina aikoina: yhden hengen huone 80 euroa ja kahden hengen huone 95 euroa

82
 (prices per night) (prices in euros) from 1 May to 30 September 2002 weekends: single 60 euros and double 70 euros; at other times: single 80 euros and double 95 euros
Yhdelle hinta-alkioryhm¨alle m¨aa¨ritelty valuutta pysyy voimassa my¨os seuraavassa hinta-alkioryhma¨ssa¨ ellei se ma¨a¨rittele toista valuuttaa.
Esimerkki A.1.4 Seuraava hintailmaus sisa¨lta¨a¨ seka¨ absoluuttisen etta¨ prosentuaalisen alennuksen. Valuutta on ilmoitettu kunkin hinnan kohdalla erikseen. Lis¨aksi ilmaus sisa¨lta¨¨a hinnanm¨aa¨ritteen henkea¨ kohti.
$*:1000_1600fim(pp),gr(n10_):-250fim(pp),ch(a_11):%50,ch(a_3):fr
 1 000-1 600 mk/henkil¨o, v¨ahint¨aa¨n 10 hengen ryhma¨t 250 mk alennus/henkilo¨, eninta¨a¨n 11-vuotiaat lapset 50 % alennus ja enint¨aa¨n 3-vuotiaat lapset ilmaiseksi
 from 1,000 to 1,600 Fim per person, groups of at least 10 persons 250 Fim discount per person, children of up to 11 years old 50% discount and children of up to 3 years old free
Esimerkki A.1.5 Retkeilymajan hintoja esitta¨v¨a hintailmaus:
$[fim]sg:210(pp),db:105,ro(b4_12):75_77.50,bf:23,bdln:30
Seuraavassa j¨alkimma¨inen generointitulos kummallakin kielella¨ sisa¨lta¨¨a hinnat ilmauksessa ka¨ytetyn valuutan lis¨aksi euroina.
 (hinnat Suomen markkoina) yhden hengen huone 210 mk/henkilo¨, kahden hengen huone 105 mk, huone (4-12 sa¨nkya¨) 75-77,50 mk, aamiainen 23 mk ja vuodevaatteet 30 mk
 (hinnat Suomen markkoina) yhden hengen huone 210 mk (35,32 euroa)/henkil¨o, kahden hengen huone 105 mk (17,66 euroa), huone (4-12 s¨anky¨a) 75-77,50 mk (12,61-13,03 euroa), aamiainen 23 mk (3,87 euroa) ja vuodevaatteet 30 mk (5,05 euroa)
 (prices in Finnish marks) single 210 Fim per person, double 105 Fim, room with 4 to 12 beds from 75 to 77.50 Fim, breakfast 23 Fim and bedlinen 30 Fim
 (prices in Finnish marks) single 210 Fim (35.32 euros) per person, double 105 Fim (17.66 euros), room with 4 to 12 beds from 75 to 77.50 Fim (12.61-13.03 euros), breakfast 23 Fim (3.87 euros) and bedlinen 30 Fim (5.05 euros)
Esimerkki A.1.6 Hintailmaus, joka sisa¨lta¨¨a plus-ma¨a¨ritteen:
$[fim]*:2000(pg),*:200(pl,pp)
 (hinnat Suomen markkoina) 2 000 mk/ryhm¨a ja plus 200 mk/henkil¨o
 (prices in Finnish marks) 2,000 Fim per group and plus 200 Fim per person

83
A.2 Aikailmaukset
Seuraavien esimerkkien aikailmausten suomenkieliset generointitulokset sisa¨lta¨v¨at viikonpa¨ivien nimet ja kuukausiva¨li-ilmaukset pitk¨ass¨a muodossa. Englanninkieliset generointitulokset puolestaan on generoitu k¨aytta¨en monisanaista asetusta, kellonajoissa 12 tunnin j¨arjestelma¨¨a sek¨a sanoja noon ja midnight (ks. luku 4.5.8). Muutama esimerkki esittelee lis¨aksi vaihtoehtoisia generointituloksia.
Esimerkki A.2.1 Aikailmaus, joka sisa¨lta¨a¨ vuosi-, kuukausi-, viikonp¨aiva¨- ja kellonaikatasot sek¨a poikkeusilmauksen:
&2000(01_12[1_7{0700_1200}]\07_09[1_7{2030_2400}])
 tammikuusta joulukuuhun 2000 maanantaista sunnuntaihin klo 7.00-12.00, paitsi heina¨kuusta syyskuuhun 2000 maanantaista sunnuntaihin klo 20.300.00
 from January to December 2000 Monday through Sunday 7:00 am to noon, except from July to September 2000 Monday through Sunday 8:30 pm to midnight
Esimerkki A.2.2 Aikailmaus, joka sis¨alt¨a¨a viikonp¨aiv¨at suoraan vuoden ali-ilmauksena sek¨a yksitt¨aisia¨ viikonpa¨ivi¨a ja alkaen-aikoja:
&2000[2{2045_};3{1700_};4_5{2045_};6{1630_,2045_};7{17_}]
Seuraavassa toinen suomenkielinen generointitulos esittelee viikonp¨aiva¨lyhenteiden ka¨ytt¨amist¨a.
 v. 2000 tiistaisin alkaen klo 20.45; keskiviikkoisin alkaen klo 17.00; torstaista perjantaihin alkaen klo 20.45; lauantaisin alkaen klo 16.30 ja alkaen klo 20.45; sunnuntaisin alkaen klo 17
 v. 2000 ti alkaen klo 20.45; ke alkaen klo 17.00; to-pe alkaen klo 20.45; la alkaen klo 16.30 ja alkaen klo 20.45; su alkaen klo 17
 2000: Tuesdays starting at 8:45 pm; Wednesdays starting at 5:00 pm; Thursday through Friday starting at 8:45 pm; Saturdays starting at 4:30 pm and starting at 8:45 pm; Sundays starting at 5 pm
Esimerkki A.2.3 Aikailmaus, joka sisa¨lta¨¨a erityisviikonp¨aiva¨ilmauksen pa¨ivitt¨ain ja erityistunti-ilmauksen suljettu:
&04-16_09-15[da{10_18}];09-16_04-15[1{cl};2_7{10_15}]
 16.4.-15.9. p¨aivitta¨in klo 10-18; 16.9.-15.4. maanantaisin suljettu; tiistaista sunnuntaihin klo 10-15
 from 16 April to 15 September daily 10 am to 6 pm; from 16 September to 15 April Mondays closed; Tuesday through Sunday 10 am to 3 pm

84
Esimerkki A.2.4 Aikailmaus, joka sisa¨lt¨aa¨ kokonaisia pa¨iv¨am¨aa¨r¨ailmauksia ja ep¨ama¨¨ara¨ist¨a pa¨iv¨am¨aa¨r¨av¨ali¨a vastaavan erityisaikailmauksen poikkeusilmauksessa:
&2001-10-15_2002-02-24[1_5{10_1930}]\ch[1_5{10_21};6_7{12_18}]
 15.10.2001-24.2.2002 maanantaista perjantaihin klo 10-19.30, paitsi joulun aikaan maanantaista perjantaihin klo 10-21; lauantaista sunnuntaihin klo 12-18
 from 15 October 2001 to 24 February 2002 Monday through Friday 10 am to 7:30 pm, except at Christmas time Monday through Friday 10 am to 9 pm; Saturday through Sunday noon to 6 pm
Esimerkki A.2.5 Aikailmaus, joka sis¨alt¨a¨a kuukausitason poikkeusaikailmauksen:
&06-01_08-15[da{10_18}]\06(23_24{cl})
 1.6.-15.8. p¨aivitta¨in klo 10-18, paitsi 23.-24.6. suljettu
 from 1 June to 15 August daily 10 am to 6 pm, except from 23 to 24 June closed
Esimerkki A.2.6 Aikailmaus, jossa on ylimma¨ll¨a tasolla kaksi eri tasoa olevaa aikailmausta: tunti-ilmaus ja vuosi-ilmaus, jolla on ali-ilmauksenaan tunti-ilmaus:
&{0730_1030,1200_1730,2000_0130};;2002{0800_1700,2000_0230}
J¨alkimma¨inen englanninkielinen generointitulos esittelee 24 tunnin ja¨rjestelma¨n k¨aytta¨mist¨a ilman sanallisia noon- ja midnight-ilmauksia.
 klo 7.30-10.30, 12.00-17.30 ja 20.00-1.30; v. 2002 klo 8.00-17.00 ja 20.00-2.30
 7:30 to 10:30 am, noon to 5:30 pm and 8:00 pm to 1:30 am; 2002: 8:00 am to 5:00 pm and 8:00 pm to 2:30 am
 7:30 to 10:30, 12:00 to 17:30 and 20:00 to 1:30; 2002: 8:00 to 17:00 and 20:00 to 2:30
Esimerkki A.2.7 Aikailmaus, joka sis¨alt¨aa¨ kaikki aikailmaushierarkian tasot:
&2000(01(02_15[1_5{10_18}];16_31[1_4{11_19}]);02_08[1_5{10_19}])
J¨alkimma¨inen suomenkielinen generointitulos esittelee kuukausiva¨li-ilmausten lyhenta¨mista¨.
 2.-15.1.2000 maanantaista perjantaihin klo 10-18; 16.-31.1.2000 maanantaista torstaihin klo 11-19; helmikuusta elokuuhun 2000 maanantaista perjantaihin klo 10-19
 2.-15.1.2000 maanantaista perjantaihin klo 10-18; 16.-31.1.2000 maanantaista torstaihin klo 11-19; helmi-elokuussa 2000 maanantaista perjantaihin klo 1019

85
 from 2 to 15 January 2000 Monday through Friday 10 am to 6 pm; from 16 to 31 January 2000 Monday through Thursday 11 am to 7 pm; from February to August 2000 Monday through Friday 10 am to 7 pm
Esimerkki A.2.8 Seuraava aikailmaus sisa¨lt¨a¨a pa¨iv¨ama¨¨ara¨- mutta ei viikonp¨aiv¨ailmauksia (esimerkiksi jonkin esityksen ajankohtia). Lisa¨ksi ilmauksessa on kuukaudenpa¨iv¨ailmauksena lista pa¨ivi¨a, joilla on yhteisena¨ ali-ilmauksenaan tunti-ilmaus.
&2000-09(11,15,19{08_1645})
J¨alkimma¨inen generointitulos kummallakin kielella¨ esittelee viikonp¨aiv¨an lisa¨¨amista¨ pa¨iva¨ma¨a¨ra¨ilmaukseen, jolla ei ole viikonpa¨iv¨ailmausta ali-ilmauksenaan.
 11., 15. ja 19.9.2000 klo 8-16.45
 maanantaina 11., perjantaina 15. ja tiistaina 19.9.2000 klo 8-16.45
 11, 15 and 19 September 2000, 8 am to 4:45 pm
 Monday, 11, Friday, 15 and Tuesday, 19 September 2000, 8 am to 4:45 pm
Esimerkki A.2.9 Aikailmaus, joka sis¨alta¨a¨ vuodenviikkoilmauksia seka¨ pelk¨an alkuarvon sis¨alta¨v¨an vuosiv¨ali-ilmauksen:
&2000("10[1_7];11_15,30_42,49[2_5];ot[2_3]);2001_[1_6]
 v. 2000 viikolla 10 maanantaista sunnuntaihin; viikkoina 11-15, viikkoina 3042 ja viikolla 49 tiistaista perjantaihin; muina aikoina tiistaista keskiviikkoon; v. 2001 alkaen maanantaista lauantaihin
 2000: week 10 Monday through Sunday; weeks 11 to 15, weeks 30 to 42 and week 49 Tuesday through Friday; at other times Tuesday through Wednesday; starting in 2001: Monday through Saturday

86
B Laajennettujen yhteydetto¨mien kielioppien
merkint¨atavat
T¨am¨an raportin sisa¨lt¨am¨at ilmausten rakenteen ja esitysmuodon kieliopit on esitetty s¨a¨anno¨llisill¨a lausekkeilla laajennettuina yhteydett¨omin¨a kielioppeina (extended context-free grammar).22 Kieliopit ka¨ytta¨v¨at seuraavia merkint¨atapoja, jotka vastaavat pitka¨lti XML-m¨a¨arittelyss¨a k¨aytettyj¨a merkint¨oja¨ (Bray et al. 2000: luku 6).
Kieliopin s¨a¨anno¨t ovat muotoa
symboli ::= lauseke
tai
symboli [tyyppi ] ::= lauseke
miss¨a sa¨¨anno¨n vasemman puolen symboli on kieliopin v¨alisymboli, tyyppi v¨alisymbolia vastaava tyyppi tai Java-luokka ja s¨aa¨nn¨on oikean puolen lauseke sa¨a¨nn¨ollinen lauseke, joka kuvaa symbolia symboli vastaavan rakenteen. Kielioppisa¨¨ann¨oill¨a voi kuvata seka¨ va¨li- ett¨a pa¨¨atesymbolien rakenteen. Kielioppisa¨¨ant¨oa¨ vastaavan alkion rakenteen kuvaava lauseke voi sisa¨lta¨¨a seuraavia rakenteita: a
Kieliopin va¨lisymboli (pienaakkosilla). A
Kieliopin pa¨a¨tesymboli (suuraakkosilla). (a )
Ryhmittely: sama kuin a, mutta k¨asitella¨a¨n yhtena¨ kokonaisuutena. a |b
Vaihtoehtoisuus: rakenne a tai rakenne b. a
Toisto ja valinnaisuus: rakenne a voi toistua nolla tai useampia kertoja. a+
Toisto: rakenne a voi toistua yhden tai useamman kerran. a?
Valinnaisuus: rakenne a voi esiinty¨a nolla tai yksi kertaa.
22Laajennetut yhteydett¨oma¨t kieliopit tunnetaan my¨os laajennettuna Backus­Naur-muotona (EBNF, Extended Backus Naur Form). EBNF-muotoja on monia erilaisia, jotka poikkeavat toisistaan l¨ahinn¨a syntaksiltaan.

87
'a' Merkki tai merkkijono a kuuluu rakenteeseen kirjaimellisesti: esimerkiksi avainsana tai va¨limerkki.
['a' 'b' 'c'] Merkkiluokka: mik¨a tahansa merkeist¨a a, b ja c. Merkkiluokka voi sisa¨lt¨a¨a yhden tai useampia merkkej¨a.
['a'­'b'] Merkkiv¨ali: mika¨ tahansa yksi merkki va¨lill¨a a. . . b.
[[:a :]] Nimetty merkkiluokka: mika¨ tahansa luokkaan a kuuluva merkki. Luokka a on jokin POSIX-tyylinen merkkiluokka, esimerkiksi alpha, joka kattaa kaikki kirjainmerkit, tai digit, joka kattaa kaikki numeromerkit (ks. esim. Friedl 1997: 90).
Ta¨ss¨a ty¨ossa¨ merkkiluokkia ja -v¨alej¨a ka¨yteta¨a¨n vain p¨a¨atesymbolien rakenteen ku-
vaamisessa.

88
C Hinta- ja aikailmausten tiiviin merkkijonomuo-
don kielioppi
Seuraavat yhteydett¨oma¨t kieliopit kuvaavat hinta- ja aikailmausten tiiviin merkkijonomuodon rakenteen ja muodon. Kieliopit ovat ja¨rjestelm¨an ka¨ytt¨am¨a JavaCUPkielioppi l¨ahes sellaisenaan, joten ne ka¨ytt¨av¨at liitteen B kuvaamista laajennetun yhteydett¨oma¨n kieliopin merkinta¨tavoista vain vaihtoehtoja erottelevaa pystyviivaa. Kielioppien symbolien nimet ovat JavaCUP-kieliopissa ka¨ytettyj¨a englanninkielisia¨ nimi¨a, joten ne eroavat luvussa 4.2 ka¨ytetyista¨.
Kielioppien v¨alisymbolien edustamien ilmausten osien tyypit ovat Java-luokkia: joko pakkauksen net.mietta.generation.pricetime.genobjects luokkia tai merkkijonoja java.lang.String.
C.1 Kielioppien p¨a¨atesymbolit ja l¨aht¨osymboli
Kielioppien sisa¨lt¨amien p¨aa¨tesymbolien (muiden kuin yksitt¨aisten merkkien) ma¨a¨ritelm¨at ovat seuraavat:
NUM1 [String] ::= ['0'­'9'] NUM2 [String] ::= ['0'­'9'] ['0'­'9'] NUM4 [String] ::= ['0'­'9'] ['0'­'9'] ['0'­'9'] ['0'­'9'] NUMVAL [String] ::= ['0'­'9']+ ID [String] ::= [[:alpha:]]+
Hinta- ja aikailmausten kielioppien yhteinen la¨hto¨symboli on price time expr. Sita¨ vastaava ylimma¨n tason sa¨¨ant¨o jakaa ilmaukset hinta- ja aikailmauksiin:
price time expr [PriceTimeObject] ::= '$' price expr | '&' time list
C.2 Hintailmausten kielioppi
Hintailmausten tiiviin merkkijonomuodon kielioppi on seuraavanlainen. Koska hintailmauksiin voi sis¨altya¨ aikailmauksia, kielioppi sisa¨lta¨¨a viittauksen seuraavan aliluvun kuvaamaan aikailmausten kielioppiin (va¨lisymboli time list).
price expr [DetailedPriceExpr ] ::= price expr item | price expr ';' price expr item
price expr item [PriceItemGroup] ::= price list curr | '<' time list '>' '(' price list curr ')'

89
price list curr [PriceItemGroup] ::= price list | currency spec price list | specifiers price list | currency spec specifiers price list
currency spec [String] ::= '[' currency ']'
price list [PriceItemList] ::= price item | price list ',' price item
price item [PriceItem] ::= group list ':' price
group list [GroupList] ::= group | group list ',' group
group [Group] ::= group code | group code specifiers
group code [String] ::= ID | '*'
specifiers [SpecifierList] ::= specifier paren | specifiers specifier paren
specifier paren [SpecifierList] ::= '(' specifier list ')'
specifier list [SpecifierList] ::= specifier | specifier list ',' specifier
specifier [Specifier ] ::= specifier type | specifier type decnum range
specifier type [String] ::= ID
price [Price] ::= bare price | bare price specifiers
bare price [Price] ::= abs price | discount | special price
abs price [Price] ::= amount r | amount r currency
amount r [DecNumRange] ::= decnum range
decnum range [DecNumRange] ::= decnum '_' decnum | decnum '_' | '_' decnum | decnum
decnum [DecimalNum] ::= NUMVAL | NUMVAL '.' NUMVAL
currency [String] ::= ID
discount [Price] ::= '-' amount r currency | '-' amount r | '%' amount r
special price [Price] ::= ID

90
C.3 Aikailmausten kielioppi
Aikailmausten tiiviin merkkijonomuodon kielioppi on seuraavanlainen.
time list [DetailedTimeExpr ] ::= time expr | time list ';;' time expr
time expr [TimeItem] ::= full date exc | year exc | year mon exc | mon day exc | mon exc | week exc | wday expr
any sub list [TimeExprList] ::= full date sub list | year mon sub list | mon day sub list | year sub list | mon sub list | '?' day sub list | '"' week sub list | '[' wday sub list ']'
full date exc [TimeItem] ::= full date sub list | full date sub list '\' any sub list
full date sub list [TimeExprList] ::= full date sub | full date sub list ';' full date sub
full date sub [TimeExpr ] ::= full date list wday expr | full date list
full date list [TimeRangeList] ::= full date r | full date list ',' full date r
full date r [DateRange] ::= full date | full date '_' full date | full date '_' | '_' full date | '*' '@' special day
year mon exc [TimeItem] ::= year mon sub list | year mon sub list '\' any sub list
year mon sub list [TimeExprList] ::= year mon sub | year mon sub list ';' year mon sub
year mon sub [TimeExpr ] ::= year mon list day opt expr | year mon list
year mon list [TimeRangeList] ::= year mon r | year mon list ',' year mon r
year mon r [DateRange] ::= year mon | year mon '_' year mon | year mon '_' | '_' year mon | '*' '#' special day

91
mon day exc [TimeItem] ::= mon day sub list | mon day sub list '\' any sub list
mon day sub list [TimeExprList] ::= mon day sub | mon day sub list ';' mon day sub
mon day sub [TimeExpr ] ::= mon day list wday expr | mon day list
mon day list [TimeRangeList] ::= mon day r | mon day list ',' mon day r
mon day r [DateRange] ::= mon day | mon day '_' mon day | mon day '_' | '_' mon day | special day | '*' '$' special day
year exc [TimeItem] ::= year sub list | year sub list '\' any sub list
year sub list [TimeExprList] ::= year sub | year sub list ';' year sub
year sub [TimeExpr ] ::= year list mon opt expr | year list week expr | year list
year list [TimeRangeList] ::= year r | year list ',' year r
year r [DateRange] ::= year | year '_' year | year '_' | '_' year | '*' '%' special day
mon exc [TimeItem] ::= mon sub list | mon sub list '\' any sub list
mon sub list [TimeExprList] ::= mon sub | mon sub list ';' mon sub
mon sub [TimeExpr ] ::= mon list day opt expr | mon list
mon list [TimeRangeList] ::= mon r | mon list ',' mon r
mon r [DateRange] ::= mon | mon '_' mon | mon '_' | '_' mon | '*' '&' special day
day exc [TimeItem] ::= day sub list | day sub list '\' any sub list
day sub list [TimeExprList] ::= day sub | day sub list ';' day sub

92
day sub [TimeExpr ] ::= day list wday expr | day list
day list [TimeRangeList] ::= day r | day list ',' day r
day r [DateRange] ::= day | day '_' day | day '_' | '_' day | '*' '?' special day
mon opt expr [TimeItem] ::= '(' mon exc ')' | '(' mon day exc ')' | wday expr
day opt expr [TimeItem] ::= '(' day exc ')' | wday expr
week expr [TimeItem] ::= '(' week exc ')'
week exc [TimeItem] ::= '"' week sub list | '"' week sub list '\' any sub list
week sub list [TimeExprList] ::= week sub | week sub list ';' week sub
week sub [TimeExpr ] ::= week list wday expr | week list
week list [TimeRangeList] ::= week r | week list ',' week r
week r [WeekRange] ::= week | week '_' week | week '_' | '_' week | special week | '*' '"' special week
wday expr [TimeItem] ::= '[' wday exc ']' | hour expr
wday exc [TimeItem] ::= wday sub list | wday sub list '\' wday sub list | wday sub list '\' '^' any sub list
wday sub list [TimeExprList] ::= wday sub | wday sub list ';' wday sub
wday sub [TimeExpr ] ::= wday list hour expr | wday list
wday list [TimeRangeList] ::= wday r | wday list ',' wday r
wday r [WeekdayRange] ::= wday | wday '_' wday | special wday
hour expr [TimeItem] ::= '{' hour exc '}'

93
hour exc [TimeItem] ::= hour list | hour list '\' hour list
hour list [TimeRangeList] ::= hour range | hour list ',' hour range
hour range [HourRange] ::= hour | hour '_' hour | hour '_' | '_' hour | special hour
full date [DateSpec] ::= NUM4 '-' NUM2 '-' NUM2 year mon [DateSpec] ::= NUM4 '-' NUM2 mon day [DateSpec] ::= NUM2 '-' NUM2 hour [HourSpec] ::= NUM4
| NUM2 year [DateSpec] ::= NUM4 mon [DateSpec] ::= NUM2 day [DateSpec] ::= NUM2 week [WeekSpec] ::= NUM2 wday [WeekdaySpec] ::= NUM1 special day [DateSpec] ::= ID special week [WeekSpec] ::= ID special hour [HourSpec] ::= ID special wday [WeekdaySpec] ::= ID

94
D MIETTA-hankkeen generointis¨a¨ann¨osto¨t
T¨ama¨ liite sis¨alt¨a¨a MIETTA-hankkeen demonstraatioja¨rjestelma¨ss¨a k¨aytetyt hinta-
ja aikailmausten generointis¨aa¨nn¨ot. Sa¨a¨nno¨t on jaettu tiedostojen mukaan kolmeen
osaan: kielesta¨ riippumattomat sa¨¨ann¨ot, suomen sa¨¨anno¨t ja englannin s¨a¨anno¨t.
Tilan s¨a¨asta¨miseksi sa¨a¨nno¨ista¨ on poistettu tiedostojen sisa¨lt¨am¨at kommen-
tit. Sen sijaan sa¨a¨nt¨oja¨ on muuten kommentoitu jonkin verran, l¨ahinna¨ osoitettu
joitakin erityisia¨ sa¨a¨nt¨otyyppeja¨ ja s¨aa¨nt¨ojen sisa¨lt¨ami¨a rakenteita. Ta¨ydet kom-
mentoidut s¨aa¨nn¨ost¨ot ovat mukana liitteen H levykkeella¨.
Tilan s¨a¨asta¨miseksi s¨aa¨nn¨ot on esitetty merkitta¨va¨sti muuta teksti¨a pienem-
m¨alla¨ kirjasimella.
D.1 Kielest¨a riippumattomat s¨a¨anno¨t
Kielesta¨ riippumattomat generointisa¨¨anno¨t ovat tiedostossa GenerationRules.
properties. Tiedosto sis¨alta¨a¨ kaikkien s¨a¨anto¨typpien kielest¨a riippumattomat ole-
tusm¨aa¨rittelyt sek¨a makros¨aa¨nt¨oja¨, jotka helpottavat kielikohtaisten s¨a¨ant¨ojen ma¨a¨-
rittelemista¨. Sa¨¨anto¨tyyppien oletusm¨aa¨rittelyt tuottavat ep¨aluonnollisia ilmauksia,
joten useimmat niista¨ ta¨ytyy korvata kielikohtaisilla s¨aa¨nno¨illa¨.
D.1.1 Hinta- ja aikailmauksille yhteiset s¨a¨anno¨t
Seuraavien makrosa¨a¨nt¨ojen avulla voi ma¨a¨ritell¨a listangenerointisa¨¨anto¨j¨a, jotka ot-
tavat huomioon listan syvyyden.
1 mgen.s.listsep.shallow.middle = ", " 2 mgen.s.listsep.shallow.last = ", " 3 mgen.s.listsep.deep.middle = "; " 4 mgen.s.listsep.deep.last = "; " 5 6 mgen.opt.list.deep.threshold = 2 7 8 mgen.fmt.listitem.shallow.first = "{item}" 9 mgen.fmt.listitem.shallow.middle = \ 10 "{list}"; $(mgen.s.listsep.shallow.middle); "{item}" 11 mgen.fmt.listitem.shallow.last = \ 12 "{list}"; $(mgen.s.listsep.shallow.last); "{item}" 13 14 mgen.fmt.listitem.deep.first = "{item}" 15 mgen.fmt.listitem.deep.middle = \ 16 "{list}"; $(mgen.s.listsep.deep.middle); "{item}" 17 mgen.fmt.listitem.deep.last = \ 18 "{list}"; $(mgen.s.listsep.deep.last); "{item}" 19 20 mgen.fmt.list.basic = @ \ 21 if (item:itemtype == "first") { \ 22 "{item}" \ 23 } elseif (item:itemtype == "middle" || "$(%lastitemsep)" == "") { \ 24 "{list}$(%itemsep){item}" \ 25 } else { \ 26 "{list}$(%lastitemsep){item}" \ 27 }

95
28 29 mgen.fmt.list.generic = @ \ 30 if (item:itemtype == "first") { \ 31 $(%first) \ 32 } elseif (item:itemtype == "middle") { \ 33 $(%middle) \ 34 } else { \ 35 $(%last) \ 36 } 37 38 mgen.fmt.list.shallow = @ \ 39 $(mgen.fmt.list.generic first=$(mgen.fmt.listitem.shallow.first) \ 40 middle=$(mgen.fmt.listitem.shallow.middle) \ 41 last=$(mgen.fmt.listitem.shallow.last)) 42 43 mgen.fmt.list.deep = @ \ 44 $(mgen.fmt.list.generic first=$(mgen.fmt.listitem.deep.first) \ 45 middle=$(mgen.fmt.listitem.deep.middle) \ 46 last=$(mgen.fmt.listitem.deep.last)) 47 48 mgen.fmt.list.adaptable = @ \ 49 if (("$(%deep_threshold)" != "" \ 50 && this:&depth > "$(%deep_threshold)") \ 51 || this:&depth > "$(mgen.opt.list.deep.threshold)") { \ 52 $(mgen.fmt.list.deep) \ 53 } else { \ 54 $(mgen.fmt.list.shallow) \ 55 }
Seuraavat makros¨aa¨nn¨ot tuottavat makros¨aa¨nto¨a¨ kutsuvan sa¨a¨nn¨on nimen
osan.
56 mgen.s.rulename.comp = @ \ 57 child comp; preset comp:%value=rulename:$(%compnum:r1); \ 58 "$(%text)" 59 60 mgen.s.rulename.comp_bare = \ 61 $(mgen.s.rulename.comp compnum="$(%compnum:r1)" text="{comp}")
D.1.2 Hintailmausten generointis¨a¨ann¨ot
Seuraavat s¨aa¨nno¨t ovat hintailmausten rakenteen generointis¨a¨ant¨oja¨.
62 pr.fmt.class.DetailedPriceExpr = {expr} 63 64 pr.fmt.list.PriceItemGroupList = $(mgen.fmt.list.deep) 65 66 pr.fmt.class.PriceItemGroup = @ \ 67 if (specifiers:&value != "") { \ 68 $(mpr.fmt.specifier_descr); " " \ 69 } \ 70 if (currency:&value != "") { \ 71 if (time:&value != "") { \ 72 $(mpr.fmt.class.PriceItemGroup.with_currency_time) \ 73 } else { \ 74 $(mpr.fmt.class.PriceItemGroup.with_currency) \ 75 } \ 76 } else { \ 77 if (time:&value != "") { \ 78 $(mpr.fmt.class.PriceItemGroup.with_time) \ 79 } else { \ 80 $(mpr.fmt.class.PriceItemGroup.bare) \ 81 } \ 82 }

96
Seuraavat makros¨aa¨nno¨t ovat edell¨a olevassa s¨aa¨nno¨ss¨a k¨aytett¨avia¨ paramet-
reja (muotoilus¨aa¨nto¨j¨a). Ne voi ma¨¨aritell¨a uudelleen kielikohtaisesti, jolloin edella¨
olevaa mutkikkaampaa s¨aa¨nt¨oa¨ ei tarvitse m¨aa¨ritell¨a uudelleen.
83 mpr.fmt.currency_descr = "({currency}:)" 84 mpr.fmt.specifier_descr = "({specifiers})" 85 mpr.fmt.class.PriceItemGroup.with_currency = \ 86 $(mpr.fmt.currency_descr); " {pricelist}" 87 mpr.fmt.class.PriceItemGroup.with_time = " {time}: {pricelist}" 88 mpr.fmt.class.PriceItemGroup.with_currency_time = \ 89 $(mpr.fmt.currency_descr); " {time}: {pricelist}" 90 mpr.fmt.class.PriceItemGroup.bare = "{pricelist}"
Seuraavat s¨a¨ann¨ot ovat hintailmausten rakenteen generointisa¨a¨nt¨oja¨.
91 pr.fmt.list.PriceItemList = $(mgen.fmt.list.adaptable) 92 93 pr.fmt.class.PriceItem = @ \ 94 if (groups:&isDefaultGroup == "true") { \ 95 "{price}" \ 96 } else { \ 97 "{groups} {price}" \ 98 } 99 100 pr.fmt.list.GroupList = $(mgen.fmt.list.shallow) 101 102 pr.fmt.class.Group = {group}
Seuraavat s¨aa¨nno¨t ovat hintaryhmien sek¨a hintaryhmien ja hintojen m¨aa¨rittei-
den yleisi¨a generointisa¨a¨nto¨j¨a. Sa¨¨ann¨ot, joiden muuttuvana loppuosana on ?, tuot-
tavat ka¨yt¨anno¨ssa¨ vain ilmauksen sisa¨lt¨ama¨n merkkijonotunnuksen sellaisenaan.
103 pr.s.groupname.? = @ "("; $(mgen.s.rulename.comp_bare); ")" 104 105 pr.fmt.group_specifier.n.? = {range} {group} 106 pr.fmt.group_specifier.?.? = @ \ 107 $(mpr.fmt.specifier.optional_range.complex \ 108 prefix="""{group} (""" range="""{range} """ \ 109 suffix=$(mgen.s.rulename.comp_bare compnum=r2)"; "")""") 110 111 pr.fmt.price_specifier.pl = + {price} 112 pr.fmt.price_specifier.vi = \ 113 $(pr.fmt.specifier.optional_range \ 114 prefix="{price}" range=" (- {range}%)") 115 pr.fmt.price_specifier.pp = {price} pp 116 pr.fmt.price_specifier.? = \ 117 $(mpr.fmt.specifier.optional_range.complex \ 118 prefix="""{price} (""";$(mgen.s.rulename.comp_bare) \ 119 range=""" {range}""" suffix=""")""") 120 121 pr.fmt.list.SpecifierList = $(mgen.fmt.list.shallow) 122 123 pr.fmt.price_specifier.descr.vi = \ 124 $(mpr.fmt.specifier.optional_range prefix="vi" range=" {range}%") 125 pr.fmt.price_specifier.descr.pp = pp 126 pr.fmt.price_specifier.descr.? = \ 127 $(mpr.fmt.specifier.optional_range.complex \ 128 prefix="""(""; "$(mgen.s.rulename.comp_bare) \ 129 range="""{range}""" suffix=""")""")
Seuraavat makrosa¨a¨nno¨t helpottavat sa¨¨anto¨jen ma¨¨arittelya¨ sellaisille ma¨a¨rit-
teille, joihin voi valinnaisesti liitty¨a numeerinen arvo.

97
130 mpr.fmt.specifier.optional_range = @ \ 131 "$(%prefix)"; \ 132 if (range:&value != "") { "$(%range)" } \ 133 "$(%suffix)" 134 135 mpr.fmt.specifier.optional_range.complex = @ \ 136 $(%prefix); \ 137 if (range:&value != "") { $(%range) } \ 138 $(%suffix)
Seuraavat s¨a¨anno¨t muotoilevat hintaryhmien ja hintojen ma¨¨aritteisiin liittyv¨at
numeeriset arvot.
139 pr.fmt.range.specifier.single = $(pr.fmt.range.price.single) 140 pr.fmt.range.specifier.min = $(pr.fmt.range.price.min) 141 pr.fmt.range.specifier.max = $(pr.fmt.range.price.max) 142 pr.fmt.range.specifier.minmax = $(pr.fmt.range.price.minmax) 143 144 pr.fmt.specifier_value.whole = [#,##0] 145 pr.fmt.specifier_value.decimal = [#,##0.0###]
Seuraavat sa¨a¨nn¨ot muotoilevat yksitt¨aisen hinta-arvon.
146 pr.fmt.class.Price = {price} 147 148 pr.fmt.class.PriceAbs = @ \ 149 "{amount}"; \ 150 if (extracurrencies:&value != "") { \ 151 preset extracurrencies:is_extracurrency = "true"; \ 152 " ({extracurrencies})" \ 153 } 154 pr.fmt.class.PriceDiscountAbs = @ \ 155 "-{amount}"; \ 156 if (extracurrencies:&value != "") { \ 157 preset extracurrencies:is_extracurrency = "true"; \ 158 " ({extracurrencies})" \ 159 } 160 pr.fmt.class.PriceDiscountPercent = -{amount}%
Seuraavat sa¨¨ann¨ot ja makrosa¨¨anno¨t liittyv¨at lisa¨valuttojen generoimiseen hin-
tailmauksiin.
161 mpr.fmt.listitem.PriceList.preset = \ 162 preset item:is_extracurrency = this:is_extracurrency; 163 164 pr.fmt.list.PriceList = @ \ 165 $(mgen.fmt.list.generic \ 166 first=$(mpr.fmt.listitem.PriceList.preset);"""{item}""" \ 167 middle=$(mpr.fmt.listitem.PriceList.preset);"""{list}, {item}""" \ 168 last=$(mpr.fmt.listitem.PriceList.preset);"""{list}, {item}""") 169 170 mpr.fmt.range.price.opt_extracurrency = @ \ 171 if (parent:is_extracurrency != "true") { "$(%normal)" } \ 172 else { "$(%extra:$(%normal))" }
Seuraavat sa¨¨anno¨t tuottavat erilaiset hintav¨alit sek¨a erityishinnat.
173 pr.fmt.range.price.single = {value} 174 pr.fmt.range.price.min = @ $(mpr.fmt.range.price.opt_extracurrency \ 175 normal="{min}->" extra="{min}") 176 pr.fmt.range.price.max = @ $(mpr.fmt.range.price.opt_extracurrency \ 177 normal="->{max}" extra="{max}" 178 179 mpr.fmt.range.price.minmax = "{min}-{max}" 180 181 pr.fmt.range.price.minmax = @ \ 182 { preset min:range_first = "true", max:range_last = "true"; \ 183 $(mpr.fmt.range.price.minmax) } 184 185 pr.s.special.fr = 0 186 pr.s.special.in = 0

98
Seuraavat sa¨¨ann¨ot liittyva¨t valuuttoihin: desimaalien ma¨¨ar¨a, lisa¨valuuttojen
muunto- tai vaihtokurssit, valuuttasymbolit sek¨a valuuttainformaation merkitsemi-
nen hintava¨leihin.
187 pr.opt.currency.default_decimals.? = 2 188 pr.opt.currency.default_decimals.itl = 0 189 190 pr.opt.currency.rate.eur.dem = 1.95583 191 pr.opt.currency.rate.eur.fim = 5.94573 192 pr.opt.currency.rate.eur.itl = 1936.27 193 pr.opt.currency.rate.eur.frf = 6.55957 194 195 pr.s.currency.descr.fim = FIM 196 pr.s.currency.descr.itl = ITL 197 pr.s.currency.descr.dem = DEM 198 pr.s.currency.descr.eur = EUR 199 pr.s.currency.descr.usd = USD 200 pr.s.currency.descr.gbp = GBP 201 pr.s.currency.descr.? = @ "("; $(mgen.s.rulename.comp_bare); ")" 202 pr.s.currency.descr = 203 204 pr.s.currency.fim.? = FIM 205 pr.s.currency.itl.? = ITL 206 pr.s.currency.dem.? = DEM 207 pr.s.currency.eur.? = EUR 208 pr.s.currency.usd.? = USD 209 pr.s.currency.gbp.? = GBP 210 pr.s.currency.? = @ "("; $(mgen.s.rulename.comp_bare compnum=L4); ")" 211 212 pr.opt.currency.sticky = true 213 214 pr.opt.currency.mark_style.? = first
Seuraava sa¨¨anto¨ muotoilee valuuttasymbolin hinta-arvon yhteydess¨a.
215 pr.fmt.currency.? = @ \ 216 if ((this:range_last == "true" \ 217 && global:pr.opt.currency.mark_style.? == "first") \ 218 || (this:range_first == "true" \ 219 && global:pr.opt.currency.mark_style.? == "last")) { \ 220 "{amount}" \ 221 } else { \ 222 if (this:&equalsOne != "true" \ 223 && global:inflect_currency == "true") { \ 224 preset currency:%morph = "curr_pl"; \ 225 } \ 226 $(mpr.fmt.currency.common) \ 227 } 228 229 mpr.fmt.currency.common = "{currency} {amount}"
Seuraavat sa¨a¨nn¨ot muotoilevat itse hinta-arvon.
230 pr.fmt.price.whole = [#,##0] 231 pr.fmt.price.decimal = [#,##0.00]
D.1.3 Aikailmausten generointis¨a¨anno¨t
Seuraavat s¨a¨anno¨t ovat aikailmausten rakenteen generointisa¨¨ant¨oj¨a.

99
232 tm.fmt.class.DetailedTimeExpr = {expr} 233 234 tm.fmt.list.TimeItemList = $(mgen.fmt.list.adaptable) 235 236 tm.fmt.class.TimeItem = @ \ 237 if (excepttimes:&value == "") { \ 238 "{basetimes}" \ 239 } else { \ 240 $(mtm.fmt.timeitem.with_except) \ 241 } 242 243 mtm.fmt.timeitem.with_except = "{basetimes}, ! {excepttimes}" 244 245 tm.fmt.list.TimeExprList = $(mgen.fmt.list.adaptable)
Seuraavat sa¨¨anno¨t tuottavat perus- ja poikkeusaikailmaukset. Ne ottavat huo-
mioon erityisesti ilmauksen yhdista¨misen ali-ilmauksiinsa.
246 tm.opt.date.combine_common_parts = true 247 248 mtm.s.sep.time_expr.subexpr = " " 249 mtm.s.sep.time_expr.prefixdate = " " 250 mtm.s.sep.time_expr.suffixdate = " " 251 252 mtm.fmt.time_expr.with_subexpr = \ 253 "{ranges}"; $(mtm.s.sep.time_expr.subexpr); "{subexpr}" 254 255 tm.fmt.class.TimeExpr.? = @ \ 256 if (subexpr:&value != "") { \ 257 $(mtm.fmt.time_expr.with_subexpr) \ 258 } else { \ 259 "{ranges}" \ 260 } 261 262 tm.fmt.class.TimeExpr.date.? = @ \ 263 if (prefixdate:&value != "") { \ 264 "{prefixdate}"; $(mtm.s.sep.time_expr.prefixdate) \ 265 } \ 266 "{ranges}"; \ 267 if (suffixdate:&value != "") { \ 268 $(mtm.s.sep.time_expr.suffixdate); "{suffixdate}" \ 269 } \ 270 if (subexpr:&value != "") { \ 271 $(mtm.s.sep.time_expr.subexpr); "{subexpr}" \ 272 } 273 274 tm.fmt.class.TimeExpr.hour = {ranges} 275 276 tm.fmt.list.TimeRangeList = $(mgen.fmt.list.shallow)
Seuraavat s¨aa¨nn¨ot tuottavat erityyppiset aikava¨li-ilmaukset.
277 tm.fmt.range.date.single = {value} 278 tm.fmt.range.date.min = {min}-> 279 tm.fmt.range.date.max = ->{max} 280 tm.fmt.range.date.minmax = {min} - {max}
Seuraavat valitsins¨a¨anno¨t m¨a¨arittelev¨at p¨aiva¨ma¨a¨r¨aalkioiden j¨arjestyksen ja
viikonpa¨ivien k¨aytta¨misen viikonpa¨iv¨att¨omien p¨aiva¨m¨a¨ar¨ailmausten yhteydess¨a.
281 tm.opt.datestyle = dmy 282 283 tm.opt.date.weekdays = false 284 tm.opt.date.weekdays.with_lists = false 285 tm.opt.date.weekdays.with_ranges = false
Seuraavat muotoilus¨aa¨nno¨t muotoilevat yksitta¨iset p¨aiv¨ama¨a¨ra¨alkiot ja eri-
tyispa¨iva¨ykset.

100
286 tm.fmt.date.fulldate = [d MMMM yyyy] 287 tm.fmt.date.year_mon = [MMMM yyyy] 288 tm.fmt.date.mon_day = [d MMMM] 289 tm.fmt.date.year = [yyyy] 290 tm.fmt.date.mon = [MMMM] 291 tm.fmt.date.day = [d] 292 293 tm.fmt.date.year_day = [d yyyy] 294 295 tm.s.date.special.? = @ "("; $(mgen.s.rulename.comp_bare); ")"
Seuraavat sa¨¨ann¨ot muotoilevat vuodenviikkoilmaukset.
296 tm.fmt.range.week.single = {value} 297 tm.fmt.range.week.min = {min}-> 298 tm.fmt.range.week.max = ->{max} 299 tm.fmt.range.week.minmax = {min} - {max} 300 301 tm.fmt.week = [w] 302 303 tm.s.week.special.? = @ "("; $(mgen.s.rulename.comp_bare); ")"
Seuraavat sa¨a¨nno¨t muotoilevat erilaiset viikonp¨aiva¨ilmaukset.
304 tm.fmt.range.weekday.single = {value} 305 tm.fmt.range.weekday.minmax = {min}-{max} 306 307 tm.fmt.weekday = [EEE] 308 309 tm.s.weekday.special.? = @ "("; $(mgen.s.rulename.comp_bare); ")"
Seuraavat s¨aa¨nn¨ot muotoilevat erilaiset tunti-ilmaukset.
310 tm.fmt.range.hour.single = {value} 311 tm.fmt.range.hour.min = {min}-> 312 tm.fmt.range.hour.max = ->{max} 313 tm.fmt.range.hour.minmax = {min} - {max} 314 315 tm.fmt.hour.hour = [H] 316 tm.fmt.hour.hour_min = [H:mm] 317 318 tm.s.hour.special.? = @ "("; $(mgen.s.rulename.comp_bare); ")"
D.2 Suomen kielen s¨a¨anno¨t
T¨assa¨ esitetyt suomen kielen generointis¨a¨anno¨t ovat tiedostossa GenerationRules_
fi.properties.
D.2.1 Aika- ja hintailmauksille yhteiset s¨a¨ann¨ot
Hinta- ja aikailmausten yhteiset sa¨a¨nno¨t sis¨alt¨ava¨t k¨ayta¨nn¨ossa¨ vain listan alkioiden
erottimien m¨a¨arittelyt.
1 mgen.s.listsep.shallow.middle = ", " 2 mgen.s.listsep.shallow.last = " ja " 3 mgen.s.listsep.deep.middle = "; " 4 mgen.s.listsep.deep.last = "; "

101
D.2.2 Hintailmausten generointis¨a¨ann¨ot
Seuraavat muotoilumakros¨aa¨nn¨ot vaikuttavat kokonaiseen hinta-alkioryhm¨a¨an liit-
tyva¨n valuuttainformaation ja m¨aa¨ritteiden generointiin.
5 mpr.fmt.currency_descr = "(hinnat {currency})" 6 mpr.fmt.specifier_descr = "(hinnat {specifiers})"
Seuraavat merkkijono- ja muotoilusa¨a¨nno¨t tuottavat hintaryhmien, hintaryh-
mien ma¨a¨ritteiden ja hintojen m¨aa¨ritteiden merkkijonotunnuksia vastaavat tekstit.
7 pr.s.groupname.ad = aikuiset 8 pr.s.groupname.pr = @ \ 9 if (this:singular != "") { "henkil¨o" } else { "henkea¨" } 10 pr.s.groupname.ch = @ \ 11 if (this:%morph=="part") { preset this:%morph=""; "lasta" } \ 12 else { "lapset" } 13 pr.s.groupname.pe = el¨akel¨aiset 14 pr.s.groupname.st = opiskelijat 15 pr.s.groupname.gr = ryhm¨at 16 pr.s.groupname.fa = perheet 17 pr.s.groupname.? = \ 18 $(mgen.s.rulename.comp text="(tuntematon ryhm¨akoodi {comp})") 19 20 pr.s.groupname.sg = yhden hengen huone 21 pr.s.groupname.db = kahden hengen huone 22 pr.s.groupname.sgdb = yhden tai kahden hengen huone 23 pr.s.groupname.tr = kolmen hengen huone 24 pr.s.groupname.qu = nelj¨an hengen huone 25 pr.s.groupname.su = sviitti 26 pr.s.groupname.ro = huone 27 pr.s.groupname.cp = telttapaikka 28 pr.s.groupname.bb = aamiaismajoitus 29 pr.s.groupname.fb = t¨aysihoito 30 pr.s.groupname.hb = puolihoito 31 pr.s.groupname.eb = lis¨asa¨nky 32 pr.s.groupname.bdln = vuodevaatteet 33 pr.s.groupname.co = m¨okki 34 pr.s.groupname.ant = lis¨ay¨ot 35 36 pr.s.groupname.bf = aamiainen 37 pr.s.groupname.lu = lounas 38 pr.s.groupname.di = p¨aiv¨allinen 39 pr.s.groupname.sup = iltapala 40 pr.s.groupname.cof = kahvi 41 42 pr.fmt.group_specifier.a.? = {range}-vuotiaat {group} 43 pr.fmt.group_specifier.n.? = @{ preset group:%morph="part"; "{range} {group}" } 44 pr.fmt.group_specifier.n.gr = {range} hengen {group} 45 pr.fmt.group_specifier.n.pr = @ \ 46 if (range:&equalsOne != "false") { preset group:singular = "true" } \ 47 "{range} {group}" 48 pr.fmt.group_specifier.b.? = {group} ({range} s¨anky¨a) 49 pr.fmt.group_specifier.pl.? = plus {group} 50 pr.fmt.group_specifier.su.? = @ \ 51 preset group:%morph = "gen"; \ 52 "{group} lis¨amaksu" 53 pr.fmt.group_specifier.w.? = {group} 54 pr.fmt.group_specifier.and.? = {group} ja 55 pr.fmt.group_specifier.ad.? = {group} {range} aikuista 56 pr.fmt.group_specifier.ch.? = {group} {range} lasta 57 pr.fmt.group_specifier.hb.? = {group} (puolihoito) 58 pr.fmt.group_specifier.br.? = {group} kylpyhuoneen kanssa 59 pr.fmt.group_specifier.nbr.? = {group} ilman kylpyhuonetta 60 pr.fmt.group_specifier.?.? = \ 61 $(mpr.fmt.specifier.optional_range.complex \ 62 prefix="""{group} (tuntematon ryhma¨n m¨a¨arite "";"\ 63 $(mgen.s.rulename.comp_bare compnum=r2) \ 64 range="""; v¨ali {range}""" suffix=""")""") 65

102
66 pr.fmt.price_specifier.pl = plus {price} 67 pr.fmt.price_specifier.pp = {price}/henkil¨o 68 pr.fmt.price_specifier.pap = {price}/aikuinen 69 pr.fmt.price_specifier.ppr = {price}/ohjelma 70 pr.fmt.price_specifier.pg = {price}/ryhm¨a 71 pr.fmt.price_specifier.ph = {price}/tunti 72 pr.fmt.price_specifier.pn = {price}/yo¨ 73 pr.fmt.price_specifier.pd = {price}/pa¨iva¨ 74 pr.fmt.price_specifier.pwe = {price}/viikonloppu 75 pr.fmt.price_specifier.pw = {price}/viikko 76 pr.fmt.price_specifier.pm = {price}/kuukausi 77 pr.fmt.price_specifier.sg = {price} yhden hengen huoneessa 78 pr.fmt.price_specifier.db = {price} kahden hengen huoneessa 79 pr.fmt.price_specifier.su = {price} lis¨amaksu 80 pr.fmt.price_specifier.bri = {price}, aamiainen sis¨altyy hintaan 81 pr.fmt.price_specifier.par = {price} aikuisen huoneessa 82 pr.fmt.price_specifier.vi = \ 83 $(mpr.fmt.specifier.optional_range \ 84 prefix="{price} sis. alv." range=" {range} %") 85 pr.fmt.price_specifier.ve = \ 86 $(mpr.fmt.specifier.optional_range \ 87 prefix="{price} + alv." range=" {range} %") 88 pr.fmt.price_specifier.? = \ 89 $(mpr.fmt.specifier.optional_range.complex \ 90 prefix="""{price} (tuntematon hinnan m¨a¨arite "";"\ 91 $(mgen.s.rulename.comp_bare) \ 92 range="""; v¨ali {range}""" suffix=""")""") 93 94 pr.fmt.price_specifier.descr.pp = henke¨a kohti 95 pr.fmt.price_specifier.descr.pg = ryhm¨a¨a kohti 96 pr.fmt.price_specifier.descr.pn = y¨ot¨a kohti 97 pr.fmt.price_specifier.descr.pd = p¨aiv¨aa¨ kohti 98 pr.fmt.price_specifier.descr.db = kahden hengen huoneessa 99 pr.fmt.price_specifier.descr.sg = yhden hengen huoneessa 100 pr.fmt.price_specifier.descr.vi = \ 101 $(mpr.fmt.specifier.optional_range \ 102 prefix="sis¨alt¨av¨at arvonlis¨averon" range=" {range} %") 103 pr.fmt.price_specifier.descr.ve = \ 104 $(mpr.fmt.specifier.optional_range \ 105 prefix="eiv¨at sis¨alla¨" range=" {range} %" \ 106 suffix=" arvonlis¨averoa") 107 pr.fmt.price_specifier.descr.? = \ 108 $(mpr.fmt.specifier.optional_range.complex \ 109 prefix="""(tuntematon hinnan m¨a¨arite "";"\ 110 $(mgen.s.rulename.comp_bare) \ 111 range="""; v¨ali {range}""" suffix=""")""") 112 113 pr.fmt.range.specifier.min = v¨ahint¨a¨an {min} 114 pr.fmt.range.specifier.max = enint¨a¨an {max} 115 pr.fmt.range.specifier.minmax = {min}-{max}
Seuraavat s¨a¨anno¨t tuottavat yksitta¨isen hinta-arvon.
116 pr.fmt.class.PriceDiscountAbs = {amount} alennus 117 pr.fmt.class.PriceDiscountPercent = {amount} % alennus 118 119 pr.fmt.range.price.min = @ $(mpr.fmt.range.price.opt_extracurrency \ 120 normal="alkaen {min}" extra="{min}") 121 pr.fmt.range.price.max = @ $(mpr.fmt.range.price.opt_extracurrency \ 122 normal="enint¨aa¨n {max}" extra="{max}") 123 124 mpr.fmt.range.price.minmax = "{min}-{max}"
Seuraavat sa¨¨anno¨t generoivat merkkijonotunnuksilla ilmaistut erityishinnat.
125 pr.s.special.fr = ilmaiseksi 126 pr.s.special.afr = ilmainen sis¨a¨anp¨a¨asy 127 pr.s.special.in = sis¨altyy hintaan 128 pr.s.special.agr = sopimuksen mukaan 129 pr.s.special.? = \ 130 $(mgen.s.rulename.comp text="(tuntematon hintakoodi `{comp}'')")

103
Seuraavat sa¨a¨nno¨t tuottavat valuuttatunnukset.
131 pr.s.currency.descr.fim = Suomen markkoina 132 pr.s.currency.descr.itl = Italian liiroina 133 pr.s.currency.descr.dem = Saksan markkoina 134 pr.s.currency.descr.eur = euroina 135 pr.s.currency.descr.usd = Yhdysvaltain dollareina 136 pr.s.currency.descr.gbp = Englannin puntina 137 pr.s.currency.descr.? = \ 138 $(mgen.s.rulename.comp text="(tuntemattomana valuuttana {comp})") 139 140 pr.s.currency.fim.? = mk 141 pr.s.currency.itl.sg = liira 142 pr.s.currency.itl.pl = liiraa 143 pr.s.currency.dem.? = DM 144 pr.s.currency.eur.sg = euro 145 pr.s.currency.eur.pl = euroa 146 pr.s.currency.usd.? = $ 147 pr.s.currency.gbp.? = 148 pr.s.currency.? = $(mgen.s.rulename.comp \ 149 compnum=L4 text="(tuntematon valuutta {comp})") 150 151 pr.opt.currency.mark_style.? = last 152 pr.opt.currency.mark_style.usd = all 153 pr.opt.currency.mark_style.gbp = all 154 155 pr.fmt.currency.usd = {currency}{amount} 156 pr.fmt.currency.gbp = {currency}{amount} 157 158 mpr.fmt.currency.common = "{amount} {currency}"
D.2.3 Aikailmausten generointis¨a¨anno¨t
Seuraavat s¨aa¨nn¨ot liittyv¨at pa¨iva¨m¨aa¨ra¨ilmausten generointiin.
159 mtm.fmt.timeitem.with_except = "{basetimes}, paitsi {excepttimes}" 160 161 tm.fmt.range.date.single = @ \ 162 if ((value:&type == "DateSpecMon" \ 163 || value:&type == "DateSpecYearMon") \ 164 && value:&isSpecial == "") { \ 165 preset value:%morph = "ine"; \ 166 } \ 167 "{value}" 168 169 tm.fmt.range.date.min = {min} alkaen 170 tm.fmt.range.date.max = {max} asti 171 172 mtm.opt.range.mon.style = long 173 174 tm.fmt.range.date.minmax = @ \ 175 preset min:rangefirst = "true", max:rangelast = "true"; \ 176 if (min:&isSpecial == "" \ 177 && (min:&type == "DateSpecYearMon" \ 178 || (min:&type == "DateSpecMon" \ 179 && global:mtm.opt.range.mon.style == "long"))) { \ 180 preset min:%morph = "ill", max:%morph = "ela"; \ 181 "{min} {max}" \ 182 } elseif (min:&type == "DateSpecMon" && min:&isSpecial == "") { \ 183 preset min:%morph = "remove_kuu", max:%morph = "ine"; \ 184 "{min}-{max}" \ 185 } else { \ 186 $(mtm.fmt.range.date.year_add child="min") \ 187 "{min}-{max}" \ 188 } 189 190 tm.opt.date.weekdays = true 191 tm.opt.date.weekdays.with_lists = false

104
192 tm.opt.date.weekdays.with_ranges = false 193 194 tm.fmt.date.fulldate = @ \ 195 if (this:has_weekday != "") { \ 196 if (global:mtm.opt.weekday.style == "long") { \ 197 "[EEEE]na " \ 198 } else { \ 199 "[EE] " \ 200 } \ 201 } \ 202 "[d.M.yyyy]" 203 204 tm.fmt.date.year_mon = @ \ 205 child mon, year; \ 206 preset mon:%value = "[MMMM]", mon:%dateformat = "true", \ 207 mon:%morph = this:%morph, \ 208 year:%value = "[yyyy]", year:%dateformat = "true"; \ 209 "{mon} {year}" 210 211 tm.fmt.date.mon_day = @ \ 212 if (this:has_weekday != "") { \ 213 if (global:mtm.opt.weekday.style == "long") { \ 214 "[EEEE]na " \ 215 } else { \ 216 "[EE] " \ 217 } \ 218 } \ 219 "[d.M.]" 220 221 tm.fmt.date.year = @ \ 222 if (this:rangelast == "") { "v. " } \ 223 "[yyyy]" 224 tm.fmt.date.mon = [MMMM] 225 tm.fmt.date.day = [d.] 226 227 tm.s.date.special.ot = muina aikoina 228 tm.s.date.special.ch = joulun aikaan 229 tm.s.date.special.su = kes¨all¨a 230 tm.s.date.special.ohs = sesongin ulkopuolella 231 tm.s.date.special.? = \ 232 $(mgen.s.rulename.comp text="(tuntematon p¨aiv¨akoodi {comp})")
Seuraavat s¨a¨anno¨t liittyva¨t vuodenviikkojen generointiin.
233 tm.fmt.range.week.single = @ \ 234 if (value:&isSpecial == "") { "viikolla " } "{value}" 235 tm.fmt.range.week.min = viikosta {min} alkaen 236 tm.fmt.range.week.max = viikkoon {max} asti 237 tm.fmt.range.week.minmax = viikkoina {min}-{max} 238 239 tm.fmt.week = [w] 240 241 tm.s.week.special.ot = muina aikoina
Seuraavat s¨a¨ann¨ot liittyva¨t viikonp¨aivien generointiin.
242 mtm.opt.weekday.style = long 243 244 tm.fmt.range.weekday.single = @ \ 245 if (global:mtm.opt.weekday.style == "long" \ 246 && value:&isSpecial == "") { \ 247 preset value:%morph = "isin"; \ 248 } \ 249 "{value}" 250 251 tm.fmt.range.weekday.minmax = @ \ 252 if (global:mtm.opt.weekday.style == "long" \ 253 && min:&isSpecial == "" && max:&isSpecial == "") { \ 254 preset min:%morph = "ill", max:%morph = "ela"; \ 255 "{min} {max}" \ 256 } else { \ 257 "{min}-{max}" \

105
258 } 259 260 tm.fmt.weekday = @ \ 261 if (global:mtm.opt.weekday.style == "long") { \ 262 "[EEEE]" \ 263 } else { \ 264 "[EE]" \ 265 } 266 267 tm.s.weekday.special.ed = joka p¨aiv¨a 268 tm.s.weekday.special.da = p¨aivitt¨ain 269 tm.s.weekday.special.wk = ty¨op¨aivina¨ 270 tm.s.weekday.special.wd = arkip¨aivisin 271 tm.s.weekday.special.we = viikonloppuisin 272 tm.s.weekday.special.ot = muina p¨aivin¨a 273 tm.s.weekday.special.? = \ 274 $(mgen.s.rulename.comp text="(tuntematon viikonp¨aiv¨akoodi {comp})")
Seuraavat s¨a¨anno¨t liittyv¨at tunti-ilmausten generointiin.
275 mtm.fmt.range.hour = @ \ 276 if (this:itemtype == "first") { \ 277 preset figlobal:klo = "true"; \ 278 } \ 279 if ((figlobal:klo != "" || this:itemtype == "first") \ 280 && "$(%klo)" != "" && this:&isSpecial == "") { \ 281 "klo "; \ 282 postset figlobal:klo = "" \ 283 } \ 284 "$(%format)" 285 286 tm.fmt.range.hour.single = $(mtm.fmt.range.hour format="{value}" klo="true") 287 tm.fmt.range.hour.min = $(mtm.fmt.range.hour format="alkaen klo {min}") 288 tm.fmt.range.hour.max = $(mtm.fmt.range.hour format="klo {max} asti") 289 tm.fmt.range.hour.minmax = \ 290 $(mtm.fmt.range.hour format="{min}-{max}" klo="true") 291 292 tm.fmt.hour.hour = [H] 293 tm.fmt.hour.hour_min = [H.mm] 294 295 tm.s.hour.special.cl = suljettu 296 tm.s.hour.special.rq = sopimuksen mukaan 297 tm.s.hour.special.wp = s¨aa¨n salliessa 298 tm.s.hour.special.? = \ 299 $(mgen.s.rulename.comp text="(tuntematon kellonaikakoodi {comp})")
D.3 Englannin kielen s¨a¨anno¨t
Ta¨ssa¨ esitetyt englannin kielen generointisa¨a¨nno¨t ovat tiedostossa
GenerationRules_en.properties. S¨a¨anno¨t pyrkiva¨t tuottamaan ilmauksia,
jotka ovat la¨hinn¨a brittienglantia.
D.3.1 Hinta- ja aikailmauksille yhteiset s¨a¨ann¨ot
Hinta- ja aikailmausten yhteiset s¨aa¨nn¨ot sisa¨lt¨av¨at listan alkioiden erottimien ma¨a¨-
rittelyt sek¨a yleisen monisanaisuusvalitsinsa¨a¨nn¨on ma¨a¨rittelyn.
1 mgen.opt.verbosity = verbose 2 3 mgen.s.listsep.shallow.middle = ",\u0020" 4 mgen.s.listsep.shallow.last = "\u0020and\u0020" 5 mgen.s.listsep.deep.middle = ";\u0020" 6 mgen.s.listsep.deep.last = ";\u0020"

106
D.3.2 Hintailmausten generointis¨a¨anno¨t
Seuraavat muotoilumakrosa¨a¨nno¨t vaikuttavat kokonaiseen hinta-alkioryhm¨aa¨n liit-
tyva¨n valuuttainformaation ja ma¨a¨ritteiden generointiin.
7 mpr.fmt.currency_descr = "(prices in {currency})" 8 mpr.fmt.specifier_descr = "(prices {specifiers})"
Seuraavat merkkijono- ja muotoilus¨a¨anno¨t tuottavat hintaryhmien, hintaryh-
mien m¨a¨aritteiden ja hintojen ma¨¨aritteiden merkkijonotunnuksia vastaavat tekstit.
9 pr.s.groupname.ad = adults 10 pr.s.groupname.pr = person 11 pr.s.groupname.ch = children 12 pr.s.groupname.pe = seniors 13 pr.s.groupname.st = students 14 pr.s.groupname.gr = groups 15 pr.s.groupname.fa = families 16 pr.s.groupname.? = \ 17 $(mgen.s.rulename.comp text="(unknown group code `{comp}'')") 18 19 pr.s.groupname.sg = single 20 pr.s.groupname.db = double 21 pr.s.groupname.sgdb = single or double 22 pr.s.groupname.tr = triple 23 pr.s.groupname.qu = four-bed room 24 pr.s.groupname.su = suite 25 pr.s.groupname.ro = room 26 pr.s.groupname.cp = camp place 27 pr.s.groupname.bb = bed and breakfast 28 pr.s.groupname.fb = full board 29 pr.s.groupname.hb = half board 30 pr.s.groupname.eb = extra bed 31 pr.s.groupname.bdln = bedlinen 32 pr.s.groupname.co = cottage 33 pr.s.groupname.ant = additional nights 34 35 pr.s.groupname.bf = breakfast 36 pr.s.groupname.lu = lunch 37 pr.s.groupname.di = dinner 38 pr.s.groupname.sup = supper 39 pr.s.groupname.cof = coffee 40 41 pr.fmt.group_specifier.a.? = {group} of {range} years old 42 pr.fmt.group_specifier.n.? = {range} {group} 43 pr.fmt.group_specifier.n.gr = {group} of {range} persons 44 pr.fmt.group_specifier.n.pr = @ \ 45 "{range} {group}"; if (range:&equalsOne != "true") { "s" } 46 pr.fmt.group_specifier.b.? = {group} with {range} beds 47 pr.fmt.group_specifier.pl.? = plus {group} 48 pr.fmt.group_specifier.su.? = supplement for {group} 49 pr.fmt.group_specifier.w.? = {group} with 50 pr.fmt.group_specifier.and.? = {group} and 51 pr.fmt.group_specifier.ad.? = {group} {range} adults 52 pr.fmt.group_specifier.ch.? = {group} {range} children 53 pr.fmt.group_specifier.hb.? = {group} half-board 54 pr.fmt.group_specifier.br.? = {group} with bathroom 55 pr.fmt.group_specifier.nbr.? = {group} without bathroom 56 pr.fmt.group_specifier.?.? = \ 57 $(mpr.fmt.specifier.optional_range.complex \ 58 prefix="""{group} (unknown group specifier `"";"\ 59 $(mgen.s.rulename.comp_bare compnum=r2)"; ""''""" \ 60 range=""" with range {range}""" suffix=""")""") 61 62 pr.fmt.price_specifier.pl = plus {price}

107
63 pr.fmt.price_specifier.pp = {price} per person 64 pr.fmt.price_specifier.pap = {price} per adult 65 pr.fmt.price_specifier.ppr = {price} per programme 66 pr.fmt.price_specifier.pg = {price} per group 67 pr.fmt.price_specifier.ph = {price} per hour 68 pr.fmt.price_specifier.pn = {price} per night 69 pr.fmt.price_specifier.pd = {price} per day 70 pr.fmt.price_specifier.pwe = {price} per weekend 71 pr.fmt.price_specifier.pw = {price} per week 72 pr.fmt.price_specifier.pm = {price} per month 73 pr.fmt.price_specifier.sg = {price} in a single room 74 pr.fmt.price_specifier.db = {price} in a double room 75 pr.fmt.price_specifier.su = {price} supplement 76 pr.fmt.price_specifier.bri = {price}, breakfast included 77 pr.fmt.price_specifier.par = {price} in a parent\'s room 78 pr.fmt.price_specifier.vi = \ 79 $(mpr.fmt.specifier.optional_range \ 80 prefix="{price} including VAT" range=" {range}%") 81 pr.fmt.price_specifier.ve = \ 82 $(mpr.fmt.specifier.optional_range \ 83 prefix="{price} + VAT" range=" {range}%") 84 pr.fmt.price_specifier.? = \ 85 $(mpr.fmt.specifier.optional_range.complex \ 86 prefix="""{price} (unknown price specifier `"";"\ 87 $(mgen.s.rulename.comp_bare)"; ""''""" \ 88 range=""" with range {range}""" suffix=""")""") 89 90 pr.fmt.price_specifier.descr.pp = per person 91 pr.fmt.price_specifier.descr.pg = per group 92 pr.fmt.price_specifier.descr.pn = per night 93 pr.fmt.price_specifier.descr.pd = per day 94 pr.fmt.price_specifier.descr.db = in a double room 95 pr.fmt.price_specifier.descr.sg = in a single room 96 pr.fmt.price_specifier.descr.vi = \ 97 $(mpr.fmt.specifier.optional_range \ 98 prefix="including VAT" range=" {range}%") 99 pr.fmt.price_specifier.descr.ve = \ 100 $(mpr.fmt.specifier.optional_range \ 101 prefix="excluding VAT" range=" {range}%") 102 pr.fmt.price_specifier.descr.? = \ 103 $(mpr.fmt.specifier.optional_range.complex \ 104 prefix="""(unknown price specifier `"";"\ 105 $(mgen.s.rulename.comp_bare)"; ""''""" \ 106 range=""" with range {range}""" suffix=""")""") 107 108 pr.fmt.range.specifier.min = at least {min} 109 pr.fmt.range.specifier.max = up to {max} 110 pr.fmt.range.specifier.minmax = @ \ 111 if ("$(mgen.opt.verbosity)" == "verbose") { "{min} to {max}" } \ 112 else { "{min}-{max}" }
Seuraavat sa¨¨ann¨ot tuottavat yksitta¨isen hinta-arvon.
113 # Formatting rules for Price and its subclasses 114 115 pr.fmt.class.PriceDiscountAbs = @ \ 116 "{amount}"; \ 117 if (extracurrencies:&value != "") { \ 118 preset extracurrencies:is_extracurrency = "true"; \ 119 " ({extracurrencies})" \ 120 } \ 121 " discount" 122 pr.fmt.class.PriceDiscountPercent = {amount}% discount 123 124 pr.fmt.range.price.min = @ $(mpr.fmt.range.price.opt_extracurrency \ 125 normal="starting from {min}" extra="{min}") 126 pr.fmt.range.price.max = @ $(mpr.fmt.range.price.opt_extracurrency \ 127 normal="up to {max}" extra="{max}") @ \ 128 129 mpr.fmt.range.price.minmax = \ 130 if ("$(mgen.opt.verbosity)" == "verbose" \ 131 && parent:is_extracurrency != "true") \ 132 { "from {min} to {max}" } \ 133 else { "{min}-{max}" }

108
Seuraavat s¨a¨anno¨t generoivat merkkijonotunnuksilla ilmaistut erityishinnat.
134 pr.s.special.fr = free 135 pr.s.special.afr = admission free 136 pr.s.special.in = included 137 pr.s.special.agr = upon agreement 138 pr.s.special.? = \ 139 $(mgen.s.rulename.comp text="(unknown special price code `{comp}'')")
Seuraavat sa¨¨ann¨ot tuottavat valuuttatunnukset.
140 pr.s.currency.descr.fim = Finnish marks 141 pr.s.currency.descr.itl = Italian liras 142 pr.s.currency.descr.dem = German marks 143 pr.s.currency.descr.eur = euros 144 pr.s.currency.descr.usd = US dollars 145 pr.s.currency.descr.gbp = pounds sterling 146 pr.s.currency.descr.? = \ 147 $(mgen.s.rulename.comp text="(unknown currency `{comp}'')") 148 pr.s.currency.descr = 149 150 pr.s.currency.fim.? = Fim 151 pr.s.currency.itl.sg = lira 152 pr.s.currency.itl.pl = liras 153 pr.s.currency.dem.? = DM 154 pr.s.currency.eur.sg = euro 155 pr.s.currency.eur.pl = euros 156 pr.s.currency.usd.? = $ 157 pr.s.currency.gbp.? = 158 pr.s.currency.? = $(mgen.s.rulename.comp \ 159 compnum=L4 text="(unknown currency `{comp}'')") 160 161 pr.opt.currency.mark_style.? = last 162 pr.opt.currency.mark_style.usd = all 163 pr.opt.currency.mark_style.gbp = all 164 165 pr.fmt.currency.usd = {currency}{amount} 166 pr.fmt.currency.gbp = {currency}{amount} 167 168 mpr.fmt.currency.common = "{amount} {currency}"
D.3.3 Aikailmausten generointis¨a¨ann¨ot
Seuraavat s¨aa¨nn¨ot liittyv¨at pa¨iv¨am¨a¨ara¨ilmausten generointiin.
169 mtm.fmt.timeitem.with_except = "{basetimes}, except {excepttimes}" 170 171 mtm.s.sep.time_expr.subexpr = @ \ 172 if (ranges:&lastItemType == "DateSpecYear") { \ 173 ": " \ 174 } elseif ((subexpr:&firstItemType == "HourSpecHour" \ 175 || subexpr:&firstItemType == "HourSpecHourMin") \ 176 && (ranges:&lastItemType != "WeekdaySpec" \ 177 && ranges:&lastItemType != "WeekdaySpecSpecial")) { \ 178 ", " \ 179 } else { \ 180 " " \ 181 } 182 183 tm.fmt.range.date.min = @ \ 184 "starting "; $(mtm.fmt.date.prep testattr=min:&type); " {min}" 185 tm.fmt.range.date.max = until {max} 186 tm.fmt.range.date.minmax = @ \ 187 if ("$(mgen.opt.verbosity)" == "verbose") { "from {min} to {max}" } \ 188 else { "{min}-{max}" } 189

109
190 mtm.fmt.date.prep = \ 191 if ($(%testattr) == "DateSpecYear" || $(%testattr) == "DateSpecMon" \ 192 || $(%testattr) == "DateSpecYearMon") { \ 193 "in" \ 194 } else { \ 195 "on" \ 196 } 197 198 tm.opt.date.weekdays = true 199 tm.opt.date.weekdays.with_lists = false 200 tm.opt.date.weekdays.with_ranges = false 201 202 tm.fmt.date.fulldate = @ \ 203 $(mtm.fmt.date.weekday_prefix) \ 204 if ("$(mgen.opt.verbosity)" == "verbose") { "[d MMMM yyyy]" } \ 205 else { "[d MMM yyyy]" } 206 tm.fmt.date.year_mon = @ \ 207 if ("$(mgen.opt.verbosity)" == "verbose") { "[MMMM yyyy]" } \ 208 else { "[MMM yyyy]" } 209 tm.fmt.date.mon_day = @ \ 210 $(mtm.fmt.date.weekday_prefix) \ 211 if ("$(mgen.opt.verbosity)" == "verbose") { "[d MMMM]" } \ 212 else { "[d MMM]" } 213 tm.fmt.date.year = [yyyy] 214 tm.fmt.date.mon = @ \ 215 if ("$(mgen.opt.verbosity)" == "verbose") { "[MMMM]" } \ 216 else { "[MMM]" } 217 tm.fmt.date.day = @ \ 218 $(mtm.fmt.date.weekday_prefix) \ 219 "[d]" 220 221 mtm.fmt.date.weekday_prefix = \ 222 if (this:has_weekday != "") { \ 223 if ("$(mgen.opt.verbosity)" == "verbose") { "[EEEE], " } \ 224 else { "[EEE], " } \ 225 } 226 227 tm.s.date.special.ot = at other times 228 tm.s.date.special.ch = at Christmas time 229 tm.s.date.special.su = in summer time 230 tm.s.date.special.ohs = outside high season 231 tm.s.date.special.? = \ 232 $(mgen.s.rulename.comp text="(unknown special date `{comp}'')")
Seuraavat s¨a¨anno¨t liittyv¨at vuodenviikkojen generointiin.
233 tm.fmt.range.week.single = @ if (value:&isSpecial == "") { "week " } "{value}" 234 235 tm.fmt.range.week.min = from week {min} onwards 236 tm.fmt.range.week.max = up to week {max} 237 tm.fmt.range.week.minmax = @ \ 238 "weeks "; \ 239 if ("$(mgen.opt.verbosity)" == "verbose") { "{min} to {max}" } \ 240 else { "{min}-{max}" } 241 242 tm.fmt.week = [w] 243 244 tm.s.week.special.ot = at other times
Seuraavat sa¨a¨nno¨t liittyv¨at viikonp¨aivien generointiin.
245 tm.fmt.range.weekday.single = @ \ 246 if ("$(mgen.opt.verbosity)" == "verbose" && value:&isSpecial == "") \ 247 { "{value}s" } else { "{value}" } 248 249 tm.fmt.range.weekday.minmax = @ \ 250 if ("$(mgen.opt.verbosity)" == "verbose") { "{min} through {max}" } \ 251 else { "{min}-{max}" } 252 253 tm.fmt.weekday = @ \ 254 if ("$(mgen.opt.verbosity)" == "verbose") { "[EEEE]" } \ 255 else { "[EEE]" }

110
256 257 tm.s.weekday.special.ed = every day 258 tm.s.weekday.special.da = daily 259 tm.s.weekday.special.wk = on working days 260 tm.s.weekday.special.wd = weekdays 261 tm.s.weekday.special.we = weekends 262 tm.s.weekday.special.ot = on other days 263 tm.s.weekday.special.? = \ 264 $(mgen.s.rulename.comp text="(unknown special day of week `{comp}'')")
Seuraavat sa¨a¨nno¨t liittyva¨t tunti-ilmausten generointiin.
265 tm.fmt.range.hour.min = starting at {min} 266 tm.fmt.range.hour.max = until {max} 267 268 tm.fmt.range.hour.minmax = @ \ 269 if ((min:&value < "1200" && max:&value < "1200") \ 270 || (min:&value >= "1200" && max:&value >= "1200" \ 271 && max:&value < "2400")) { \ 272 preset min:noampm = "true"; \ 273 } \ 274 if ("$(mgen.opt.verbosity)" == "verbose") { "{min} to {max}" } \ 275 else { "{min}-{max}" } 276 277 mtm.opt.hour.usenoon = true 278 mtm.opt.hour.24hour = false 279 280 mtm.fmt.hour = @ \ 281 if ("$(mtm.opt.hour.usenoon)" == "true" && this:&value == "1200") { \ 282 "noon"; \ 283 } elseif ("$(mtm.opt.hour.usenoon)" == "true" \ 284 && (this:&value == "0000" || this:&value == "2400")) { \ 285 "midnight"; \ 286 } elseif (this:noampm != "" && "$(%format_noampm)" != "") { \ 287 "$(%format_noampm)" \ 288 } else { \ 289 "$(%format)" \ 290 } 291 292 tm.fmt.hour.hour = @ \ 293 if ("$(mtm.opt.hour.24hour)" == "true") { \ 294 $(mtm.fmt.hour format="[H]" format_noampm="[H]") \ 295 } else { \ 296 $(mtm.fmt.hour format="[h a]" format_noampm="[h]") \ 297 } 298 299 tm.fmt.hour.hour_min = @ \ 300 if ("$(mtm.opt.hour.24hour)" == "true") { \ 301 $(mtm.fmt.hour format="[H:mm]" format_noampm="[H:mm]") \ 302 } else { \ 303 $(mtm.fmt.hour format="[h:mm a]" format_noampm="[h:mm]") \ 304 } 305 306 tm.s.ampm.am = am 307 tm.s.ampm.pm = pm 308 309 tm.s.hour.special.cl = closed 310 tm.s.hour.special.rq = by request 311 tm.s.hour.special.wp = weather permitting 312 tm.s.hour.special.? = \ 313 $(mgen.s.rulename.comp text="(unknown special hour `{comp}'')")

111
E Hinta- ja aikailmausten Java-luokkahierarkia
Ta¨ma¨ liite kuvaa hinta- ja aikailmausten Java-luokkahierarkian pa¨a¨piirteissa¨a¨n UML-luokkakaavioina (Unified Modeling Language). Luokkakaaviot noudattavat p¨a¨aosin Eriksson & Penkerin (1989: 65­117) merkint¨atapoja. Luokan toteuttama rajapinta on kuitenkin merkitty luokan tarkentamissuhteena (kuten periytyminen, mutta yhten¨aisen viivan sijaan katkoviiva).23
Luokkahierarkia on jaettu kahteen p¨aa¨osaan: hintailmauksiin (aliluku E.1) ja aikailmauksiin (aliluku E.2). Seka¨ hinta- ett¨a aikailmausten yliluokka on PriceTimeObject. Kaikki luokkakaavioiden sis¨alta¨m¨at luokat kuuluvat pakkaukseen net.mietta.generation.pricetime.genobjects lukuun ottamatta rajapintaluokkaa AttributedObject, joka kuuluu pakkaukseen net.mietta.generation. pricetime.
Luokkakaaviot eiv¨at sis¨alla¨ luokkien sisa¨lta¨mien metodien nimi¨a. Luokkien attribuuteista on lueteltu ne, jotka ovat osa ilmausten rakennetta. Listaluokkia (java.util.List) ei ole esitetty kaavioissa erikseen, vaan ne n¨akyv¨at luokkien v¨alisina¨ yhdest¨a moneen -suhteina. Luokkakaaviot eiva¨t sisa¨lla¨ sellaisia pakkauksen net.mietta.generation.pricetime.genobjects luokkia, joita generointiohjelma ka¨ytta¨a¨ vain sisa¨isesti ja jotka eiva¨t siten varsinaisesti liity hinta- ja aikailmausten Java-esitysmuotoon.
E.1 Hintailmausten luokkahierarkia
Kuvio 5 on hintailmausten Java-esitysmuodon luokkahierarkia UML-luokkakaaviona.
E.2 Aikailmausten luokkahierarkia
Kuvio 6 on aikailmausten Java-esitysmuodon luokkahierarkian pa¨a¨osa UML-luokkakaaviona. Kuviot 7­10 sisa¨lta¨va¨t eri aika-alkiotyyppeihin liittyvien luokkien osakaaviot: kuvio 7 sis¨alt¨a¨a p¨aiv¨aysilmauksiin liittyv¨at luokat (pa¨a¨luokkana DateRange), 8 vuodenviikkoilmauksiin liittyva¨t luokat (pa¨¨aluokkana WeekRange), 9 viikonp¨aiva¨ilmauksiin liittyva¨t luokat (p¨aa¨luokkana WeekdayRange) ja 10 tunti-ilmauksiin liittyv¨at luokat (pa¨¨aluokkana HourRange).
23Kaavioiden sisa¨lt¨ama¨t tekstien ja viivojen pa¨a¨llekka¨isyydet johtuvat pitka¨lti kaavioiden piirt¨amiseen ka¨ytt¨ama¨ni Dia-ohjelman rajoituksista.

112

«interface»
AttributedObject

«interface»
ContainerWithDepth

PriceTimeObject

DetailedPriceExpr
priceItemGroups
PriceItemGroupList
priceItemGroups *
PriceItemGroup
#currency: String
priceItems
PriceItemList
priceItems *
PriceItem

PriceItemGroupWithTime
time
DetailedTimeExpr

groups
GroupList
groups *
Group
#code: String
specifiers specifie*srpsecifiers
SpecifierList

«interface»
Range

specifiers *
Specifier
#name: String

price
Price

PriceNumeric

PriceSpecial
#special: String

PriceAbs
#currency: String

PriceDiscountPercent

PriceDiscountAbs

numRange a?mount
DecNumRange

min, max 1..2
DecimalNum
#wholePart: int #fractPart: int #fractLen: int

DecNumRangeMax DecNumRangeMin DecNumRangeMinMax DecNumRangeSingle

Kuvio 5: Hintailmausten luokkakaavio

113

«interface»
AttributedObject

«interface»
ContainerWithDepth

PriceTimeObject

DetailedTimeExpr

timeItems
TimeItemList

timeItems *
TimeItem
subExpr 0..1
exceptTimes baseTime0s..1
TimeExprList

timeExprs *
TimeExpr TimeRangeList
ranges *
TimeExprPart TimeExprHour

«interface»
Range
ranges «interface»
TimeRange

ranges
HourRange

TimeExprDate TimeExprWeek TimeExprWeekday

WeekdayRange WeekRange DateRange

ranges ranges ranges

TimeExprFullDate TimeExprYear

TimeExprYearMon

Luokkien HourRange, WeekdayRange WeekRange ja DateRange alihierarkiat ovat erillisissä luokkakaavioissa.

TimeExprMon TimeExprMonDay

TimeExprDay

Kuvio 6: Aikailmausten luokkakaavion p¨aa¨osa

114

PriceTimeObject

«interface»

«interface»

CalendarValue RangeComponent

DateRange

DateRangeMin

DateRangeMax

DateRangeMinMax DateRangeSingle

startDate, endDate 1..2
DateSpec
#year: int #mon: int #day: int

DateSpecFullDate DateSpecYearMon DateSpecMonDay

DateSpecYear

DateSpecMon

DateSpecDay

DateSpecSpecial
#special: String

Kuvio 7: Aikailmausten luokkakaavio: p¨aiva¨ma¨a¨riin liittyva¨t luokat

PriceTimeObject

«interface»

«interface»

CalendarValue RangeComponent

WeekRange

WeekRangeMin

WeekRangeMax

startWeek, endWeek 1..2
WeekSpec
#week: int

WeekRangeMinMax

WeekRangeSingle

WeekSpecSpecial

#specialWeek: String

Kuvio 8: Aikailmausten luokkakaavio: vuodenviikkoihin liittyva¨t luokat

PriceTimeObject

«interface»
CalendarValue

«interface»
RangeComponent

WeekdayRange WeekdayRangeMinMax WeekdayRangeSingle

startDay, endDay 1..2
WeekdaySpec
#week: int

WeekdaySpecSpecial
#specialDay: String
Kuvio 9: Aikailmausten luokkakaavio: viikonp¨aiviin liittyv¨at luokat

115

PriceTimeObject

«interface»
CalendarValue

«interface»
RangeComponent

HourRange

startHour,

endHour 1..2

HourSpec

#hour: int

#min: int

HourRangeMin

HourRangeMax

HourSpecHour

HourSpecSpecial
#specialHour: String

HourRangeMinMax HourRangeSingle

HourSpecHourMin

Kuvio 10: Aikailmausten luokkakaavio: tunti-ilmauksiin liittyva¨t luokat

F MIETTA-hanke

116

F.1 Hanke ja sen tavoitteet
MIETTA (Multilingual Information Extraction for Tourism and Travel Assistance, LE4-8343) oli Euroopan komission osittain rahoittama kieliteknologian alaan kuulunut tutkimus- ja kehityshanke, johon Helsingin yliopiston yleisen kielitieteen laitos osallistui. Hankkeen tavoitteena oli tuottaa monikielisen matkailuinformaation WWW-hakupalvelun demonstraatioj¨arjestelma¨ tai prototyyppi.
MIETTA-hanke kesti toukokuusta 1998 marraskuuhun 2001, yhteens¨a 31 kuukautta. Hankkeen laajuus oli 274,8 henkilo¨ty¨okuukautta. Hankkeen kokonaisbudjetti oli 2 527 119 euroa, josta Euroopan komission rahoitusosuus oli 1 825 119 euroa. Hankkeesta on lis¨atietoa WWW-sivulla MIETTA Project (2000a) sek¨a MIETTAdokumenteissa (MIETTA Project 1998, Buitelaar et al. 1999, MIETTA Project 2000b).24
MIETTA-ja¨rjestelm¨an tukemat kielet olivat englanti, saksa, italia, suomi ja ranska. Tuen taso vaihteli kielitta¨in: englanti ja saksa olivat parhaiten tuetut, suomi heikoimmin, paljolti koneka¨¨ann¨osj¨arjestelma¨n puuttumisen takia. Nimesta¨¨an huolimatta MIETTA keskittyi tiedonhakumenetelmien ka¨ytta¨miseen eik¨a informaation erist¨amiseen (information extraction).
Hankkeen tavoitteena oli, etta¨ MIETTA-hakupalvelussa ka¨ytta¨j¨a voisi tehd¨a hakukyselyn omalla kielell¨a¨an ja saada ainakin jonkinlaisen vastauksen (joukon dokumentteja) samalla kielella¨, vaikka informaatio olisikin alunperin olemassa vain jollain toisella kielella¨. T¨am¨an monikielisyyden saavuttamiseksi ja¨rjestelma¨ss¨a k¨aytettiin dokumenttien (WWW-sivujen) automaattista ka¨a¨nta¨mist¨a, dokumenttien luokittelua, kyselyjen k¨aa¨nta¨mista¨ seka¨ kielesta¨ riippumattomassa muodossa olevaa relaatiotietokantaa, jonka tiedoista tuotettiin kuvauksia eri kielill¨a. Dokumenttien k¨a¨anta¨miseen ka¨ytettiin Logos-konek¨aa¨nno¨sja¨rjestelm¨aa¨, jossa ei ole tukea suomen kielelle. Kyselyjen k¨a¨ant¨amista¨ k¨aytetta¨essa¨ ka¨ytt¨aja¨ saa vastauksena dokumentteja, jotka ovat erikielisi¨a kuin kysely.
MIETTA-hankkeessa toteutettu WWW-hakupalveludemonstraatio oli va¨ha¨n aikaa julkisessa ka¨yto¨ssa¨, mutta koska se ja¨i suunniteltua keskener¨aisemm¨aksi eika¨ sen tietoja p¨aivitetty, sita¨ ei mainostettu aiotulla tavalla. Hankkeen ulkopuolisten ihmisten ka¨yta¨nn¨on kokemuksia j¨arjestelma¨sta¨ ei siis juuri ole. Demonstraatioja¨r-
24MIETTA-dokumentit eiv¨at kuitenkaan ole julkisia.

117
jestelma¨¨a ei ainakaan marraskuuhun 2001 mennessa¨ ole kehitetty eteenpa¨in, kohti kaupallista palvelua tai tuotetta.
F.2 Hankkeen osapuolet
MIETTA-hankkeen osapuolet olivat Italiasta, Saksasta ja Suomesta. Hankkeeseen osallistui k¨aytt¨aj¨aosapuolina julkishallinnollisia matkailuinformaation tuottajia ja teknisina¨ osapuolina kieliteknologiaan ja tietojenka¨sittelyyn erikoistuneita yrityksia¨ ja tutkimuslaitoksia. Hankkeen yleiskoordinaattori oli Rooman kaupunki ja tekninen koordinaattori DFKI.
Hankkeen ka¨ytta¨j¨aosapuolet olivat
 Rooman kaupunki, Eurolab (Italia); koordinaattori  Turun kaupunki, Turku TouRing (Suomi)  Saarlandin osavaltio, osavaltion matkailukeskus (Saksa).
Hankkeen tekniset osapuolet olivat
 DFKI (Deutsches Forschugszentrum fu¨r Ku¨nstliche Intelligenz) GmbH (Saksa); tekninen koordinaattori
 CELI s.r.l. (Italia)  Helsingin yliopisto, yleisen kielitieteen laitos (Suomi)  Politecnico di Torino (Italia)  UNIDATA S.p.A. (Italia).
Teknisista¨ osapuolista DFKI, CELI ja Helsingin yliopisto edustivat kieliteknologista osaamista, Politecnico di Torino l¨ahinn¨a tietokantaosaamista ja UNIDATA Internet- ja laitteisto-osaamista.

118
G JTg2 Light -generointij¨arjestelm¨a
MIETTA-hankkeessa ka¨ytetty JTg2 Light -generointija¨rjestelm¨a (jatkossa JTg2) on CELI s.r.l:n tekem¨a osittainen Java-toteutus DFKI:n Common LISP -pohjaisesta TG/2-j¨arjestelm¨asta¨ (Busemann sa, 1996, 1998). JTg2:n k¨aytta¨m¨at syo¨teja generointisa¨a¨nto¨muoto eiva¨t ole yhteensopivia TG/2:n kanssa. T¨ama¨ JTg2:n kuvaus perustuu MIETTA-hankkeessa j¨arjestelm¨ast¨a saamaani dokumentaatioon (CELI 1998); ja¨rjestelma¨st¨a ei ole saatavilla julkista informaatiota.
MIETTA-hankkeessa ka¨ytettiin JTg2 Lightin versiota 1.0 Beta 1. Ta¨m¨a versio ja¨i tiett¨av¨asti ja¨rjestelm¨an viimeiseksi versioksi, silla¨ CELI ei en¨aa¨ kehit¨a j¨arjestelma¨a¨. Sen sijaan DFKI on tekem¨ass¨a kattavampaa TG/2:n Java-toteutusta.
JTg2 on matalan tason generointij¨arjestelma¨ (shallow generation system) kuten TG/2:kin. Se on tarkoitettu lyhyiden, suhteellisten yksinkertaisten tekstien generointiin eika¨ se sisa¨ll¨a mutkikkaampien generointitehta¨vien vaatimia suunnitteluja pa¨a¨ttelykomponenttia. Generointi voi yksinkertaisimmillaan olla lomakepohjaista (template-based), jolloin generointis¨a¨ant¨o tai joukko generointis¨aa¨nt¨oj¨a on tavallaan lomake, joka sis¨alt¨aa¨ vakiotekstej¨a ja vaihtelevia kentti¨a, jotka generointija¨rjestelm¨a t¨aytt¨a¨a generoinnin syo¨tteesta¨. Generointis¨aa¨nn¨oill¨a voi my¨os kuvata yhteydett¨om¨an kieliopin, jolloin generoinnin tulos voi vaihdella enemm¨an sy¨otteen mukaan. Generointis¨aa¨nt¨oihin voi liitt¨a¨a morfologisia rajoitteita, joita voi v¨alitta¨a¨ s¨a¨ann¨ost¨a toiseen, mika¨ mahdollistaa esimerkiksi kongruenssin kuvaamisen.
JTg2 saa generoinnin syo¨tteeksi Java-olioita. MIETTA-matkailutietokannan sis¨alta¨m¨at tietueet ta¨ytyy siis muuntaa sopiviksi Java-olioiksi ennen generoinnin ka¨ytta¨mist¨a. Sy¨oteolioiden t¨aytyy noudattaa ma¨a¨ra¨ttya¨ Java-rajapintaa, mutta muuten ja¨rjestelm¨a ei rajoita niiden muotoa. Sy¨oteolio voi myo¨s sisa¨lta¨a¨ toisia olioita. Sy¨oteoliot voikin mielta¨a¨ tyypitetyiksi monitasoisiksi piirrerakenteiksi.
JTg2:lla on mahdollista generoida epa¨deterministisesti eli tuottaa useita vaihtoehtoisia generointituloksia, jos generointisa¨a¨nn¨ot sen sallivat. Eri vaihtoehtojen ja¨rjestyst¨a voi s¨a¨annella¨ sa¨a¨nto¨ihin liitetta¨vill¨a painoarvoilla.
JTg2:een voi liitt¨a¨a ulkoisia moduuleja. Morfologisella generaattorilla voi voi tuottaa sanalle taivutusmuodon morfologisten rajoitteiden perusteella. Muilla moduuleilla voi testata sy¨oterakennetta, poimia sy¨oterakenteesta halutun osan tai hakea tietoa ulkoisista informaatiol¨ahteista¨, esimerkiksi toisesta tietokannasta.
JTg2 hy¨odynta¨¨a Javan lokalisointiominaisuuksia: vakiomerkkijonon voi generoida myo¨s lokalisoituna siten, etta¨ j¨arjestelm¨a hakee generointis¨a¨ann¨on mainitse-

119
man avaimen perusteella tuotettavan merkkijonon ominaisuustiedostosta, joka riippuu ka¨ytetyst¨a kieli- ja maa-asetuksesta (locale).

120
H Ohjelmakoodilevyke
T¨aha¨n liitteeseen kuuluva levyke sisa¨lta¨a¨ hinta- ja aikailmausten lokalisointija¨rjestelm¨an version 0.06.02. Ja¨rjestelm¨a on lisensoitu LGPL-lisenssilla¨ (GNU Lesser General Public License; Free Software Foundation 1999). J¨arjestelm¨an tuoreimman version voi pyyta¨a¨ s¨ahko¨postitse osoitteesta jyrki.niemi@iki.fi.
Levyke sisa¨lt¨a¨a ja¨rjestelma¨n Java-ohjelmakooditiedostot ja niista¨ k¨a¨annetyt luokkatiedostot. Ohjelmakoodi kattaa hinta- ja aikailmausten Java-esitysmuodon, generointiohjelmakomponentin ja ilmausten muunnosohjelman. Levyke sis¨alta¨a¨ myo¨s liitteen D kuvaamat MIETTA-hankkeessa toteutetut generointis¨aa¨nn¨osto¨t, tiiviiss¨a merkkijonomuodossa olevia esimerkki-ilmauksia seka¨ lokalisointij¨arjestelm¨an HTML-muotoisen ka¨ytt¨oohjeen (Niemi 2001). Lisa¨ksi levyke sisa¨lt¨a¨a lokalisointij¨arjestelma¨n tarvitsemat ulkopuoliset Java-kirjastot.
Levykkeell¨a on MS-DOS-tiedostoj¨arjestelm¨a, ja tiedostoilla on VFAT-tyyliset pitk¨at nimet. Lokalisointij¨arjestelma¨ on pakattu kahdeksi ZIP-arkistotiedostoksi:
gen-detailed-0_06_02.zip (lyhyt nimi GEN-DE~1.ZIP) Varsinaisen lokalisointij¨arjestelma¨n Java-ohjelmakoodi, generointis¨aa¨nno¨st¨ot, esimerkkitiedostot ja k¨aytt¨oohje.
gen-detailed-lib.zip (lyhyt nimi GEN-DE~2.ZIP) Lokalisointij¨arjestelma¨n tarvitsemat ulkopuoliset Java-kirjastot: Java CUP -j¨asentimen ajonaikainen kirjasto ja Jakarta ORO -kirjasto.
Kumpikin ZIP-tiedosto kannattaa purkaa samaan hakemistoon. ZIP-tiedostojen purkamisen j¨alkeen lokalisointija¨rjestelm¨an ylin hakemisto
gen-det sisa¨lta¨a¨ seuraavat tiedostot ja hakemistot:
COPYING J¨arjestelm¨an lisenssiehdot (GNU Lesser General Public License).
NEWS Lokalisointij¨arjestelma¨¨a ja siihen tehtyja¨ muutoksia koskevia uutisia.
README Tiedosto, joka sisa¨lt¨a¨a tarkempaa tietoa lokalisointija¨rjestelma¨a¨n kuuluvista osista, tiedostoista ja niiden k¨ayto¨sta¨.
classes/. . . Lokalisointij¨arjestelm¨an Java-la¨hdekooditiedostot ja niist¨a ka¨a¨nnetyt luokkatiedostot.
doc/ Lokalisointija¨rjestelm¨an dokumentaatio (ka¨ytt¨oohje) HTML-muodossa ja sen DocBook XML -muotoiset la¨hdetiedostot.
lib/. . . ZIP-tiedoston gen-detailed-lib.zip sis¨alta¨ma¨t ulkopuoliset kirjastot.
testdata/ Generointiohjelman ja ilmausten muuntimen testaamiseen tarkoitettuja syo¨tetiedostoja.

121
*.y YACC/Bison-kieliopit hinta- ja aikailmausten tiiviille merkkijonomuodolle, generointis¨a¨anno¨ille ja ilmausten muuntimen syo¨temuodolle. Tiedosto README ja dokumenttitiedosto doc/detailed-generation-doc.
html sis¨alt¨ava¨t generointiohjelman ja ilmausten muuntimen ka¨ytt¨oohjeet.

