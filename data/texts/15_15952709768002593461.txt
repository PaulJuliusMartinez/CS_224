Technical Report/TR-186-2-98-23 (22 August 1998)

Stochastic Methods in Global Illumination State of the Art Report
La´szlo´ Szirmay-Kalos Department of Control Engineering and Information Technology, Technical University of Budapest
Budapest, Muegyetem rkp. 11, H-1111, HUNGARY szirmay@fsz.bme.hu

Abstract This paper presents a state of the art report of those global illumination algorithms which involve Monte-Carlo or quasi-Monte Carlo techniques. First it surveys the basic tasks of global illumination, which can be formulated as the solution of either the rendering or the potential equation, then reviews the basic solution techniques, including inversion, expansion and iteration. The paper explains why stochastic approaches are good to solve these integral equations and highlights what kind of fundamental choices we have when designing such an algorithm. It compares, for example, finite-element and continuous methods, pure Monte-Carlo and quasi-Monte Carlo techniques, different versions of importance sampling, Russian roulette, local and global visibility algorithms, etc. Then, a lot of methods are reviewed in a unified framework, that also allows to make comparisons.

Keywords: Rendering equation, potential equation, MonteCarlo and quasi-Monte Carlo quadratures, finiteelement techniques, radiosity, importance sampling, Russian roulette, shooting and gathering random walks, stochastic iteration, Metropolis sampling, distributed ray-tracing, path tracing, photon tracing, light tracing, bi-directional path tracing, photon-map, instant radiosity, global ray-bundle tracing, stochastic ray-radiosity, transillumination method, first-shot, error and complexity
1. Introduction
Generally, the global illumination problem is a quadruple28
hS; fr(!0; ~x; !); Le(~x; !); We(~x; !)i WsawuthrdfeiarfcefeeSrpenoitisndttishr,eeLcgteieooinsmstehatenrdyemofitteseudisrfraaacdceiosal,nlecfcertiooisfnstouhfrefmaBceeRaDspuoFriinnotgsf
functions.
Global illumination algorithms aim at the modeling and simulation of multiple light-surface interactions to find out the power emitted by the surfaces and landing at the measuring devices after some reflections.
A light-surface interaction can be formulated by the ren-
c The Institute of Computer Graphics, Vienna University of Technology.

dering equation or alternatively by its adjoint equation, called the potential equation.

[WThme re2ndserrin1g]

equation26 expresses the radiance L(~x; !) of a surface point ~x in direction !, and has

the following form:

L = Le + T L:

(1)

If only direct contribution is considered, then L = Le. The Tlight-surface interaction is described by integral operator ,
which has the following form Z
(T L)(~x; !) = L(h(~x; !0); !0)fr(!0; ~x; !)cos 0 d!0




where

L(~x;

!)

and

Le(~x;

!)

are

the

radiance

and

(2) emission

totshhpfeahttehbrieise-d,svuihrirse(fic~xabtc;lieeo!ni0fna)rolipmrsoetflihnpeetoci~xtvniiotasnit~xb/driealiirftterydaccitfrituoeinocncnti!toifoun, nn
!cdt0iei,sofifntnhr,ie(na!ngdd0i;trhe~xec0;ti!pisoo)tnihnaieslt

an!gl0e(fibegtuwreee1n).the surface normal and the incoming direction

ttheneTtiehafelfeWpcott(oe~ynf;te!iam0l)ietatqsinuagaftuuionnndit4a2pm, ooewnnettarhlefmrooemtahseu~yrrehin,awnddhi,riecuchsteieosxnpthr!ee0spsooens-

2 Szirmay-Kalos / Stochastic Methods in Global Illumination

h(x, - ')

 L(x, )

L(h(x, - '), ') '' '
x

Figure 1: Geometry of the rendering equation

y

 W(h(y, '),  )

W(y,  ) '' 
h(y, ')

Figure 2: Geometry of the potential equation

a measuring device having sensitivity W e(~y; !0) (for ex-

ample, this device can measure the power going through a

single pixel of the image, or leaving a surface element at

aWny(y~d;ir!e0c)tio=n).WIfeo(ny~l;y!d0i)r.ecTtoctoankteribinuttoioancicsocuonntsliidgehrtedre, fltheecn-

tions, we can establish the potential equation

W = W e + T 0W:

(3)

TIn this equation integral operator 0 -- which is the adjoint Tof -- describes the potential transport

(T 0W )(~y; !0) =

Z
W (h(y~; !0); !)  fr(!0; h(y~; !0); !)  cos  d!; (4)


where  is the angle between the surface normal and the outgoing direction !.

According to the definition of the radiance

L(y~; !) =

d(y~; !) dy~ d! cos



;

the power detected by a measuring device can be computed

by the measuring function from the radiance ZZ
d(y~; !)  We(y~; !) =
S

ZZ
L(~y; !) cos   W e(y~; !) dy~ d! = ML; (5)
S

Mwhere is the radiance measurement operator. Having introduced the scalar product hu; vi
ZZ
hu; vi = u(y~; !)  v(y~; !) d~y d!;
S

and the cosine weighted scalar product hu; vicos hu; vicos = hu  cos ; vi = hu; v  cos i;
we can obtain an alternative form of the measurement operator
ML = hL; W eicos:

A simple measurement function for a pinhole camera is

W

e(y~;

!)

=

(! cos

!f ) 



(h(~y;

!))

where !f is the focal point and cos  is the cosine angle

between the normal of the visible surface and the viewing

direction. With this measurement function, the power going

through a pixel of area P can be obtained using equation (5):

Z

L(h(p~; !p~); !p~)  (p~) dp~;

(6)

SP
where SP is the support of . SP is usually, but not neces-

sarily, equal to the pixel surface.

Alternatively to the radiance, the power arriving at the measuring device can also be computed from the potential:
ZZ
de(~y; !0)  W (~y; !0) =
S

ZZ
W (y~; !0)  Le(~y; !0)  cos  d~y d!0 = M0W; (7)
S

Mwhere 0 is the potential measuring operator. Note that un-
like the radiance measuring operator, the potential measuring operator integrates on the lightsource.

This measuring operator can also be given in a scalar

product form

M0W = hLe; W icos:

(8)

Since the rendering or the potential equation contain the unknown radiance function both inside and outside the integral, in order to express the solution, this coupling should

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

3

be resolved. The possible solution techniques fall into one of the following three categories: inversion, expansion and iteration.

TOperator represents light-surface interaction, thus each

Tof
the

its application light transport

(goernaelrtaetrensatiavehlyighe0r-rbeopurensceentessptiomteantetiaol-f

surface interaction). For physically plausible optical material

models, a reflection or refraction always decreases the to-

tal energy, thus the integral operator is always a contraction.

However, when the transport is evaluated numerically, com-

putation errors may pose instability problems if the scene is

highly reflective. As we shall see, expansion and iteration

exploit the contractive property of the transport operator, but

inversion does not.

1.1. Inversion
Inversion groups the terms that contain the unknown function on the same side of the equation and applies formally an inversion operation:
(1 T )L = Le =) L = (1 T ) 1Le: (9)

Thus the measured power is
ML = M(1 T ) 1Le:

(10)

THowever, since is infinite dimensional, it cannot be in-
verted in closed form. Thus it should be approximated by a finite dimensional mapping, that is usually given as a matrix. This kind of approximation is provided by finite-element techniques that project the problem into a finite dimensional function space, and approximate the solution here. This projection converts the original integral equation into a system of linear equations, which can be inverted, for example, by Gaussian elimination method. This approach was used in early radiosity methods, but have been ruled out due to the cubic time complexity and the numerical instability of the Gaussian elimination.
Inversion has a unique property that is missing in the other two methods. Its efficiency does not depend on the contractivity of the integral operator, neither does it even require the integral operator to be a contraction.
Since no stochastic alternative has been proposed yet for the deterministic inversion, we do not consider this option any further in this paper.

1.2. Expansion
Expansion techniques eliminate the coupling by obtaining the solution in the form of an infinite Neumann series.

1.2.1. Expansion of the rendering equation: gathering

walks

TSubstituting the right side's L by Le + L, which is obviously L according to the equation, we get:

L = Le + T L = Le + T (Le + T L) = Le + T Le + T 2L:

(11)
Repeating this step n times, the original equation can be ex-

panded into a Neumann series:

L = Xn T iLe + T n+1L:

(12)

i=0
Ilifmni!nt1egTranl +1oLpe=ra0to,rthusT is a L = X1 T iLe:

contraction,

then (13)

i=0

The measured power is
ML = X1 MT iLe:
i=0

(14)

MT MT MTmeTahn1einLtgeeracmsoswmoeeflsl:tfhroismina0fisLninietge=leNrLeeueflmeccoatnmionenss,efrrioems 2htLhaveeeefmrionimtsusiittowivnoe,
reflections, etc.

In order to understand how this can be used to determine

MTthe power going
structure of

ithLreouagsha

a single pixel, let us examine the single multi-dimensional integral

for the i = 2 case:

M(T 2Le) =

ZZZ
w0(p~)  w1(~x1)  w2(~x2)  Le(~x3; !20 ) d!20 d!10 dp~:

SP 
10 
02

(15)

where

~x1 = h(p~; !p~);

~x2 = h(~x1; ~x3 = h(~x2;

!!2100 ));= h(h(~x1;

!10 );

!20 );

(16)

and the weights are

w0 = (p~);

w1 w2

= =

fr fr

((!!2100 ;;

~x1; ~x2;

!p~) !10 )

 

cos cos

2100 :;

(17)

Thus to evaluate the integrand at point (p~; !10 ; !20 ), the fol-
lowing algorithm must be executed:

1.

Point ~x1 = h(p~; p~ of the pixel from

!p~) that is visible through the point
the eye should be found. This can be

done by sending a ray from the eye into the direction of
p~ and identifying the surface that is first intersected.

c Institute of Computer Graphics 1998

4 Szirmay-Kalos / Stochastic Methods in Global Illumination

2. iimSnsutionrvfeiadsdcii.breeTlpechotiifiosrnontcm~xan2!~xb=101eadhanto(d~nxdei1idr;beeynctt!isiofe10ynn)idn--ign!gtthh10aeant--soiustrhtfmhearecuerspatotyhibnafettrowidsmehfitie~xrcrsh1-t

3.

ipSnoutiernfratscevecitspeidbo.lientf~xro3m=~x2h(aht (d~xir1e;ctio!n10 ); !2!0 20--) --is

that is the identified.

4. ToTfhh!e!is20e20.mmiseiasonsbisotatnhinienectdeonnasntiidntyuisoatfmiothuneltosifpultrihfeaedcreawyaittth~xra3tchiienngcthoaestiddniierreetccettriimoonns

and the BRDFs of the two reflections.

x2

integrand is requires the

needed in estimation

the sample points of the integral of

p~. This,
variable

!in10

turn,
at p~,

tweghricahl orfecvuarrsiaivbelely!n20eaetd(sp~a;g!a10in).the approximation of the in-

If the same number -- say m -- of sample points are used

for each integral
wboiullnucsees,mmp3oifnotrs

quadrature, then for the 1-bounce

trthanissfreerc, umrs2ivfeoratphperotwacoh-

the three-bounces, etc. This kind of sub-

division of paths is called splitting2. Splitting becomes pro-

hibitive for high-order reflections and is not even worth do-

ing because of the contractive property of the integral oper-

ator. Due to the contraction, the contribution of higher-order

bounces is less thus it is not very wise to compute them as

precisely as low-order bounces.

2 2'

p L(x, p) p

1'
1 x1

x3

MTFigure 3: The integrand of 2Le is a two-step gathering
walk

This algorithm can easily be generalized for arbitrary
anthtue!mv20bi,seeirbtcloe.fuprnoetiflinlet!catn0ito.dnTisrh.eecAteiomrnaiys!si10isotnehmeinnatnefrnaotsemitdytrhaeetctfuhoreusinevdnedlsyuorfffraothcmee
walk is read and multiplied by the BRDFs and the cosine
terms of the stages of the walk.

p~; !T1h0 ;e!se20 ;w:a:l:k;s!pn0ro. vide the value of the integrand at "point" Note that a single walk of length n can be used to esti-
mate the 1-bounce, 2-bounce, etc. n-bounce transfer simul-
taneously, if the emission is transferred not only from the
last visited point but from all visited points.

The presented walking technique starts at the eye and gathers the illumination encountered during the walk. The gathered illumination is attenuated according to the cosine weighted BRDFs of the path.

So far, we have examined the structure of the terms of

the Neumann series as a single multi-dimensional integral.

MTAatiltnegrnmaatinvyeldyi,rietcctiaonnaallsiontbeegrcaolns.siEdxearemdinaisnrgecursiv2eLlye

evaluagain:

22

33

ZZZ
w0  46 w1  46 w2  Le d!20 57 d!10 57 dp~: (18)

SP 
10 
02

In order to estimate the outer integral of variable p~, the

1.2.2. Expansion of the potential equation: shooting walks

The potential equation can also be expanded into a Neumann

series similarly to the rendering equation.

W = X1 T 0iW e;

(19)

i=0

which results in the following measured power
M0W = X1 M0T 0iW e:
i=0

(20)

M0W e M T M Temi0ssi0o2Wn.

eisist0haef0tWeprowteweiosr

measured by the the power after reflections, etc.

device from direct a single reflection,

M TLet us again consider the structure of 0 02W e:

M0T 02W e =

ZZZZ
Le(~y1; !1)w0w1w2W e(y~2; !p~) d!3d!2d!1dy~1 =

S 
1 
2 
3

ZZZ
Le(~y1; !1)  w0(y~1)  w1(~y2)  w2(~y3) d!2d!1d~y1:

S 
 
1
(21)
if ~y3 is visible though the given pixel and 0 otherwise, where

~y2 = h(~y1; !1); ~y3 = h(y~2; !2) = h(h(y~1; !1); !2)

(22)

and the weights are
w0 = cos 1; w1 = fr(!1; ~y2; !2)  cos 2; w2 = fr(!2; ~y3; !p~)  (p~):

(23)

Thus to evaluate the integrand at point (~y1; !1; !2), the
following algorithm must be executed:

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

5

1. The cosine weighted emission of point y~1 in direction !1 is computed. Surface point ~y2 = h(y~1; !1) -- that is the point which is visible from y~1 at direction !1 -- must
be determined. This can be done by sending a ray from
y~1 into direction !1 and identifying the surface that is
first intersected. This point "receives" the computed co-
sine weighted emission.
2. Surface point y~3 = h(h(~y1; !1); !2) -- that is the point visible from ~y2 at direction !2 -- is identified. This means the continuation of the ray tracing at direction !2.
The emission is weighted again by the local BRDF and
the cosine of the normal and the outgoing direction.
3. It is determined whether or not this point ~y3 is visible
from the eye, and through which pixel. Then the trans-
ferred emission is weighted again by only the local BRDF
and the contribution to the pixel is incremented by the
weighted emission.

y 2

2

(dy1, d 1 ) p
p 3

2

y3

1 1
y1

TFigure 4: The integrand of 02W e is a two-step shooting
walk

On the other hand, expansion methods also have an important advantage. Namely, they do not require temporary representations of the complete radiance function, thus do not necessitate finite-element approximations. Consequently, these algorithms can work with the original geometry without tessellating the surfaces to planar polygons.
Expansion techniques generate random walks independently. It can be an advantage, since these algorithms can be suitable for parallel computing. However, it also means that these methods "forget" the previous history of walks, and they cannot reuse the visibility information gathered when computing the previous walks, thus they are not as fast as they could be.

1.3. Iteration

Iteration techniques realize that the solution of integral equa-

tion (1) is the fixed point of the following iteration scheme

Ln = Le + T Ln 1;

(24)

Tthus if operator is a contraction, then this scheme will converge to the solution from any initial function L0.

The measured power can be obtained as a limiting value

ML = nl!im1 MLn;

(25)

In order to store the approximating functions Ln, usu-
ally finite-element techniques are applied, as for example, in diffuse radiosity57, or in non-diffuse radiosity using partitioned hemisphere21, directional distributions59 or illumination networks8.

This type of walk, called shooting, starts at a known point
~y1 of a lightsource and simulates the photon reflection for a
few times and finally arrives at a pixel whose radiance this walk contributes to.
Note that in gathering walks the BRDF is multiplied with the cosine of the angle between the normal and the incoming direction, while in shooting walks with the cosine of the angle between the normal and the outgoing direction. On the other hand, in gathering walks, the cosine angle of the emitting surface is not used, while in shooting walks the cosine angle of the last visible surface is neglected.
1.2.3. Merits and disadvantages of expansion methods
The main problem of expansion techniques is that they require the evaluation of very high dimensional integrals that appear as terms in the infinite series. Practical implementations usually truncate the infinite Neumann series, which introduces some bias, or stop the walks randomly, which significantly reduces the samples of higher order interreflections. These can result in visible artifacts for highly reflective scenes.

There are two critical problems here. On the one hand,
since the domain of Ln 4 dimensional, an accurate finite-
element approximation usually requires very many basis functions, which, in turn, need a lot of storage space. Although, hierarchical methods19; 4, wavelet or multiresolution methods11; 51 and clustering58; 10; 61 can help, the memory requirements are still prohibitive for complex scenes. This problem is less painful for the diffuse case since here the domain of the radiance is only 2 dimensional.
On the other hand, when finite element techniques are ap-
Tplied, operator is only approximated, which introduces
some non-negligible error in each step. If the contraction
ratio of the operator is , then the total accumulated error will be approximately 1=(1 ) times the error of a single
step66. For highly reflective scenes, the iteration is slow and the result is inaccurate if the approximation of the operator is not very precise. Very accurate approximations of the transport operator, however, require a lot of computation time and storage space.
In the diffuse radiosity setting several methods have been proposed to improve the quality of the iteration. For example, we can use Chebyshev iteration instead of the Jacobi or the Gauss-Seidel method for such ill conditioned systems5.

c Institute of Computer Graphics 1998

6 Szirmay-Kalos / Stochastic Methods in Global Illumination

On the other hand, realizing that the crucial part of designing such an the algorithm is finding a good and "small" approximation of the transport operator, the method called welldistributed ray-sets39; 6 proposes the adaptive approximation of the transport operator. This approximation is a set of rays selected carefully taking into account the important patches and directions. In 6, the adaptation of the discrete transport operator is extended to include patch subdivision as well, to incorporate the concepts of hierarchical radiosity19. The adaptation strategy is to refine the discrete approximation (by adding more rays to the set), when the iteration with the coarse approximation is already stabilized. Since the discrete approximation of the transport operator is not constant but gets finer in subsequent phases, the error accumulation problem can be controlled but is not eliminated.
Both the problem of prohibitive memory requirements and the problem of error accumulation can be successfully attacked by stochastic iteration.
Compared to expansion techniques, iteration has both advantages and disadvantages. Its important advantage is that it can potentially reuse all the information gained in previous computation steps, thus iteration is expected to be faster than expansion. Iteration can also be seen as a single infinite length random walk. If implemented carefully, iteration does not reduce the number of estimates for higher order interreflections, thus it is more robust when rendering highly reflective scenes than expansion.
The property that iteration requires tessellation and finiteelement representation is usually considered as a disadvantage. And indeed, sharp shadows and highlights on highly specular materials can be incorrectly rendered and lightleaks may appear, not to mention the unnecessary increase of the complexity of the scene description (think about, for example, the definition of the original and tessellated sphere). However, finite-element representation can also provide smoothing during all stages of rendering, which results in more visually pleasing and dot-noise free images. Summarizing, iteration is the better option if the scene is not highly specular.

2. Why should we use stochastic methods?

Expansion techniques require the evaluation of very high-

dimensional -- in fact, infinite dimensional -- integrals.

When using classical quadrature rules for multi-dimensional

integrals 44, such as for example the trapezoidal rule, in order

to provide ple points

a result with a is in the order

ogfivOen(MaccDu)r,awcyh,etrheeDnuims btheer

of samdimen-

sion of the domain. This phenomenon is called the dimen-

sional core or dimensional explosion and makes classical

quadrature rules prohibitively expensive for higher dimen-

sions. The reason of the dimensional explosion is that these

rules are usually based on uniform grids -- that are simple

Cartesian products of the 1D grid in higher dimensions -- in

which different dimensions do not effectively interact.

However, Monte-Carlo or quasi-Monte Carlo techniques

distribute the sample points simultaneously in all dimen-

sions, thus they can avoid dimensional explosion. For ex-

ample, tion is

tOhe(Mprob0a:5b)il,isitnidceepreronrdebnotulyndoofftMheondtiem-Cenasrilooninotefgtrhae-

dacohmieavine.OD(l-odgimDeMnsi=oMna)l

=lowO(dMiscre(p1anc)y)

series41 can convergence

even rates

for finite variation integrands.

Furthermore, classical quadrature cannot be used for infi-

nite dimensional integrals, thus the Neumann series should

be of

torrudnecrateDd+af1terjDjLetejjr=m(s1.

This truncation
). Using a

introduces a bias Russian roulette

based technique, on the other hand, Monte-Carlo methods

are appropriate for even infinite dimensional integrals.

Thus we can conclude that the stochastic approach is indispensable for expansion methods.

The application of randomized techniques in iteration is not so evident, but can also be justified. On the simplest level, these methods also use integration in each iteration step. The dimension of the domain is usually not very high. For example, iterative diffuse radiosity methods need to evaluate 4-dimensional integrals to obtain form factors. The dimension is often reduced to 2 by a brutal simplification, which computes one of the two surface integrals from a single value. For even 4-dimensional integrals Monte-Carlo methods are superior than classical quadratures thus in accurate algorithms they are highly recommended.

Furthermore, when stochastic iteration is applied, the operator should be like the real operator just in the average case. This allows us to use significantly simpler realizations. For example, the integral part of the operator can also be approximated as an expectation value, thus in a single transfer usually no explicit integral is computed. As we shall see, it is relatively easy to apply random operators whose expected case behavior gives exactly back that of the real operator. Thus the error accumulation problem can also be avoided.

If the operator is highly simplified, it does not require the integrand everywhere in the domain, thus a lot of storage space can be saved. Compared to the astronomical storage requirements of non-diffuse radiosity methods, for example, with stochastic iteration we can achieve the same goal with one variable per patch69. This argument loses some of its importance when view-independent solution is also required, since the final solution should be stored anyway. This is not a problem if only the diffuse case is considered, since using a single radiosity value per patch the image can be generated from any viewpoint. For the non-diffuse case, the reduced storage gets particularly useful when the image is to be calculated in only a single, or in a few eye positions.

Summarizing, the advantages of stochastic iteration are the simplicity speed, affordable storage requirements and numerical stability even for very large systems containing highly reflective materials.

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

7

Regular grid 1

Random points 1

First 100 Halton points of base (2, 3) 1

0.8 0.8 0.8

0.6 0.6 0.6

0.4 0.4 0.4

0.2 0.2 0.2

0 0 0.2 0.4 0.6 0.8 1

0 0 0.2 0.4 0.6 0.8 1

0 0 0.2 0.4 0.6 0.8 1

Figure 5: 100 points distributed by a regular grid (left), random distribution (middle) and Halton low-discrepancy sequence (right)

3. Options in constructing stochastic rendering methods

3.1. Monte-Carlo versus quasi-Monte Carlo

The core of the computations of all methods is the evaluation of high-dimensional integrals (for inversion and iteration it means 4 dimensional integrals, for expansion, it means, at least theoretically, infinite-dimensional integrals). To evaluate an integral, we can use quadrature formulae, that have the following form in the simplest case:

Z
[0;1]D

f(z)

dz



1 M

 XM f(zi):
i=1

(26)

Those sets of sample points that provide an exact integral value in the asymptotic sense are called uniform sequences.
Well known examples for uniform sequences are the uniform grid or the uniformly distributed random samples (figure 5). The application of random samples can be justified
zby assuming that the integrand is multiplied by a constant
p( ) = 1 function which is the probability density of a uni-
zformly distributed random variable, then realizing that the
integral is the formula of the expectation of f ( ). Expecta-
ztions can be approximated by averages if sample points are
selected according to probability density p( ) = 1:

Z
[0;1]D

f(z) dz

Z
=
[0;1]D

f(z)p(z) dz

=

E[f(z)]



1 M

XM
i=1

f

(zi):

(27)

To find out which are those sample sets that can effectively be used in numerical integration, the Koksma-Hlawka inequality41 gives us some hints (unfortunately, it is valid only for finite-variation functions, but the basic observations
c Institute of Computer Graphics 1998

are still useful in more general circumstances):

Z
j f(z) dz
z2[0;1]D

1 M

XM i=1

f (zi )j



VHK D (z1 ;

:

:

:

zN );

(28)

z zVwhere
DKrause,

HK is
and

th(e

variation of f in 1; : : : N ) is the

the sense of Hardy star-discrepancy of

and the

used sample set (for the bounds and computation of the dis-

crepancy refer to 41; 53; 16).

According to this inequality, the error can be upperbounded by the product of two independent factors, the variation of the integrand and the discrepancy of the used samples set. The discrepancy shows how uniformly the set is distributed53. This immediately presents two orthogonal strategies to improve the quality of quadratures. Either we try to make the function flat by appropriate variable transformations, or use very uniformly distributed sample sets. The first technique is called importance sampling60, while the second involves the stratification60; 36; 1 of random points or the application of low-discrepancy series41; 82; 44; 29; 60.

Low-discrepancy samples are deterministic point sets that are designed to be optimally uniform, thus replacing the random points by them improves the accuracy of the integral quadrature. Quadrature rules that use low-discrepancy series instead of random points are called quasi-Monte Carlo methods.

Quasi-Monte Carlo techniques have been first applied to solve the diffuse rendering equation by Keller27, where the integrand was generally discontinuous and therefore of infinite variation, thus the superiority of quasi-Monte Carlo method could not been theoretically justified (note that the Koksma-Hlawka inequality is meaningless if the variation is infinite). However, the numerical evidence showed that quasi-Monte Carlo methods can slightly be better than Monte-Carlo techniques.

The quasi-Monte Carlo integration of infinite variation functions has been analyzed in 44; 70, where it was concluded that quasi-Monte Carlo methods are still better but lose their

8 Szirmay-Kalos / Stochastic Methods in Global Illumination

Error of single-ray based random walk in the reference sphere (D=1, light=25%) 1
Halton random

Error of single-ray based random walk in the reference sphere (D=5, light=25%) 1
Halton random

Error of single-ray based random walk in the reference sphere (D=10, light=25%) 1
Halton random

0.1 0.1 0.1

L1 error L1 error L1 error

0.01 1

10 100 samples

1000

0.01 1

10 100 samples

1000

0.01 1

10 100 samples

1000

Figure 6: Error measurements for 1, 5 and 10 bounces

advantage in higher dimensions. The other important problem is that although a low-discrepancy series has almost linearly decreasing discrepancy in the asymptotic sense, this discrepancy can still be high for not very many points (in the solution of the rendering equation we rarely use more than 1000 samples for the estimation of a single pixel). In the case of the Halton series, for example, the base of the series strongly affects the initial behavior of the discrepancy. These base numbers are different prime numbers for different dimensions, thus for high-dimensional integrals the base numbers can be quite high, which results in degraded performance.
To demonstrate this, in figure 6 the errors of different bounces generated by quasi-Monte Carlo and the MonteCarlo quadratures have been compared for a spherical diffuse scene where only a part is lightsource. For this scene the analytical solution of the rendering equation is possible20; 70.
3.2. Continuous versus finite-element based methods
Iteration requires the representation of the temporary radi-
ance function Ln. So does expansion if view-independent
solution is needed since the final radiance distribution must be represented in a continuous domain.
To represent a function over a continuous domain, finite element methods can be used which approximate the function in the following form:
L(~x; !)  Xn Lj  bj(~x; !) = bT (~x; !)  L (29)
j=1
Lwhere bj(~x; !) is a system of predefined basis functions, and
j factors are unknown coefficients.
This representation can also be seen as projecting the infinite dimensional space of the possible radiance functions into a finite-dimensional function space defined by the basis functions.
Substituting this approximation into the rendering equa-

tion we can obtain:
bT  L  bT  Le + T (bT  L):

(30)

b  LNTot(e~x;t!ha)t

equality cannot be guaranteed, since even if is in the subspace defined by the basis func-

Ttions, the integral operator may result in a function that is

out of this space. This can be solved by projecting the result

back to the subspace and using a projected integral operator
TF in the following way:

TF L = hT bT  L; b~i:

(31)

bwhere hT L; ~i is a vector of scalar products

hT L;~b1i; : : : hT L;~bni

ah~bnid;

b~bjii

is
=

an
1 if

adjoint basis of bi, since i = j and 0 otherwise.

we

require

that

LSince is constant, we can also obtain

TF L = hT bT ; b~i  L = F  L;

(32)

whThbejre; ~bFii:= hT bT ; b~i is a matrix, where the i; j element is

Thus the projection converts the original integral to the

following form:

L = Le + TF L = Le + F  L:

(33)

An adjoint of this linear equation can be derived by sup-

Pposing that each
surement device

Wbaiesitshfautnmcteiaosnurbeisisthaespsoocwiaetred

with a mea-
i leaving the

support of the basis function. Thus we obtain

hWie; bT  Licos = hWie; biicos  Li = Pi:

Similarly, the measured emission power is
hWie; bT  Leicos = hWie; biicos  Lie = Pei :

Applying measurement operator Wie for equation (33),

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

9

we can obtain the following equation:

hWie; biicosLi = hWie; biicosLei +hWie; biicosXn FijLj
j=1

(34)

This can also be presented in matrix form

P = Pe + H  P;

(35)

where

Hij

=

Fij



hhWWjiee;;

biicos bj icos

:

(36)

When finite-element techniques are used together with expansion, finite-element representation can either be used to represent the final result27, or even be involved in the random walk42.
The latter case may correspond either to the random-walk solution of the linear equation derived by projecting the integral equation, or to the Monte-Carlo evaluation of the multidimensional integral containing both the transport and the
Fprojection operators. The second case is preferred, because
it does not require matrix to be explicitly computed and stored.
The main problem of finite-element representations is that they require a lot of basis functions to accurately approximate high-variation, high-dimensional functions. Not surprisingly, finite-element methods become really popular only for the diffuse case, where the radiance depends on 2 scalars and is relatively smooth. For solving the non-diffuse case, they are good only if the surfaces are not very specular.

3.3. Diffuse versus the general case
If the surfaces have only diffuse reflection and emission -- which is a general assumption of the radiosity method12 -- then the rendering (or the potential) equation has a simplified form:
Z
L(~x) = Le(~x)+ L(h(~x; !0))fr(~x)cos 0 d!0: (37)



In this case, the BRDF and the radiance depend on the surface point, but not on the direction, which reduces the inherent dimensionality of the problem and simplifies the finite-element representation:
L(~x; !)  L(n)(~x) = Xn Lj  bj(~x): (38)
j=1

A widely used approach is the application of piece-wise

constant basis functions for which bj(~x) = 1 if ~x is on sur-

face element
sis is bj(~x)

Aj =

and 0
1=Aj

otherwise.
if ~x is on

An appropriate adjoint ba-
surface element Aj and 0

otherwise.

c Institute of Computer Graphics 1998

Using this set of basis functions, the original rendering

equation is projected to the following linear equation:

L = Le + F  L

(39)

where
Fij = hT bj;~bii =
ZZ
bj(h(~x; !0))  fr(~x)  cos 0 d!0~bi(~x) d~x: (40)
S


Let us extend the formula of the solid angle to be valid
for cases when ~x and y~ are not necessarily visible from each other. If the visibility indicator is v(~x; ~y), then

bj(h(~x;

!0))



d!0

=

dy~ jj~x



cos  ~yjj2



v(~x;

~y):

Using this substitution we obtain

Z
Fij =

Z

bj

(~y)~bi(~x)fr

(~x)

cos 0 jj~x



cos
~yjj2



v(~x;

~y)

dy~

d~x:

SS

(41)

Taking advantage that the base functions are zero except

for their specific domain, we get

Fij =

fi Ai

Z


Z

bj (h(~x;

!0))  cos 0 d!0 d~x =

Ai 


fi Ai



Z

Z

cos 0 jj~x



cos  y~jj2



v(~x;

~y)

dy~

d~x:

(42)

Ai Aj

Applying the

bi(h(~y;

!))



d!

=

d~x  jj~x

cos 0 ~yjj2



v(~x; ~y):

substitution, we can derive yet another form of the transport

matrix

Fij =

fi Ai

Z


Z

bi(h(~y; !))  cos  d! dy~:

Aj 


(43)

aAsiFaaonsrpdtehacetiatdhl iecfafdusiesreeoccftiaeosqneus, atothifeotnhaed(3jho5ei)nm.tLiseepqthuWearteiieoonbfecAa1ni.inbepodienrtisveodf

The power equation is then
P = Pe + H  P;

(44)

where
Hij = Fij  Ai=Aj = Fji  fi=fj:

(45)

Note that using equation (43), we can also obtain

Hij =

fi Aj

Z


Z

bi(h(~y; !))  cos  d! dy~:

Aj 


(46)

10 Szirmay-Kalos / Stochastic Methods in Global Illumination

In order to solve the projected integral equation, basically the same techniques can be applied as for the original integral equation: inversion, expansion and iteration.

3.3.1. Random walk solution of the projected integral equation
Expansion expands the solution into a discrete Neumann series
L = Le + F  Le + F2  Le + F3  Le + : : : (47) F  LLet us again examine the 2 e term. Using the definiFtion of the matrix , this can also be expressed as a multi-
dimensional integral:

(F2  Le)ji = Xn Xn Fij  Fjk  Lke =
j=1 k=1

Z Z Z Z ~bi(~x1)  w1(i)  Xn bj(h(~x1; !10 ))

S
S


j=1

~bj(~x2)  w2(j)  Xn bk(h(~x2; !20 ))  Lek d!20 d~x2d!10 d~x1;
k=1

where

w1(i) w2(j)

= =

fi fj

 

cos cos

1020 ;:

(48)

Considering the integrand, ~x1 should be in patch i for ~bi

to be non zero.
value for the ~y1
has to be traced

T=frhoemhn(, ~x~xo11n;liyn!ad10isr)ienpcgtoilioenntb.jTw!o 1i0slelalgnecidvtetthhneiosv,ni-aszierbarloye

patch should be identified. Following this, another point on

the
~x2,

identified and a ray

pisattcrahciedshionudldirebcetisoenlect!ed20,

which is to obtain

denoted by
an index k

of a patch whose emission should be propagated back on the

walk. During propagation, the
BRDFs (fi; fj) and the cosine

e(cmoisssi20o;ncoiss

m10u)ltfiapcltioerds boyf

the the

visited patches (figure 7).

Note that this is basically the same walking scheme, as used to solve the original integral equation. The fundamental difference is that when a patch is hit by the ray, the walk is not continued from the found point but from another point of the patch.

The power equation can be treated similarly. Again, let us examine the two-bounce case

(H2



Pe)ji

=

Xn Xn j=1 k=1

Fji



fi fj



Fkj



fj fk



Pke

=

y1 x2

'1 x1 i

j 2'
y2 k

Figure 7: Random walk solution of linear equation

Z Z Z Z Pek  ~bk(y~1)  w1(k)  Xn bj(h(~y1; !1))

S
S


j=1

~bj(~y2)  w2(j)  Xn bi(h(y~2; !2))  w3(i) d!2dy~2d!1dy~1;
k=1

where

w1(k) = cos 1; w2(j) = fj  cos 2; w3(i) = fi:

(49)

It means that the integrand in a single point can be obtained

by selecting a point y~1 on patch k, then tracing a ray in di-

preocitniton~y2!i1s.

Having selected

identified the intersected patch j
on this patch and the ray-tracing

a is

new con-

tinued at direction !2. The patch which is hit by this ray

receives the power of patch k attenuated by the BRDFs and

the cosine factors of the steps.

3.4. Global versus local methods
Randomized transport operators transfer the radiance or the potential in the scene. The source and destination of the transfer can be points in the case of continuous methods or patches in the case of finite-element methods.
If the random operator is such that it always selects a single source for shooting or single destination for gathering, then the method is called local method. On the other hand, if many sources and destinations are taken into consideration simultaneously in each transfer, then the method is called global method or multi-path method47.
Since global methods handle larger transfers in a single step, they can be expected to be more efficient than local methods. On the other hand, the single source or destination points of local methods directly correspond to the single "eye" of classical visibility algorithms. Thus, to exploit the capabilities of global methods, classical visibility algorithms should also be generalized for "moving" eye positions. These algorithms are called global visibility algorithms43.
c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

11

4. Stochastic expansion: random walks
In computer graphics the first Monte-Carlo random walk algorithm -- called distributed ray-tracing -- was proposed by Cook et al. 13, which spawned to a set of variations, including path tracing26, light-tracing17, bi-directional path tracing30; 77, Monte-Carlo radiosity54; 37; 42, and two-pass methods which combine radiosity and ray-tracing 52; 84; 79.
The problem of naive generation of walks is that the probability that a shooting path finds the eye is zero for a pin-hole camera or very small if a non-zero aperture camera model is used, while the probability that a gathering random path ends in a lightsource may be very little if the lightsources are small, thus the majority of the paths do not contribute to the image at all, and their computation is simply waste of time. Note that shooting is always superior for view-independent algorithms since they do not have to face the problem of small aperture.
Thus, on the one hand, random walk must be combined with a deterministic step that forces the walk to go to the eye and to find a lightsource. On the other hand, importance sampling60 should be incorporated to prefer useful paths along which significant radiance is transferred. Note that although the contribution on the image is a function of the complete path, computer graphics applications usually assign estimated importance to individual steps of this path, which might be quite inaccurate. In a single step the importance is usually selected according to the BRDF 17; 30, or according to the direction of the direct lightsources 56. Combined methods that find the important directions using both the BRDF and the incident illumination have been proposed in .76; 22; 31; 64 Just recently, Veach and Guibas78 proposed the Metropolis method to be used in the solution of the rendering equation. Unlike other approaches, Metropolis sampling35 can assign importance to a complete walk not just to the steps of this walk, and it explores important regions of the domain adaptively while running the algorithm. Thus no a-priori knowledge is required about the important rays to construct a probability density function in advance. Instead, the algorithm converges to this probability density automatically.
4.1. Handling infinite-dimensional integrals
Expansion methods require the evaluation of infinitedimensional integrals. One way of attacking the problem is truncating the Neumann series, but this introduces some bias, which can be quite high if the scene is highly reflective.
Fortunately, there is another approach that solves the infinite-dimensional integration problem through randomization. In the context of Monte-Carlo integration, this approach is called the Russian roulette2, but here a somewhat more general treatment is given that can also justify this approach for quasi-Monte Carlo quadratures.

The basic idea is very simple. Higher order terms are included in the quadrature only randomly with probability decreasing with the order of the term. In order to compensate the missing terms in the expected value, the computed terms are multiplied by an appropriate factor. If the used probability goes to zero quickly, then the possibility of requiring very high dimensional integrals is rather low, which saves computation time but increases the variance. However, the expected value will still be correct, thus the integral quadrature will provide an asymptotically unbiased estimate.

A term of the Neumann series has generally the following
form ZZ
In = : : : W(z1; : : : zn)  Le(z1; : : : zn) dz1 : : : zn;

where

W

(z1;

:

:

:

zn

)

=

w0



w1



:

:

:



wn

is

the

(50) product of

the weights including the cosine functions of the angles and

the BRDFs.

Let us randomize this integral by introducing a random
z zvariable C( 1; : : : n), called the contribution indicator, z zthat is 1 if a sample 1; : : : n should be taken into account
in the integral quadrature and 0 if it should not. Using this,
we can define the following random variable, ZZ
In = : : : C  W~  L~e dz1 : : : zn; (51)

wLeh,ewrehWi~ch

and can

L~e are appropriate modifications
compensate the missing terms.

of

W

and

The expectation value of this random variable is ZZ
E[In] = : : : E[C(z1; : : : zn)]  W~  L~e dz1 : : : zn =

ZZ
: : : p(z1; : : : zn)  W~  L~e dz1 : : : zn; (52)

z zwhere p( 1; : : : n) is the probability of using sample z z1; : : : n in the integral quadrature.

Obviously, this equals to the original integral I if

p(z1; : : : zn)  W~  L~e = W  Le:

(53)

There are dicator and

tmheanWy~

paonssdibL~lee

selection of the functions, that

contribution incan satisfy this

requirement, thus there are many different unbiased estima-

tors.

A widely used selection is letting
W~ = 1; L~e = Le and p(z1; : : : zn) = W (z1; : : : zn): zwhich corresponds to continuing the walk after step i with
probability w( i).

c Institute of Computer Graphics 1998

12 Szirmay-Kalos / Stochastic Methods in Global Illumination

4.2. Importance sampling

When solving the rendering equation, usually directional integrals (or surface integrals in other formulation) should be evaluated. Thus to allow the application of random or low-discrepancy point sets, the integration domain should be transformed to the unit cube or square.

zFor example, when dealing with directions, we have to
find a mapping ! = T ( ) that projects the unit square to the

surface of the sphere (or hemisphere) and use the following

integration rule

ZZ
f(!) d! =

f (T

1(z))





dT

1(z) dz



dz;

(54)


 [0;1]D

where



dT

1(z) dz



=

1
t(z)

is the Jacobi determinant of the inverse mapping.

If the Jacobi determinant is large, then a small portion of the unit square is mapped onto a large region. Thus sample points that are uniformly distributed in the unit square will be quite rare in these regions. Alternatively, where the Ja-
z zsCcaoombnipsidldeeetpreoirnimngitnsthaiinnst,thtihseesnmmeieagalhln,biotnhrgehoosfoadtm(oTpfle!1p(=oi)nT)tsisw1t(hilel)d.beTenhdsiiestnyhsoaesf. zan illustrative content for the random case. If is uniformly z zdistributed random variable, then the probability density of
! = T ( ) will be t( ).

The same conclusion can also be made in the context of

pure Monte-Carlo integration assuming that the samples are
znot uniformly distributed in the domain but following a p( )

probability density:

Z

Z
f(z) dz =

fp((zz))  p(z) dz =

[0;1]D

[0;1]D

selection of mappings Ti. Using probabilistic approach, it
means the determination of the probability densities of find-
ing new directions during the walks.

Following the directions concluded from the KoksmaHlawka inequality, the mappings should make the integrand flat -- that is of low variation, or constant in the ideal case. It means that the probability of selecting a walk is proportional to its contribution.

Looking at formula (56), which is the single multi-

dimensional solution of the rendering equation, this decision

seems to be hard to made, since there are too many free pa-

rameters to control simultaneously. Fortunately, this solution

can also be presented in the following recursive form:

Z
Le +

w1 t1



[Le

+

Z

w2 t2

[Le +: : :] : : :]

dz1dz2

:::

(57)

If we could ensure that each of the integrands of the form

Z

wi ti



[Le

+

Z

: : :] dzi

is constant (at least approximately), then the integrand of the single multi-dimensional integral will also be constant.

An optimal importance sampling strategy thus requires

density ti to be
ing illumination

Lpreo+poRrti:o:n:aal ntdo

the the

product of the incomcosine weighted BRDF

wi. Unfortunately, during random walks the incoming non-

direct illumination is not known (the random walk is just

being done to estimate it).

Thus, we have three alternatives. Information about the illumination in the space can be gathered in a preprocessing phase, then this information can be used to obtain probability densities for importance sampling. This is called the global importance sampling.

The second alternative is using the information gained during previous walks to approximate the illumination. This strategy is called adaptive importance sampling.

E



f(z) p(z)





1 M



XM i=1

fp((zzii))

(55)

z zThe variance of this estimate is low if f( )=p( ) is flat, thus z zp( ) should be, at least approximately, proportional to f( ).

In the third alternative, the problem is simplified and the

indirect illumination is not considered in importance sam-

pling. When the directions are generated, we depending on the local orientation, the BRDF

use and

oLnelyrewpi-

resenting the direct illumination of the actual point. This is

called the local importance sampling.

Mathematically, the solution of either the rendering or the
potential equation for a given point (~x; !) requires the eval-
uation of the following multi-dimensional integral
L(~x; !) = Le + T Le + T 2Le + : : : =

Z

Z
:::

Le +

w1 t1

Le

+

w1 t1



w2 t2

Le

+:

:

:

dz1dz2

:

:

:

(56)

It turns out that we have to encounter severe problems

when we have to find a mapping which has density that is

proportional to the product of the effects of the BRDF and

the direct strategies

lighting. Consequently, local
usually use only either wi or

Limeptooritdaenncteifsyamimpplionrg-

tant directions. The first alternative is called the BRDF sam-

pling, while the second is called the lightsource sampling.

which can be estimated using formula (26) by evaluating the integrand in sample points and averaging the results.
An important design decision of such an algorithm is the

4.2.1. BRDF sampling
BRDF based importance sampling means that at step i the density ti of the sample points is proportional to the weight

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

13

wi, that is

ti / wi = fr(!in; ~x; !out)  cos 

(58)

In gathering algorithms !out is known,  is the angle be-

tween !in and the surface normal, and !in should be de-

termined.
known, 

In shooting is the angle

baelgtworeiethnm!so,uot nanthdethoethseurrfhaacnedn,o!rminails,

and !out should be determined.

Due to the fact that ti represents density (probability den-

sity for Monte-Carlo methods), its integral is 1. Thus for

gathering walks, the ratio of proportionality in equation (58)

is ZZ
w d!in = fr(!in; ~x; !out)cos in d!in = a(~x; !out)

where a(~x; !out) is the albedo of the surface at point ~x in
the outgoing direction. Similarly, the proportionality ratio
for shooting walks is ZZ
w d!out = fr(!in; ~x; !out)cos out d!out = a(~x; !in):

surface, thus point ~y can be generated using a uniform dis-
tribution on the lightsource.
If the scene has many lightsources, either one ray is sent to each of them, or just a single lightsource is sampled that is selected randomly.
4.2.3. Sampling the lightsources in gathering random walks
Since lightsource sampling generates samples only on the direct lightsources, it completely ignores indirect illumination. Thus it cannot be used alone in global illumination algorithms, but only as a complementary part of, for example, BRDF sampling.
The simplest way to combine the two strategies is to generate all but the last directions of the gathering walk by sampling the BRDF and to compute the last direction by sampling the lightsource. Note that when stopping the walk, the indirect illumination is assumed to be zero, thus following the directions of the lightsources is a reasonable approach.

Thus the weights wi=ti are the albedos at the visited

points.

1;

LW~ehe=n

cLoem, bthineinpgrotbhaibsiwlitiythoRf ucsosniatinnuroinugletthtee

of type W~
walk will

=
be

equal to the albedo. This can also be interpreted in the fol-

lowing way. When the next direction is sampled, we use a
subcritical density wi which does not integrate to 1 but to a value a(~x; !) and with the "missing" probability 1 a(~x; !)

it is decided whether or not the walk is stopped.

4.2.2. Lightsource sampling

Lightsource sampling is used in direct lightsource calculations 56 and as a complementary sampling strategy to BRDF sampling in random walks.

Since in this case, the samples are selected from the lightsource instead of the directional sphere, the surface integral form of the transport operator is needed:
(T Le)(~x; !) =

Z
Le(h(~x; !0); !0)  fr(!0; ~x; !)  cos 0 d!0 =



Z

Le(y~;

!~y!~x)fr(!~y!~x;

~x;

!)

cojsj~x~x0



cos y~ ~yjj2

v(~x;

~y)

d~y;

S

(59)

where v(~x; ~y) is 1 if points ~x and ~y are not occluded from

each other and 0 otherwise.

If the scene has a single, homogeneous lightsource, it is relatively small and is far from the considered point, then the integrand will be approximately constant on the lightsource

Another combination strategy is to trace one or more shadow rays from each visited point of the walk towards the lightsources, not only from the last of them.

Formally, this approach can be presented as a restructuring of the Neumann series
L = Le + T Le + T 2Le + T 3Le : : : =

Le + (T Le) + T (T Le) + T 2(T Le) : : : (60)

Tand Tgral

using while

lightsource sampling sampling the BRDFs

for the Le = (
when evaluating

Le)
the

iiLntee-

integrals. Practically it means that having hit a surface, one

or more shadow rays are traced towards the lightsources and

the reflection of the illumination of this point is estimated.

This reflection is used as if it were the emission of the sur-

face. This method is particularly efficient if the scene con-

sists of point lightsources. Tracing a single ray to each point

lightsource, the illumination due to the point lightsources

can be determined exactly (with zero variance).

4.2.4. Importance sampling in colored scenes
So far, we have assumed that the weights containing the BRDFs and the emissions are scalars thus the densities can be made proportional to them. This is only true if the rendering equation is solved on a single wavelength.
However, if color images are needed, the rendering equation should be solved on several (at least 3) different wavelengths. If the different wavelengths are handled completely independently, then the proposed importance sampling strategy can be used without any modifications. However, this approach carries out geometric calculations, such as tracing rays, independently and redundantly for different wavelengths, thus it cannot be recommended.

c Institute of Computer Graphics 1998

14 Szirmay-Kalos / Stochastic Methods in Global Illumination

A better approach is using rays that transport light on all wavelengths simultaneously. In this case the emission and the BRDF can be represented by vectors, thus to allow im-
Iportance sampling, we need a scalar importance function
that is large when the elements in the vector are large and small when the elements are small. A straightforward way is using the luminance of the light as the importance function.

4.2.5. Multiple importance sampling

So far, we mentioned two basic importance sampling strategies, the BRDF sampling and the lightsource sampling, which are local in the sense that they focus on a single reflection. It is easy to imagine that if the sampling considers simultaneously many reflections, then the number of possible strategies increases dramatically.

Obviously, we desire to use the best sampling strategy. Unfortunately the performance of a sampling strategy depends on the properties of the scene, which is usually not known a-priori, thus the best strategy cannot be selected. Instead of selecting the best, Veach and Guibas77 proposed to combine several strategies in a way that the strengths of the individual sampling methods are preserved.

Suppose that we can use n different sampling techniques

for generating random paths, where the distribution of the
samples is constructed from several p1; :::; pn importance

sampling distributions. The number of samples taken from

Mpi

is=dePnoitMedi.byThMe iM, ainvdaltuhees

total number of samples by are fixed in advance before

zany samples are taken. The "average probability density" of
selecting the sample is then

p^(z)

=

Xn i=1

Mi M



pi(z):

(61)

Thus the integral quadrature using these samples is

Z

Z
f(z) dz =

f(z) p^(z)



p^(z)

dz



[0;1]D

[0;1]D

1 M

Xn i=1

XMi j=1

fp^((zzii;;jj))

=

Xn i=1

1 Mi

XMi j=1

wi (zi;j )



pfi((zzii;;jj))

z (62)
where i;j is the jth sample taken from the ith distribution,

and the weights are

wi(z) = PknM=1iM pki(zp)k(z):

(63)

Other heuristic
zwresults30; 75. For

twheeiguhntbiafasecdtoressticmaantioanlsoPpi rovi (ide)

good
=1

zshould hold for all .

4.2.6. Global importance sampling
Global importance sampling methods are two-phase procedures. In a preprocessing phase they build a data structure that guides the second phase to find important directions. These methods can be classified according to their incorporated data structure. Since the ray-space is 5-dimensional, it is straightforward to apply a 5D adaptive tree31 that is similar to the well-known octree to store radiance information. Jensen proposed the application of the photon-map as the basis of importance sampling22. We assigned the power computed in the preprocessing phase to links established between two interacting patches64.

4.2.7. Adaptive importance sampling
Adaptive importance sampling methods neither require the non-uniform probability densities to be constructed in advance, nor simplify them to take only into account local properties, but converge to a desired probability density using the knowledge of previous samples. Three techniques are particularly important, which have also been used in rendering: genetic algorithms32 the Metropolis sampling35; 78 and the VEGAS method33; 62. In this paper only the Metropolis sampling is discussed.

4.2.8. Metropolis sampling

The Metropolis algorithm35 converges to the optimal prob-
z zability density that is proportional to the importance, that is
Iin the limiting case ( ) = b  p( ):

However, this probability density cannot be stored, thus

in the Monte-Carlo formula the importance should be used

instead, in the following way:

Z
I=

f(z) I(z)



I

(z)

dz

=

b



Z

f(z) I(z)



p(z)

dz

=

VV

b

E



f(z) I(z)





b M



XM i=1

If ((zzii))

(64)

zIn order to generate samples according to p( ) = 1=b  zI( ), a Markovian process is constructed whose stationary z zdistribution is just p( ). Informally, the next state i+1 of

this process is found by letting an almost arbitrary tentative

z ! ztransition function T ( i

t) generate a tentative sam-

zple t which is either accepted as the real next state or re-

z ! zjected making the next state equal to the actual state using
an "acceptance probability" a( i t) that expresses the

increase of the importance (if this "acceptance probability"

is greater that 1, then the sample is accepted deterministi-

cally).

z z zThe formal definition of this Markovian process
f 1; 2; : : : i : : :g is as follows:

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

15

for Baiiefl(=asazes(ei1iGezdflisetrcooenhne<zoMrttohaz)asteeted(=)azoracaint(nuoIdat1(holzemtszhtrtta)ern/)tan/euntamThzadccieo(bcc,nzmeeetrppzz,trtiitw++e(innzi11ttziha[+=i=0t)ip;1v)r1zze=o=]ti(b.p(aozIbitn(i)lztitziy)ta(Tz(izi ztz)t))
endif
endfor

x y!Note that "acceptance probability" a(

) has the fol-

x y y xlowing property: a( ! ) = 1=a( ! ).

The transition probability of this Markovian process is:

P

(x

!

y)

=

(

T T

(x (x

! !

y) y)



if a(x ! a(x ! y)

y)  1 ;
otherwise:

(65)

xIn equilibrium state, the transitions between two states and y are balanced, that is

p(x)  P(x ! y) = p(y)  P(y ! x):

flections and transmissions (also called the coherent components) that follow the laws of geometric optics -- i.e. the law of reflection and the Snellius-Descartes law of refraction -- but does not take into account multiple diffuse or incoherent specular reflection or refraction.
Light Source

Image Plane

S

Eye Shadow Ray S

D

Figure 8: Visibility ray tracing

x ! y Using this and equation (65), and assuming without the loss

of generality that a(

) 1, we can prove that the sta-

tionary probability distribution is really proportional to the

importance:

p(x) p(y)

=

P P

(y (x

! !

x) y)

=

T T

(y (x

! !

x) y)



a(y

!

x)

=

I(x) I(y)

:

(66)

If we select initial points according to the stationary distribution -- that is proportionally to the importance -- then the points visited in the walks originated at these starting points can be readily used in equation (64).

zWhen we use Metropolis sampling in the solution of the
global illumination problem, the "state" corresponds to a complete walk. Mutation strategies are responsible for changing the walk a "little", by perturbing one or more directions or surface points, adding or deleting steps in the path, etc.

The first use of Metropolis sampling in rendering aimed at speeding up bi-directional path tracing78.

In visibility ray tracing (backward tracing) rays are emitted from the viewpoint. Rays are traced until they reach a surface which have no coherent reflection or refraction (unless they leave the environment or the length of the walk exceeds a predefined limit), so child rays are only generated (and traced recursively) when the given ray hits a surface that is reflective or transmissive. Restricting the continuation to coherent components, a ray can spawn to maximum two child rays, which is low enough not to necessitate random techniques.
The diffuse and incoherent specular reflection of a surface, on the other hand, is determined by taking into account only the direct illumination. For point lightsources, this can be done deterministically by tracing one ray, called shadow ray, to each lightsource to decide whether or not the given lightsource is visible from the intersection point. For area lightsources, the illumination can be computed by tracing random shadow rays as proposed by direct-lightsource computation.

4.3. Gathering-type random walk algorithms
Gathering type random walks correspond to the MonteCarlo solution of the rendering equations. They start at the eye position and gather the emission of the visited points. This approach is quite ineffective if the lightsources are small, since it has rather low probability that a walk visits a lightsource.
4.3.1. Visibility ray-tracing
Classical ray tracing is a deterministic algorithm and is included here only for completeness. It only models ideal re-

4.3.2. Distributed ray-tracing
Distributed ray tracing suggested by Cook13 can model all the possible paths. In this method the ray tracing is not terminated when reaching a diffuse surface. After a ray has hit a diffuse surface, child rays are generated randomly according to the BRDF characterizing the surface. For the appropriate estimation of the diffuse interreflection, child rays have to be traced and the average of their contributions have to be computed.
This approach is based on the recursive formulation of the integrals in the Neumann series (equation (18)).

c Institute of Computer Graphics 1998

16 Szirmay-Kalos / Stochastic Methods in Global Illumination

Light Source
Image Plane Eye

thus they also stop tracing when hitting a surface that does not have coherent reflection or refraction. In photon tracing the rays are emitted from the light sources, and at each hit it is examined whether the surface has ideal reflection, refraction and incoherent reflection or refraction. In the directions of ideal reflection or refraction, the tracing is continued by starting new child rays. The effect of incoherent interactions, on the other hand, is stored in a map or is projected to the eye by tracing a ray towards the camera position.

Figure 9: Distributed ray-tracing

4.4.2. Light Tracing
In light tracing17 photons perform random walk through the scene starting at the lightsources. Whenever a surface is hit, a ray is traced from the intersection point to the eye and the contribution is added to the selected pixel (if any).

4.3.3. Path-tracing
Another Monte-Carlo approach proposed by Kajiya is path tracing 26, which is based on the multi-dimensional integral formulation of the terms of the Neumann series (equation (15)).

particle path contribution path

Light Source

Image Plane Eye

Light Source

Image Plane Eye

Figure 11: Light tracing

Figure 10: Path tracing
This method simply creates a path history for a single particle interacting with the environment until absorption. That is, rather than spawning new rays at an intersection, it simply chooses a random direction according to the BRDF for the ray to follow. The walk is continued with a probability equal to the albedo.
4.4. Shooting-type walks methods Shooting walks are based on the Monte-Carlo solution of the potential equation.
4.4.1. Photon tracing Photon tracing (forward ray-tracing) is the inverse of visibility ray-tracing and uses similar simplifying assumptions,

Light tracing is the direct implementation of the MonteCarlo quadrature of the multi-dimensional formulation. When the next direction is determined, the BRDF based importance sampling can be applied and combined with the random termination according to the albedo.
4.4.3. Bi-directional Path Tracing
Bi-directional path tracing30; 77 is based on the combination of shooting and gathering walks thus it can combine the advantages of both techniques. Namely, it can effectively handle small lightsources and small aperture cameras.
Walks are initiated at the same time from a selected light source and from the viewpoint. After some steps, either a single deterministic shadow ray is used to connect the two types of walks77, or all points of the gathering walk are connected to all points of the shooting walk using deterministic rays30. If the deterministic shadow ray detects that the two points are occluded from each other, then the contribution of this path is zero.
Note that gathering and shooting walks use different integration variables, namely a gathering walk is specified by
c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

17

a point on the pixel area and a sequence of incoming directions, while a shooting walk is defined by a point on the lightsource and a sequence of the outgoing directions. Thus when the two walks are connected, appropriate transformations should take place.

Let us first consider a walk of a single bounce (figure 12).

According to the definition of the solid angle, we obtain

d!10 d!2

=

ddAAccoossoiunt==rr2212

=

rr2122



cos out cos in

;

(67)

and for the substitution of the surface integral on the light-

source

d!20

=

dy~

 cos r22



:

(68)

Thus the transformation rule is

cos

10



cos

in

d!10 d!20

=

cos

10

 cos r12

out



cos



d!2dy~;

which means that when converting a shooting type walk to a

gathering type walk, then the radiance should be multiplied

by

cos

10

 cos r12

out

:

d 1 1 r1

 out  in dA

d


2



r2 d '2

dy

while shooting walks use the cosine of the outgoing angle

-- and the transformation of the combined walk to a single

gathering walk requires a multiplication by

cos

k0



cos rk2

n

k+1 :

Image Plane
eye path 1'
x1

x2

2'

3 '3

y2 light path 2 4'

y3 1

y1

deterministic step

Figure 13: Bi-directional path tracing with a single deterministic step

Image Plane y2 y0 y1
eye path

x1 light path

shadow rays x2

Light Source

x0

Figure 14: Bi-directional path tracing with multiple deterministic steps

Figure 12: Correspondence between the solid angles of incoming and outgoing directions

When the shooting walk consists of more than 1 steps,

then formula (67) should be applied to each of them, but

formula (68) only to the last step. This conversion replaces

tshuebsienqcuoemnitnsgtedpisreccotimonpsenbsyatteherk2o+u1tg=orik2ngscdailriencgt.ioFnisnaalnlyd,

the we

end up with a formula which is similar to the 1-step case:

cos k0  cos k0 +1  : : : cos n0 d!k0 : : : d!n0 =

cos

k0



cos rk2

n

k+1 cos n

k: : : cos 1 d!n

k : : : d!1dy~:

Figure 13 shows an example when k = 2 and n = 4.
This formula means that we can use the rules of sections 1.2.1 and 1.2.2 to generate the shooting and gathering walks -- gathering walks use the cosine of the incoming angle,

In Lafortune's version of the bi-directional path tracing30 not only the endpoints of the shooting and gathering walks are connected, but all intersection points are linked by shadow rays. The flux is estimated by a weighted sum of the different walks as suggested by the concept of multiple importance sampling.
4.4.4. Photon-map
Bi-directional path tracing connects a single gathering walk to a single shooting walk. However, if the effects of a shooting walk, for instance, could be stored, then when a new gathering walk is computed, it could be connected to all of them simultaneously. This is exactly what Jensen24; 23; 25 proposed, also giving the definition of a data structure, called the photon-map which can efficiently store the effects of many shooting walks.
A photon map is a collection of photon hits generated in

c Institute of Computer Graphics 1998

18 Szirmay-Kalos / Stochastic Methods in Global Illumination

the shooting phase of the algorithm. The photon-map is organized in a kd-tree to support efficient retrieval. A photon hit is stored with the power of the photon on different wavelengths, position, direction of arrival and with the surface normal.

The gathering phase is based on the following approximation of the transport operator:
Z
L(~x; !0) = L(h(~x; !0); !0)fr(!0; ~x; !)cos 0 d!0 =



Z

d(!0) dA cos 0d!0



fr(!0;

~x;

!)



cos

0

d!0






Xn i=1

(!i0) A



fr

(!i0;

~x;

!);

(69)

fawapcphereorxeiAmfartoe(m!d i0f)droiirsmecthtthieoenppo!hwoi0e.troTnohsfeianpthhoeatonnnediglahnAbdoiqrnhugoaoantdtitthoieefs~xsauirrne-

the following way. A sphere centered around ~x is extended

until it sphere

contains
is r, then

n photons. If at this point the
the intersected surface area is

radius
A =

ofrt2h.e

4.4.5. Instant radiosity
Instant radiosity28 elegantly subdivides the shooting walks into a view-independent walk and into the projection of the contribution to the eye. Let us call this last step with eye projection the eye-step. The view-independent walk is quite similar to the light-tracing algorithm, but the new directions are sampled from the Halton sequence instead of a random distribution.
When a surface hit is found, the eye-step is calculated taking advantage of the rendering hardware of advanced workstations. The reflection of this hit is assumed to be a point lightsource (in the radiosity setting the emission of the lightsource is also diffuse), and the rendering hardware is used to render the effect of this lightsource on the scene and also to compute shadows. The final image is the average of such estimates, which are computed using the hardware accumulation buffer.
Instant radiosity is quite similar to photon-map based techniques. However, instead of using ray-tracing for final gather, the photons in the photon map are used as lightsources and fast and hardware supported visibility and shadow algorithms are applied. The other fundamental difference is that instant radiosity allows just a relatively low number of photons which therefore should be very well distributed. The optimal distribution is provided by quasiMonte Carlo light walks.

4.4.6. Random walks for the radiosity setting

As mentioned, the projected rendering equation can also be solved by random walks54; 47. The basic difference is that when a patch is hit by a ray, then instead of initiating the next ray from this point, another independent point is selected on the same patch.

Considering the concept of importance sampling and Rus-

sian roulette, appropriately

many different
defining the p,

Ws~traatnedgiL~ese

can be elaborated by functions (recall that

according to
estimate is p

eWq~uatiL~oen

(53)
=W

thLe er)e.quirement

of

an

unbiased

For example, let us use the following simulation54; 47 to
obtain a radiance estimate of patch i1:

First a ray is found that starts on this patch. The starting
dppthrioeroienbnctaetbi~xxoit1lnipti!yast10dcsehaisnmissspiatilymdedeipsnlf1terid=ofiAmefdrio1.amLcueonatsifictoo10rbsm=einped.aiTdtschitsrhiitsbriiru2ba.tuyiAotiinost,nptrw,aattchhceihuldesia2ttnhhideet
is decided whether or not the walk should be stopped with
probability of the albedo of the patch. Note that for diffuse
surfaces the albedo is a = f . If the walk has to be continued, then a new starting point ~x2 is found on patch i2, and
the same procedure is repeated recursively.

With this strategy, the probability density of completing
an n step walk is p(~x1; !10 ; ~x2; !20 ; : : : ~xn 1; !n0 1) =

1 Ai1



cos 10 



Aaii22



cos 20 

:::

ain Ain

1 1



cos

n0 

1 (1

ain ) =

Afii11

 cos 10  Afii22



cos

20

:

:

:

fin Ain

1 cos n0
1

11

aia1 in

=

W  1 aia1 in : Thus the required weight W~ of the walk is
W~ = 1 aia1 in :

(70) (71)

LThus if
having
patch i

the patch emission is

onnew, hthicehn

the walk is terminated is a source the estimator of the radiance of

Len  1 aia1 in :

Other gathering or shooting estimators have been proposed and their variances have been estimated in 54; 47.

4.4.7. Global ray-bundle tracing
Realizing that an accurate solution requires great many samples, global ray-bundle tracing68; 69; 62 uses a bundle of very many (e.g. 1 million or even infinite) global parallel rays,

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

19

which can be traced simultaneously using image coherence techniques. In order to represent the radiance that is transferred by a ray, finite-element techniques are applied that approximate the positional (but not the directional) dependence of the radiance by piece-wise continuous or piece-wise linear functions67.
L(~x; !)  Xn bj(~x)  Lj(!) = bT  L(!): (72)
j=1

Note that this is a mixed finite-element and continuous method, since the positional dependence of the radiance is approximated by finite-elements, while the directional dependence is not.

Substituting this into the rendering equation and project-

ing that into an adjoint base we obtain

L(!) = Le(!) + TF L(!);

(73)

Twhere F is a composition of the original transport operator
and its projection to the adjoint base

TF L(!) = hT bT  L(!); b~i:

(74)

Let us use again piece-wise constant basis functions. Then the result of the application of the transport operator on patch
i is

TF

L(!)ji

=

1 Ai

Z


Z

L(h(~x;

!0); !0)cos 0f~i(!0; !) d~x d!0:


 Ai

(75)

Taking into account that the integrand of the inner surface

integral is piece-wise constant, it can also be presented in

closed form: Z
L(h(~x; !0); !0)  cos 0  f~i(!0; !) d~x =

Ai

Xn f~i(!0; !)  A(i; j; !0)  Lj(!0);

(76)

j=1

iwshveisreibAle(fir;ojm; !p0a)tecxhpirienssdeisretchteiopnro!je0.cItnedthaereuanoofccplautdchedj

that case

jthoisnitsothaepilnatneerspeecrtpioenndoifctuhlearptrooj!ec0 t.ioIfnos cocflupsaitocnh

i and patch
occurs, the

projected areas of other patches that are in between patch i

and patch j should be subtracted as shown in figure 15.

This projected area can be efficiently calculated simulta-

neously for all patch pairs using global discrete or continu-

ous visibility algorithms62 and also exploiting the hardware

tzh-abtufifse, rt6h9e.yTchaensereasluglotriinthAm(si;cja;n!a0l)so

have
Lj (!

0r)ajnudsotmas

nature, an the

expected value63.

Using equation (76) the rendering equation can be ob-

A(i,j,' ) '

projection of Ai projection of A j

Ai projection plane Aj
'

projection of Ak

Ak

Figure 15: Interpretation of A(i; j; !0)

tained as:

Z

L(!) = Le(!) + F(!0; !)  A(!0)  L(!0) d!0; (77)




L Fwhere (!) is the vector of radiance values, (!0; !) is a

Adiagonal matrix of Athe relative visible

BRDFs, areas:

(a!nd0)gjiejo=meAtr(yim; ja;t!ri0x)=Aci.ontains

Note that equation (77) is highly intuitive as well. The ra-

diance of a patch is the sum of the emission and the reflection

of all patch

"ifnocromm-ifnagctorrasd"iainscpel.ayTehdebryoAle(oi;fjt;h!e0)p=aAtcih. -direction-

This is also an integral equation but unlike the original rendering equation it provides the radiance of not only a single point but for all points at once. This integral equation is solved by random or quasi-random shooting type walks.

direction 3

direction 2

direction 1

image plane
Figure 16: A path of ray-bundles
A single walk starts by selecting a direction either randomly or quasi-randomly, and the emission transfer of all patches is calculated into this direction (figure 16). Then a new direction is found, and the emission is transferred and the incoming radiance generated by the previous transfer is reflected from all patches into this new direction. The algorithm keeps doing this for a few times depending on how many bounces should be considered, then the emission is sent and the incoming radiance caused by the last transfer is reflected towards the eye. Averaging these contributions results in the final image. There are basically two different methods to calculate the image estimate. On the one hand, evaluating the BRDF once for each patch, a radiance value

c Institute of Computer Graphics 1998

20 Szirmay-Kalos / Stochastic Methods in Global Illumination

is assigned to them, then in order to avoid "blocky" appearance, bi-linear smoothing can be applied.
Using Phong interpolation, on the other hand, the radiance is evaluated at each point visible through a given pixel using the incoming radiance field, the surface normal and the BRDF of the found point. In order to speed up this procedure, the surface visible at each pixel, the visibility direction and the surface normal can be determined in a preprocessing phase and stored in a map. Phong interpolation is more time consuming but the generated image is not only numerically precise, but is also visually pleasing.
In the simplest case, when the global ray-bundles are handled similarly to the light-tracing algorithm, this requires just one variable per patch. In the more elaborate versions of the algorithm, the radiance of the steps of a walk are combined in all possible ways, which significantly improves the performance but needs more storage space.
The global directions defining the ray-bundles are sampled from uniform random and low-discrepancy sequences. In 69; 62 adaptive importance sampling, such as the Metropolis method, is also considered, but it is concluded that this method does not offer significant improvement for relatively smooth integrands.
4.4.8. Multi-path method using global random lines
Multi-path methods represent a bridge between random walk and iterative methods. They are essentially random walk methods, but in their single step many random walks are advanced parallely.
Sbert47; 50; 49 proposed a complete family of multi-path methods, that are based on random global lines, which was the basic "engine" to advance the walks. A single global line transfers the reflected power of all those patches that are intersected by this line to the direction of this line. The global line also transfers a portion of the emission of the intersected patches. Thus a line initiates those walks that would start in a patch intersected by this line, and continues those previous walks which carried some power onto the intersected patches.

Another versatile package is the ART72 developed at the Vienna University of Technology. It is an open system that can easily be extended by new global illumination algorithms, BRDF models, object types, etc. ART has an efficient ray-casting engine using hierarchical bounding boxes to reduce ray-object intersection calculations, a scene processing subsystem that takes generalized CSG models as scene descriptions, and an image postprocessing subsystem to handle different image formats. Visibility ray-tracing, path tracing and photon tracing have already been implemented. These methods use BRDF based importance sampling and terminate the walks using Russian roulette. Bi-directional path tracing with Metropolis sampling is being implemented. The
system can work with R; G; B coordinates and also with dif-
ferent spectral representations.

5. Stochastic iteration

The basic idea of stochastic iteration is that instead of ap-
Tproximating operator in a deterministic way, a much sim-
pler random operator is used during the iteration which "behaves" as the real operator just in the "average" case. The concept of stochastic iteration was proposed for the diffuse radiosity problem in 37, that is for the solution of finitedimensional linear equations.

In this section we present a generalized formulation that

is somewhat different from the original concepts to allow to

attack also non-diffuse global illumination problems63.

TSuppose that we have a random linear operator  so that

E[T L] = T L

(78)

for any integrable function L.

T LIn the case of finite-element representations, equation (78)
should be true for the F operator that also involves the
projection to the finite function space.

T T TatoDrsurin1g; Ttions of

s2t,oa;cn:h:da:stthiciisi:ts:ee:rqaiutsieongnceenaeirrsaanutedsdeo,dmwinhseitcqhhueeaintrecereaintoisoftnaonpftoeiarr---

mula:

4.5. Software implementations of the random-walk methods
An important practical implementation of the path-tracing algorithm is the RADIANCE system80. It incorporates a lot of coherence, importance sampling and caching techniques to efficiently handle complex scenes. For example, the scene is stored in an octree to reduce ray-object intersections. The irradiance is cached in another octree81 to take advantage of the fact that diffuse reflections do not change abruptly. This allows to compute the color of neighboring pixels without tracing rays in the directions responsible for diffuse interreflections.

Ln = Le + TnLn 1:

(79)

Since in computer implementations the calculation of a random operator may invoke finite number of random number generator calls, we are particularly interested in random operators having the following construction scheme:

1. Random "point" pi is found from a finite dimensional

set  using probability density prob(p). This probability

T2.

dUesninsigtypmi aay"doertemrmayinniosttidce"poepnedraotnorfunc(tipoin)

L.
is

applied

to

L.

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

21

TPoint pi
sible for

itshecarlalneddotmhenraatnudreomofizoaptieornatpoor ints.ince

it

is

respon-

Using a sequence of random transport operators, the measured power

Pn = MLn

(80)

will also be a random variable which does not converge but fluctuates around the real solution. Thus the solution can be found by averaging the estimates of the subsequent iteration steps.

Formally the sequence of the iteration is the following:

P1 P2

= =

ML1 ML2

= =

M(Le M(Le

+ +

TT21LLee)+

T2T1Le)

...
PM = MLM = M(Le + TM Le + TM TM 1Le + : : :)

Averaging the first M steps, we obtain:

P~

=

1 M

XM i=1

MLi

=

M(Le

+

1 M

XM i=1

TiLe

+

1 M

MX1 i=1

Ti+1TiLe

+

:

:

:)

=

Substituting this back to equation (82), we get Z
E[Ti+1TiLe] = Ti+1(p)(T Le)  prob(p) dp =


E[Ti+1(T Le)] = T (T Le) = T 2Le: (85) which concludes our proof for the k = 1 case. The very
same idea can be used recursively for more than two terms.
Returning to the averaged solution P~, its expected value
is then
E[P~] =

M(Le+T

Le+

M M

1T

2Le+

M M

2T

3Le+:

:

:+

1 M

T

M Le );

(86)

which converges to the real solution

M(Le + T Le + T 2Le + T 3Le + : : :)

if M goes to infinity. Note also that there is some power "defect" because of the missing higher order terms for finite M

values. Denoting the contraction ratio of the integral opera-
Ttor by , and assuming that the measuring device is cal-

ibrated to show unit power for unit homogeneous radiance,

this defect can be upperbounded by63

1 M



(1

2 )2

 jjLejj:

M(Le+

1 M

XM i=1

Ti

Le+

M M

1M1

1

MX1 i=1

Ti+1Ti

Le+:

:

:):

(81)

In order to prove that P~ really converges to the solution

of the integral equation, first it is shown that the expectation

value of

Ti+kTi+k 1 : : : Ti+1TiLe

is T k+1Le. For k = 0, it comes directly from the requirement of equation (78). For k = 1, the total expectation value

theorem can be applied:

Z
E[Ti+1TiLe] = E[Ti+1TiLejpi+1 = p]  prob(p) dp:



Since

for

a

fixed

pi+1

=

p,

operator

Ti+1

becomes

a

(82) deter-

ministic linear operator, its order can be exchanged with that

of the expected value operator:

E[Ti+1TiLejpi+1 = p] = Ti+1(p) (E[TiLe]) : (83)

Using requirement (78) for the expected value we further obtain
E[Ti+1TiLejpi+1 = p] = Ti+1(p)(T Le): (84)

Another error formula is presented for the diffuse case in 47.

This can be neglected for high number of iterations, or can

even be reduced by ignoring the first few iterations in the

averaged result 37; 47.

Finally, it must be explained why random variable P~ con-

verges to its expected value. Looking at formula (81) we can

realize that it consists of sums of the following form:

1 M

k

 MXk Ti+kTi+k
i=1

1 : : : Ti+1TiLe:

According to the theorems of large numbers, and particularly to the Bernstein46 theorem, these averages really converge to the expected value if the terms in the average are not highly
correlated (note that here the terms are not statistically inde-
TiIptej=6+nmdkeejTan.jnt+Tsakhtsihsaa1sti:ssru:aa:mnlTwdejdoaymLbseyvtsrmahuroeoiausibtlfdloethfnseotThtsiehe+aqlkavuTweeins+sctokreof nol1agf:rogc: po:eTernrrieualtmLaoterbisoeanransri)def.
generated from independent random variables.

5.1. Other averaging techniques
In the previous section we solved the problem that stochastic iteration is not convergent by simply averaging the values generated during iteration. There are other averaging schemes, however, that use even more combinations of the

c Institute of Computer Graphics 1998

22 Szirmay-Kalos / Stochastic Methods in Global Illumination

preceding random operators. In the subsequent sections two such schemes are presented.

5.1.1. Semi-iteration

Semi-iteration37 uses the following formulae to derive a new

value from the previous one:

L0n Ln

= =

Le n

+LT0nn+L(n1

1;

n)



Ln

1;

P~n = MLn;

(87)

where n is an appropriate sequence that converges to 0, as for example, n = 1=n.

To allow comparison, the corresponding formulae of the

normal iteration are also presented here:

Ln = Le + TnLn 1; P~n = n  MLn + (1 n)  P~n 1

(88)

Note that the fundamental difference is that semi-iteration uses the average of the previous samples not only in the final estimate but also to continue iteration. Semi-iteration thus can use all combinations of the preceding random operators to compute the actual result. However, it also has energy defect.

5.1.2. D-step iteration

Let us approach stochastic iteration from the direction of re-

ducing the bias of finite-length random walks. The bias can

Ltbieonelimeinwahteedn

using a simple correction of the emission calculating higher order interreflections.

func-

Note that a global walk of length D provides the following

terms:
Le + T1Le + T(1;2)Le : : : + T(1;D)Le;

M global walks are generated, then the number of estimates for bounces of 0 to D is M, for bounces of D + 1 to 2D is M 1, for bounces 2D + 1 to 3D is M 2 etc., which still
results in some small energy defect.
This type of iteration takes D steps before making an it-
eration step, which allows the combination of the steps in more sophisticated ways. Such a combination happens in bidirectional path-tracing using multiple deterministic steps30 and also in global ray-bundle tracing62.
5.2. Definition of random transport operators
In order to use this general stochastic iteration scheme in practice, the key problem is the definition of the random transport operator. This operator should meet the requirement of equation (78) and should be easy to compute.
For the continuous case, a single application of the transport operator contains a directional integral. For the finite element case, the transport operator also includes the projection to the adjoint basis which requires additional integration in the domain of basis functions. This additional integration means a surface integral for the diffuse radiosity setting and also for the ray-bundle tracing. For other non-diffuse finiteelement methods a surface and a directional integrals need to be evaluated (note that directional integrals are sometimes "hidden" by integrals on the surfaces visible at different directions).
Following the general concepts of Monte-Carlo methods, we usually do not intend to compute the integrals explicitly, but want to get them as an expected value. Thus different random transport operators can be classified according to which integrals are evaluated explicitly using some deterministic quadrature and which integrals are computed implicitly as an expectation value.

where
T(i;j) = TjTj 1 : : : Ti+1Ti:

5.3. Transport operator for the continuous, non-diffuse setting

maTtehufosrhTav(1i;nDg)cLoem=puTteDdTthDe

first
1::

:wTa2lkT, 1wLe ea.lsLoehtauvseuasneetshtiis-

estimate to correct the emission function in the higher order

terms when the second walk is computed:

Le+TD+1(Le+T(1;D)Le)+: : :+T(D+1;2D)(Le+T(1;D)Le) =

Le + TD+1Le + : : : + T(D+1;2D)Le+

T(1;D+1)Le + : : : + T(1;2D)Le:

(89)

This gives us estimates not only for the bounces from 0 to D

but also for bounce will

tshtoerbeoTu(n1c;Des)Lfreo+m

TD(1+;2D1)Ltoe2, Dwh. iAchgacianntbhee

lastused

to compensate the emission. Thus after the second step we
have estimates for the 0 to 3D bounces. Asymptotically, this

method will generate estimates for all bounces. However, if

The continuous formulation has just a single directional integral, thus a random transport operator can evaluate this single integral implicitly. This results in a method that uses a "single" random walk to obtain the solution.
An example of such single walk techniques is the following modification of the light tracing algorithm63:
In each step i a ray is obtained that has random origin ~yi and direction !i with a probability that is proportional to the
cosine weighted radiance of this point at the given direction. This ray is traced and the whole power
ZZ
 = L(y~; !0) cos y~ d!0 dy~
S

is transported to that point ~x which is hit by the ray. Formally

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

23

the random transport operator is
(T L)(~x; !) =   (~x h(y~; !i))  fr(!i; ~x; !): (90)
Interestingly this iteration is a sequence of variable length random walks, since at each step the point that is last hit by the ray is only selected with a given probability as the starting point of the next ray. This probability depends on
the albedo a~xi (!i) of the found point.
The algorithm selects initially a point from a lightsource and then starts a random walk. The walk finishes after each
step with probability 1=(1 + a~xi(!i)) and also when the ray
hits no object. If a walk finishes, another walk is initiated from the lightsource. When the walk is continued, the trans-
ferred power is weighted by (1 + a~xi(!i)), which provides
unbiased estimate even if less number of samples are used to simulate higher order bounces. This technique is called the Russian roulette2; 57.

5.4. Random transport operators for the diffuse radiosity

In the gathering type radiosity algorithms the projected transport operator has the following form
TF L = F  L:

T P H  PpArlotejercntaetdivpeloyt,esnhtioaolteinqguartaidoinosiFt0y

algorithms are
=:

based

on

the

T TAccording to
we need to find

rtahnedboamsicopreeqrautiorersmeFnt

of or

stFo0chtahsatticbeithearvaetioans

the real operator in average, that is

E[TFL] = F  L;

(91)

E[TF0P] = H  P:

(92)

F L H PThe evaluation of (  )i or alternatively (  )ji re-
quires a surface and a directional integration (or in other for-
mulations two surface integrations).

The possible alternatives for a random transport operator are

1. Both integrals are explicitly computed but only for a randomly selected subset of the patches.
2. The surface integral explicitly computed but the directional integral implicitly.
3. Compute the surface integral implicitly but the directional integral explicitly. This method can, for example, use hemicubes for the directional integration but selects the center of the hemicube randomly on the patch.
4. Both integrals are computed implicitly.

5.4.1. Stochastic radiosity
In stochastic radiosity38, the randomized operator is simplified in a sense that it first selects a single (or a few) patches

with probability proportional to their power and then calcu-

Plaaltletshethpeotwraenrsfer=onPly nkfr=o1m

this important patch as if it
k: Thus here both integrals

had are

explicitly computed but only for a subset of patches.

To prove that it meets requirement stated by equation (92),
let us examine the new power of patch i and suppose that patch j has been selected.

(TF0P)ji = Hij  

(93)

PSince the probability of selecting patch j is j =, the ex-

pectation of the new power is

E[(TF0P)ji]

=

Xn Hij
j=1



Pj


=

Xn Hij
j=1

 Pj

(94)

which we wanted to prove.

5.4.2. Transillumination radiosity

The transillumination radiosity method37; 66 has also a

stochastic iteration version. It defines the random transport

otipoenrsat!or10 ;b:y:

:u!niM0foramnldy

selecting allowing

M transillumination direc-
patches to interact only in

these transillumination directions. In order to calculate these

interactions, a large discretized window is placed perpendic-

ularly to each transillumination direction and the radiance

transfer to a patch is approximated by elementary transfers

going through the pixels covering the projection of the patch.

Let us consider a single transillumination direction. Pro-
jecting patch Ai onto a plane that is perpendicular to the
transillumination direction and then approximating the inte-
gral of the incoming radiance here by a discrete sum, we get Z
L(h(~x; !d0 ))  cos d0 d~x =
Ai

Z
L(h(~x0;

!d0 ))  d~x0  X Lbuerd[P]  A:

(95)

Ap i

P 2Ap i

wpibahltecehrienib,pauinxdeelrdAP[Piis]ntshttoehreseisztretahnoesfiialnldupemixxienolafottfihotanhtepdbairutecfcfhetiwro(nhfiigc!hud0riesfr1vo7ims)-.

transillumination direction

Api

d

x Ai

L buffer[P]
pixel P A
transillumination plane

Figure 17: Integration on the transillumination plane

c Institute of Computer Graphics 1998

24 Szirmay-Kalos / Stochastic Methods in Global Illumination

Thus the random transfer operator is

(TFL)ji

=

4

 fi  M

A

XM d=1

X
P 2Ap

Lbuerd [P ]:

i

(96)

If the transillumination directions are uniformly distributed and the buffer is uniformly jittered, then the expected value of this operator is

E[(TFL)ji]

=

1 M

XM d=1

Z



Z
P

X Lbuerd[P]  fi 
P 2Ap i

dp d!d0 :

If uniform jittering is applied during rendering into the buffer, then we can usually assume that the discrete approximation of the positional radiance distribution gives back the

real distribution in the average case, that is

Z

X

Z
Lbuerd[P] dp =

L(h(~x0;

!d0 )) d~x0:

P

P 2Ap i

Ap i

(97)

However, this statement is not always true if incremental polygon filling algorithms are applied62; 63. Note, for example, then an incremental polygon filling algorithm always generates an approximation whose width and height are at

least 1. Thus this assumption is correct if the resolution of the discrete buffer is high enough to project each polygon onto at least a few pixels.

Substituting this to the expectation value integral we get

E[(TFL)ji]

=

1 M

XM Z d=1 


Z
Ap

L(h(~x0;

!d0 )) d~x0  fi d!d0 =

i

ZZ
L(h(~x0; !0))  fi  cos 0 d~xd!0:

(98)


 Ai

Using L(h(~x0;

!0))

=

Pn j=1

bj

(h(~x0;

!0))  Lj and

equation (42), we can prove that the expectation really gives

back the real projected transport operator:

E[(TFL)ji] =

Xn Z Z bj(h(~x0; !0))ficos d0 d~xd!0Lj = Xn Fij Lj:

j=1 
 Ai

j=1

(99)

5.4.3. Stochastic ray-radiosity
Stochastic ray-radiosity40 approximates the transport oper-
ator by M random rays that are sampled proportionally to
the power of the patches. On a patch the starting point of

the ray is sampled using a uniform distribution, while the
direction follows a cosine distribution. A single ray carries
=M power. Thus this method approximates both integrals
implicitly.

Let us examine the case when a single ray is selected

(since different rays are sampled from the same distribution,
the effect of M rays will be M times the effect of a single ray in the expected value). Suppose that patch j is selected

Pas a shooting patch. The probability of the selection event is

a

j =.
patch

Thus the probability
and a direction ! is

density

of

selecting

a

point

~x

of

Pj




1 Aj



cos :

This transfers =M power to the patch that is hit by the

ray where the reflected power is computed. Thus the random

transport operator for a single ray is

E[(TF0P)ji] =

M  fi  Xn Z
j=1Aj

Z



bi(h(~y;

!))



 M



1 Aj



cos



dy~d!



Pj


=

Xn fi j=1 Aj

Z

Aj

Z



bi(h(y~; !))  cos  d~yd!  Pj = Xn Hij  Pj:
j=1

(100)

5.5. Transport operators for the non-diffuse finite-element case

When moving towards the non-diffuse case, another require-

ment must be imposed upon the random transport operator. It

must not only meet the requirement of equation (78), be easy

Tto compute,
tion of the

ibuLt

it must also allow the compact representafunctions. This extra requirement is evident

if we take into account that unlike in the diffuse case, the

Tdomain
domain

of of

LiisLa(f4o-rdirmaye-nbsuinodnlael

continuous space, so is the tracing only 2-dimensional

continuous space). From the point of view of compact rep-

resentation, what we have to avoid is the representation of

these functions over the complete domain.

Thus those transport operators are preferred, which re-
T Tmiqscsiounifningorseeluiessntt"hadsdteootwvofmahtdhlaiueceiefinhfnopodelofoliorLmnawtna"jidiu)nn.osgtNmpsioontoeitnepaptsetfh:trehaafiwettrostv"rhtadealouiermeva,naaowldiufnohaLmiptciooiihzsinnairntotesifoq"tunu(riiepnr.eoLgddi.ne.nittUonepwrpai-
to now, we have had complete freedom to define the set of randomization points. One straightforward way is defining this set to be the same as the domain of the radiance function and using random transport operators that require the

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

25

value of the radiance function at their randomization points. Although this equivalence is not obligatory, it can significantly simplify the computations, since when the randomization point is generated, the required domain point is also known.

Using random operators that evaluate the radiance in a

Tsingle point is not
"point" can result in

aencoonutgihnuoinusitsielLf,

since even a single function, which must

be stored and re-sampled in the subsequent iteration step and

Ttahlseocboymtphleetme ceaalscuurleamtieonnt.oTf heisLoluuntitoilnitisisthkenopwosntpwohneinreg

of its

value is needed in the next iteration step and by the mea-

suring device. In this way, the random operator should be

evaluated twice but just for two points.
Tand the previous "points" resulting in [

O(npcie)Lfo(rpit)h]e(paic+tu1a),l

and and

Tonce for peye which is needed
for previous point providing [

by(ptih)eLm(peia)s]u(prienyge)d.evice

The complete iteration goes as follows:

Twhere F is a composition of the original transport operator
and its projection to the adjoint base Z
TF L(!) = F(!0; !)  A(!0)  L(!0) d!0: (102)


Let the random approximation of the transport operator be the transfer of the radiance of all surface points of the scene in a single uniformly distributed random direction. This transfer can be effectively realized by sending a ray-
btournidsle!0into this direction. Thus the random transport opera-
(T L)(!) = 4  F(!0; !)  A(!0)  L(!0): (103)
If the directions are sampled from a uniform distribution, then this obviously gives back the integral operator as an expected value:

P =0 fLFoi(rnpdPiP1p=)n=1e=w1raMLtn=odePMo(Lpmne1eld(y)wpoey1e=)i++[T(1(p1i)=Li)(p iP)](peye)
FLi(npdi+pi1+)1=raLndeo(mpil+y1) + [T (pi)L(pi)](pi+1)
endfor
Display final image

Note that using normal iteration we have to store the ra-
diance L just in a single point pi, while in semi-iteration all

the previous points should be remembered. In semi-iteration

the important feature that the transport operator should be
evaluated just for a single point pair pi; pi+1 is lost. In the case of D-step iteration, the computation needs to be done

at a by

Dfi2 ni.teFonrumsebmeri-iotef rpatoiionnt,

pairs whose number is limited however, there is no such up-

per limit, which eventually results in requiring the complete

representation of the function. This can be allowed in diffuse

case, but not in the general case, thus in methods handling
the non-diffuse case normal iteration is preferred, D-step it-

eration is still allowed, but we have to avoid semi-iteration,

despite of its better combination capability.

5.5.1. Global ray-bundle based iteration

Recall that the finite-element approximation applied by raybundle tracing converts the rendering equation to the following form (section 4.4.7):

L(!) = Le(!) + TF L(!);

(101)

Z
E[(T L)(!)] =

4F(!0;

!)A(!0)L(!0)

d!0 4

= TF L(!):




(104)

gIennethraeteddefidinrieticotinonofanthde!r0ainsdtohme porepveiroautoslry!geinsetrhaeteadcdtuiraellcy-

tion. Thus a "randomization point" is a global direction in

this method.

The resulting algorithm is quite simple. In a step of the stochastic iteration a new direction is found and this direction together with the previous direction are used to evaluate the random transport operator. Then an image estimate is computed by reflecting the previously computed radiance estimate towards the eye. The complete algorithm is summarized in the following:

ffGooerrnmeearca=htep1tahttecohfiMrisdt droaoLnd[oi]m=gLloieb(a!l1d)irection !1 // iteration cycles

Calculate the image estimate relfecting
the incoming radiance L[1]; L[2]; : : : L[n] from !m towards the eye

Average the estimate with the Image

Generate random global direction
for 4eLancehwPp[ait]njc==h L1i fdie~i(o(!!mm+;1!)m++1) 

!m+1 A(i; j;

!m)=Ai



L[j]

endfor

endfor

Display Image

The methods to calculate the reflection of the incoming radiance towards the eye are the same as in ray-bundle tracing.

c Institute of Computer Graphics 1998

26 Szirmay-Kalos / Stochastic Methods in Global Illumination

5.6. Can we use quasi-Monte Carlo techniques in iteration?
Stochastic iteration can also be viewed as a single walk which uses a single sequence of usually 4-dimensional ran-
T T Tdraaronemduoiszmeadtiizoianntiionpntoepignortaisnl tq(suf)o,ardanrradatuythr-ebesunsidi+mlekulttira+ankceion1ugs:l:2y:-fdoiimrLaelenlsktieo.rnmasl
It means that the randomization points should support not only 4-dimensional integration, but using subsequent pairs also 8-dimensional integration, using the subsequent triplets
12-dimensional integration, etc. Sequences that support kdimensional integrals when subsequent k-tuples are selected kare called -uniform sequences29. The widely used Halton
or Hammersley sequences are only 1-uniform, thus theoretically they should provide false results.
This is obvious for the Hammersley sequence, in which the first coordinate is increasing. Such a sequence would search for only those multiple reflections where the angle corresponding to the first coordinate always increases in subsequent reflections. It is less obvious, but is also true for the Halton sequence. Due to its construction using radical inversion, the subsequent points in the sequence are rather far, thus only those reflections are considered, where the respective angle changes drastically.
Error of stochastic iteration in the Cornell box 1
stochastic iteration (rand) stochastic iteration (drand48)
QMC iteration (Halton) QMC iteration (Hammersley, m=10000)
QMC iteration (pi^n)

In order to demonstrate these problems, we tested the

ray-bundle based iteration for different random (i.e. pseudo-

random) and low-discrepancy sequences. The test scene was

the Cornell box. In figure 18 we can see that the Hammers-

ley sequence gives completely wrong result and the Halton

sequence also deteriorates from the real solution. The two

random generators (rand and drand48), however, performed

quite-well.

f gThe figure also included a modification of the qn = n fgquasi-Monte Carlo sequence (operator selects the frac-

tional part of a number). This is believed to be (but has not

1been proven to be) -uniform15. However, this sequence

is very unstable numerically, therefore we used
f( 2)  qn 1 mod 100000g scheme.

the qn

=

6. Initial smoothing: first shot
Monte-Carlo integration is efficient if the integrand is relatively smooth and does not exhibit high variations. For global methods, point lightsources may pose problems. Fortunately, these lightsources can be easily handled separately by deterministic techniques.
This algorithm can be applied in a preprocessing step, and is called the first-shot. For the diffuse radiosity problem, the preprocessing type first-shot algorithm has been first presented in 50, extended to multiple interreflections in 9 and has been generalized to non-diffuse environments in 69.

L1 error

=+
0.1

0.01 1

10

100

1000

10000

number of iterations

Figure 18: Ray-bundle based stochastic iteration with random and quasi-random numbers

In order to avoid this problem without getting rid of the quasi-Monte Carlo sequences, 66 proposed the random scrambling of the sample points. The same problem arises, for example, when generating uniform distributions on a sphere, for which 9 proposed to increase the dimension of the low-discrepancy sequence.
Note that this problem is specific to quasi-Monte Carlo integration and does not occur when classical Monte-Carlo method is used to select the sample points (a random se-
1quence is -uniform29).

Figure 19: First shot technique

Formally, the unknown radiance L is decomposed into

two terms:

L = Lep + Lnp

(105)

wsohuerrceesL, Lepnpisisththee

emission emission

of of

the small, point-like lightthe area lightsources and the

reflected radiance. Substituting this into the rendering equa-

tion we have:

Lep + Lnp = Le + T (Lep + Lnp): (106)

Introducing the new lightsource term

Le = Le Lep + T Lep

(107)

Twhich
fect (

jLusetpr)e, pthlaeceesquthaetiopnoifnotrliLgnhptsoisurscimesil(aLretpo)

by the

their eforiginal

rendering equation:

Lnp = Le + T Lnp:

(108)

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

27

It means that first the direct illumination caused by the point lightsources must be computed, then they can be removed from the scene and added again at the end of the computation.

depInenddiefnfutsLe eenfvuirnocntimonenrtesquthireesstjoursatgoenoefetxhteradviarericatbiolen

inper

patch.
In non-diffuse environments, however, Le can be a non-

constant function, which is difficult to represent and store.

Instead, the incoming radiance received by the patches from

each point lightsource should be stored (this requires l ad-

ldiigtihotnsoaul rvcaersi)a.bWleshepneLr peaticshn,ewedheedrefol risa

the number of point given direction, then

it is computed on the fly from these incoming radiances.

7. Error and complexity of the stochastic global illumination methods

This paper reviewed a lot of different global illumination techniques. Thus at the end of the paper, a natural expectation would be a qualitative comparison of these methods, or set of criteria that tell for a particular scene which method is better than the others. However, ranking these methods is a very hard task.

Even the quality metrics are difficult to define. We can use, for example, error metrics and running time measurements, and say that if a methods gets more accurate results in shorter time than it is better than the other. The error metrics can be simple norms of the difference of the actual and a reference radiance function, or can even be based on perceptual based metrics45. Running time measurements depend also on the computer used. To formulate resource requirements of a particular algorithm in a machine independent way, complexity measures can be used.

Unfortunately, error measures and even abstract complexity measures are very difficult to derive analytically for a given algorithm. A taxonomy of different errors occurring when solving the rendering equation is presented in3. The error of the solution of the diffuse rendering equation was analyzed by 34. An error metric to guide Russian roulette and splitting has been introduced by 7.

The complexity of classical radiosity algorithms has been

investigated hierarchical

in 71 and algorithms

creoqnucilruedOed(nth2a)ttidmeete, rwmhinerisetinc,

nonis the

number of patches. Stochastic methods seem to be bet-
ter, since they can achieve O(n log n) time complexity

.48; 43; 54; 65; 6

In 66, we have provided a technique based on the transillumination method to reformulate the diffuse radiosity problem to make the integrand have finite variation, to fully take advantage of the improved performance provided by the low-discrepancy series. This reformulation also allowed to apply the Koksma-Hlawka inequality in analytic error formulae.

8. Conclusions
This paper presented a review of stochastic global illumination algorithms.
9. Acknowledgements
This work has been supported by the National Scientific Research Fund (OTKA), ref.No.: F 015884 and the AustrianHungarian Action Fund, ref.No.: 29p4, 32o¨u9 and 34o¨u28.
References
1. J. Arvo. Stratified sampling of spherical triangles. In Computer Graphics (SIGGRAPH '95 Proceedings), pages 437­ 438, 1995.
2. J. Arvo and D. Kirk. Particle transport and image synthesis. In Computer Graphics (SIGGRAPH '90 Proceedings), pages 63­66, 1990.
3. J. Arvo, K. Torrance, and B. Smits. A framework for the analysis of error in global illumination algorithms. Computer Graphics (SIGGRAPH '94 Proceedings), pages 75­84, 1994.
4. L. Aupperle and P. Hanrahan. A hierarchical illumination algorithms for surfaces with glossy reflection. Computer Graphics (SIGGRAPH '93 Proceedings), pages 155­162, 1993.
5. G. Baranoski, R. Bramley, and P Shirley. Fast radiosity solutions for environments with high average reflectance. In Rendering Techniques '96, pages 345­355, 1996.
6. P. Bekaert, L. Neumann, A. Neumann, M. Sbert, and Y. Willems. Hierarchical Monte-Carlo radiosity. In Rendering Techniques '98, pages 259­268, 1998.
7. M. R. Bolin and G. W. Meyer. An error metric for Monte Carlo ray tracing. In Rendering Techniques '97, pages 57­68, 1997.
8. C. Buckalew and D. Fussell. Illumination networks: Fast realistic rendering with general reflectance functions. Computer Graphics (SIGGRAPH '89 Proceedings), 23(3):89­98, July 1989.
9. F. Castro, R. Martinez, and M. Sbert. Quasi Monte-Carlo and extended first-shot improvements to the multi-path method. In Spring Conference on Computer Graphics '98, pages 91­102, 1998.
10. P. H. Christensen, D. Lischinski, E. J. Stollnitz, and D. H. Salesin. Clustering for glossy global illumination. ACM Transactions on Graphics, 16(1):3­33, 1997.
11. P. H. Christensen, E. J. Stollnitz, D. H. Salesin, and T. D. DeRose. Global illumination of glossy environments using wavelets and importance. ACM Transactions on Graphics, 15(1):37­71, 1996.
12. Michael Cohen and Donald Greenberg. The hemi-cube, a radiosity solution for complex environments. In Computer Graphics (SIGGRAPH '85 Proceedings), pages 31­40, 1985.
13. R. Cook, T. Porter, and L. Carpenter. Distributed ray tracing. In Computer Graphics (SIGGRAPH '84 Proceedings), pages 137­145, 1984.

c Institute of Computer Graphics 1998

28 Szirmay-Kalos / Stochastic Methods in Global Illumination

14. B. Cse´bfalvi. A review of Monte-Carlo ray tracing algorithms. In CESCG '97, Central European Seminar on Computer Graphics, pages 87­103, 1997.
15. I. Dea´k. Random Number Generators and Simulation. Akade´mia Kiado´, Budapest, 1989.
16. D. P. Dobkin, D. Eppstein, and D. P. Mitchell. Computing the discrepancy with applications to supersampling patterns. ACM Transactions on Graphics, 15(4):354­376, 1996.
17. P. Dutre, E. Lafortune, and Y. D. Willems. Monte Carlo light tracing with direct computation of pixel intensities. In Compugraphics '93, pages 128­137, Alvor, 1993.
18. A. Glassner. Principles of Digital Image Synthesis. Morgan Kaufmann Publishers, Inc., San Francisco, 1995.
19. P. Hanrahan, D. Salzman, and L. Aupperle. Rapid hierachical radiosity algorithm. Computer Graphics (SIGGRAPH '91 Proceedings), 1991.
20. M. Hyben, I. Martisovits, and A. Ferko. Scene complexity for rendering in flatland. In L. Szirmay-Kalos, editor, Spring Conference on Computer Graphics, pages 112­120, 1998.
21. D. S. Immel, M. F. Cohen, and D. P. Greenberg. A radiosity method for non-diffuse environments. In Computer Graphics (SIGGRAPH '86 Proceedings), pages 133­142, 1986.
22. H. W. Jensen. Importance driven path tracing using the photon maps. In Rendering Techniques '95, pages 326­335, 1995.
23. H. W. Jensen. Global illumination using photon maps. In Rendering Techniques '96, pages 21­30, 1996.
24. H. W. Jensen and N. J. Christensen. Photon maps in bidirectional Monte Carlo ray tracing of complex objects. Computers and Graphics, 19(2):215­224, 1995.
25. H. W. Jensen and P. H. Christensen. Efficient simulation of light transport in scenes with participating media using photon maps. Computers and Graphics (SIGGRAPH '98 Proceedings), pages 311­320, 1998.
26. J. T. Kajiya. The rendering equation. In Computer Graphics (SIGGRAPH '86 Proceedings), pages 143­150, 1986.
27. A. Keller. A quasi-Monte Carlo algorithm for the global illumination in the radiosity setting. In H. Niederreiter and P. Shiue, editors, Monte-Carlo and Quasi-Monte Carlo Methods in Scientific Computing, pages 239­251. Springer, 1995.
28. A. Keller. Instant radiosity. Computer Graphics (SIGGRAPH '97 Proceedings), pages 49­55, 1997.
29. D.E. Knuth. The art of computer programming. Volume 2 (Seminumerical algorithms). Addison-Wesley, Reading, Mass. USA, 1981.
30. E. Lafortune and Y. D. Willems. Bi-directional path-tracing. In Compugraphics '93, pages 145­153, Alvor, 1993.
31. E. Lafortune and Y. D. Willems. A 5D tree to reduce the variance of Monte Carlo ray tracing. In Rendering Techniques '96, pages 11­19, 1996.
32. B. Lange and B. Beyer. Rayvolution: An evolutionary ray tracing algorithm. In Photorealistic Rendering Techniques, pages 136­144, 1994.

33. G. P. Lepage. An adaptive multidimensional integration program. Technical Report CLNS-80/447, Cornell University, 1980.
34. D. Lischinski, B. Smits, and D.P. Greenberg. Bounds and error estimates for radiosity. In Computer Graphics Proceedings, Annual Conference Series, pages 67­75, 1994.
35. N. Metropolis, A. Rosenbluth, M. Rosenbluth, A. Teller, and E. Teller. Equations of state calculations by fast computing machines. Journal of Chemical Physics, 21:1087­1091, 1953.
36. D. P. Mitchell. Consequences of stratified sampling in graphics. Computer Graphics (SIGGRAPH '96 Proceedings), pages 277­280, 1996.
37. L. Neumann. Monte Carlo radiosity. Computing, 55:23­42, 1995.
38. L. Neumann, M. Feda, M. Kopp, and W. Purgathofer. A new stochastic radiosity method for highly complex scenes. In Proc. of the 5th. EG Workshop on Rendering, 1994.
39. L. Neumann, A. Neumann, and P. Bekaert. Radiosity with well distributed ray sets. Computer Graphics Forum (Eurographics'97), 16(3):261­270, 1997.
40. L. Neumann, W. Purgathofer, R. F. Tobler, A. Neumann, P. Elias, M. Feda, and X. Pueyo. The stochastic ray method for radiosity. In Rendering Techniques '95, pages 206­218, 1995.
41. H. Niederreiter. Random number generation and quasi-Monte Carlo methods. SIAM, Pennsilvania, 1992.
42. S. N. Pattanik and S. P. Mudur. Adjoint equations and random walks for illumination computation. ACM Transactions on Graphics, 14(1):77­102, 1995.
43. M. Pellegrini. Monte Carlo approximation of form factors with error bounded a priori. Discrete and Computational Geometry, 1997. (to appear).
44. William H. Press, Brian P. Flannery, Saul A. Teukolsky, and William T. Vetterling. Numerical Recipes in C (Second Edition). Cambridge University Press, Cambridge, USA, 1992.
45. J. Prikryl and W. Purgathofer. Perceptually based radiosity. In Eurographics '98, STAR -- State of the Art Report, 1998.
46. Alfre´d Re´nyi. Wahrscheinlichkeitsrechnung. VEB Deutscher Verlag der Wissenschaften, Berlin, 1962.
47. M. Sbert. The Use of Global Directions to Compute Radiosity. PhD thesis, Catalan Technical University, Barcelona, 1996.
48. M. Sbert. Error and complexity of random walk Monte-Carlo radiosity. IEEE Transactions on Visualization and Computer Graphics, 3(1), 1997.
49. M. Sbert, R. Martinez, and X. Pueyo. Gathering multi-path: a new Monte-Carlo algorithm for radiosity. In Winter School of Computer Graphics '98, pages 331­338, Plzen, Czech Republic, 1998.
50. M. Sbert, X. Pueyo, L. Neumann, and W. Purgathofer. Global multipath Monte Carlo algorithms for radiosity. Visual Computer, pages 47­61, 1996.

c Institute of Computer Graphics 1998

Szirmay-Kalos / Stochastic Methods in Global Illumination

29

51. P. Schro¨der, S.J. Gortler, M.F. Cohen, and P. Hanrahan. Wavelet projections for radiosity. Computer Graphics Forum, 13(2):141­151, 1994.
52. P. Shirley. A ray-tracing method for illumination calculation in diffuse-specular scenes. In Proc. Graphics Interface, pages 205­212, 1990.
53. P. Shirley. Discrepancy as a quality measure for sampling distributions. In Eurographics '91, pages 183­194. Elsevier Science Publishers, 1991.
54. P. Shirley. Time complexity of Monte-Carlo radiosity. In Eurographics '91, pages 459­466. Elsevier Science Publishers, 1991.
55. P. Shirley. Monte Carlo simulation and integration. SIGGRAPH '93 Global Illumination Course Notes (42), 1993.
56. P. Shirley, C. Wang, and K. Zimmerman. Monte Carlo techniques for direct lighting calculations. ACM Transactions on Graphics, 15(1):1­36, 1996.
57. F. Sillion and Puech C. Radiosity and Global Illumination. Morgan Kaufmann Publishers, Inc., San Francisco, 1994.
58. F. Sillion, G. Drettakis, and C. Soler. Clustering algorithm for radiance calculation in general environments. In Rendering Techniques '95, pages 197­205, 1995.
59. F. X. Sillion, J. R. Arvo, S. H. Westin, and D. P. Greenberg. A global illumination solution for general reflectance distributions. Computer Graphics (SIGGRAPH '91 Proceedings), 25(4):187­198, 1991.
60. I. Sobol. Die Monte-Carlo Methode. Deutscher Verlag der Wissenschaften, 1991.
61. M. Stamminger, Slussalek P., and H-P. Seidel. Three point clustering for radiance computations. In Rendering Techniques '98, pages 211­222, 1998.
62. L. Szirmay-Kalos. Global ray-bundle tracing. Technical Report TR-186-2-98-18, Institute of Computer Graphics, Vienna University of Technology, 1998. www.cg.tuwien.ac.at/.
63. L. Szirmay-Kalos. Stochastic iteration for non-diffuse global illumination. Technical Report TR-186-2-98-21, Institute of Computer Graphics, Vienna University of Technology, 1998. www.cg.tuwien.ac.at/.
64. L. Szirmay-Kalos, B. Cse´bfalvi, and W. Purgathofer. Importance-driven quasi-Monte Carlo solution of the rendering equation. In Winter School of Computer Graphics '98, pages 377­386, Plzen, Czech Republic, 1998.
65. L. Szirmay-Kalos and T. Fo´ris. Sub-quadratic radiosity algorithms. In Winter School of Computer Graphics '97, pages 562­571, Plzen, Czech Republic, 1997.
66. L. Szirmay-Kalos, T. Fo´ris, L. Neumann, and B. Cse´bfalvi. An analysis to quasi-Monte Carlo integration applied to the transillumination radiosity method. Computer Graphics Forum (Eurographics'97), 16(3):271­281, 1997.
67. L. Szirmay-Kalos, T. Fo´ris, and W. Purgathofer. Non-diffuse, random-walk radiosity algorithm with linear basis functions. Machine Graphics and Vision, 7(1):475­484, 1998.

68. L. Szirmay-Kalos, T. Fo´ris, and W. Purgathofer. Quasi-Monte Carlo global ray-bundle tracing with infinite number of rays. In Winter School of Computer Graphics '98, pages 386­393, Plzen, Czech Republic, 1998.
69. L. Szirmay-Kalos and W. Purgathofer. Global ray-bundle tracing with hardware acceleration. In Rendering Techniques '98, pages 247­258, 1998.
70. L. Szirmay-Kalos and W. Purgathofer. Quasi-Monte Carlo solution of the rendering equation. Technical Report TR-186-298-22, Institute of Computer Graphics, Vienna University of Technology, 1998. www.cg.tuwien.ac.at/.
71. La´szlo´ Szirmay-Kalos and Ga´bor Ma´rton. On convergence and complexity of radiosity algorithms. In Winter School of Computer Graphics '95, pages 313­322, Plzen, Czech Republic, 14­18 February 1995.
72. R. F. Tobler. ART -- Advanced Rendering Toolkit. 1998. http://www.cg.tuwien.ac.at/ reseach/ rendering/ ART.
73. R. F. Tobler, L. Neumann, M. Sbert, and W. Purgathofer. A new form factor analogy and its application to stochastic global illumination algorithms. In Rendering Techniques '98, 1998.
74. R. F. Tobler, A. Wilkie, M. Feda, and W. Purgathofer. A hierarchical subdivision algorithm for stochastic radiosity methods. In Rendering Techniques '97, pages 193­203, 1996.
75. E. Veach. Robust Monte Carlo Methods for Light Transport Simulation. PhD thesis, Stanford University, http://graphics.stanford.edu/papers/veach thesis, 1997.
76. E. Veach and L. Guibas. Optimally combining sampling techniques for Monte Carlo rendering. In Rendering Techniques '94, pages 147­162, 1994.
77. E. Veach and L. Guibas. Bidirectional estimators for light transport. In Computer Graphics (SIGGRAPH '95 Proceedings), pages 419­428, 1995.
78. E. Veach and L. Guibas. Metropolis light transport. Computer Graphics (SIGGRAPH '97 Proceedings), pages 65­76, 1997.
79. J. R. Wallace, M. F. Cohen, and D. P. Greenberg. A two-pass solution to the rendering equation: A synthesis of ray tracing and radiosity methods. In Computer Graphics (SIGGRAPH '87 Proceedings), pages 311­324, 1987.
80. G. J. Ward. The RADIANCE lighting simulation and rendering system. Computer Graphics, 28(4):459­472, 1994.
81. G. J. Ward, F. M. Rubinstein, and R. D. Clear. A raytracing solution for diffuse interreflection. Computer Graphics, 22(4):85­92, 1988.
82. T. Warnock. Computational investigations of low-discrepancy point sets. In H. Niederreiter and P. Shiue, editors, MonteCarlo and Quasi-Monte Carlo Methods in Scientific Computing, pages 354­361. Springer, 1995.
83. A. Wilkie, R. F. Tobler, and W. Purgathofer. Photon radiosity lightmaps for CSG solids. In CSG '98 -- Set theoretic Solid Modelling Techniques and Applications, 1998.
84. K. Zimmerman and P. Shirley. A two-pass solution to the rendering equation with a source visibility preprocess. In Rendering Techniques '95, pages 284­295, 1995.

c Institute of Computer Graphics 1998

