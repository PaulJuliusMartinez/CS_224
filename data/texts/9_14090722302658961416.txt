Finite Element Techniques for Fitting a Deformable Model to 3D Data

Tim McInerney

Department of Computer Science University of Toronto
Toronto, ON, Canada, M5S 1A4

Demetri Terzopoulos1

Abstract
This paper presents a physics-based approach to surface reconstruction using an elastically deformable "sheet" model. The model is based on a thin-plate under tension spline which deforms to fit visual data according to internal forces stemming from the elastic properties of the surface and external forces which are produced from the data. We employ the finite element method to represent the model as a continuous surface. We implement two versions of the sheet using two different finite elements. The first is a triangular, quintic finite element whose nodal variables comprise the position of the surface plus its first and second partial derivatives. This element is "natural" in the sense that the nodal variables reflect each of the partial derivatives that occur in the spline's strain energy functional. The partial derivatives are useful in measuring the differential geometric properties of the fitted surface. The second element is a rectangular, bicubic finite element whose nodal variables also include some of the partial derivatives of the surface. We apply the sheet model to the reconstruction of various 3D data sets generated by several different sensing technologies related to CAGD and terrain mapping.
1 Introduction
General purpose shape reconstruction in low-level visual processing requires models with the ability to assume a wide range of shapes. The models must extract meaningful information from noisy sensor data while making the weakest possible assumptions about observed shapes. Deformable models can stretch, bend, and twist to assume complex freeform shapes; hence, they seem ideally suited to this task. These models integrate, regularize, and approximate the data to produce a globally consistent interpretation.
Surface reconstruction techniques based on splines have attracted significant interest for many years because of their versatility. However, the dynamic form of this type of surface reconstruction was introduced fairly recently by Terzopoulos et al. [13]. They proposed a dynamic deformable cylinder model constructed from generalized splines and developed force
1Fellow, Canadian Institute for Advanced Research

field techniques to fit the model to image data. The dynamic model fitting approach is being pursued by several researchers [6, 9, 2, 3, 14, 5, 15], as it is in this paper.
This paper presents a physics-based approach to surface reconstruction using an elastically deformable "sheet" model. The model is based on physically motivated multi-dimensional generalizations of classical splines. The model is dynamic, and its deformation is governed by the laws of nonrigid motion. The formulation of the motion equations includes strain energies, simulated forces, and other physical quantities. The strain energy stems from a thin-plate under tension spline, and deformation results from the action of internal forces which describe continuity constraints and external forces which describe data compatibility constraints.
We employ the finite element method to discretize our deformable sheet into a set of connected element domains. The finite element method provides an analytic surface representation and it generally requires fewer discretization points than finite difference techniques for the same degree of accuracy. We implement two versions of the sheet model using two different finite elements. The first is a triangular, quintic finite element whose nodal variables reflect the derivative terms found in the thin-plate under tension energy expression. That is, the nodal degrees of freedom include not only the nodal positions, but all of the first and second order partial derivatives of the surface as well. These quantities are useful in the analysis of the fitted model surface. The second element is a rectangular, bicubic finite element whose nodal variables also include some of the partial derivatives of the surface.
Finite element representations for variational problems in vision were first explored in [11]. Our formulation applies the finite element method to the thin-plate under tension spline proposed in [12] in order to derive discrete nonrigid dynamics equations. Our work is related to that of [1] who also develop a deformable surface model which is based on the thin-plate under tension spline.

2 Dynamic Deformable Surface Model
The deformable sheet is a rectangular open surface represented as a single-valued scalar function z(x, y) defined on a bounded domain in the (x, y) image plane, where z represents the lateral displacement of the sheet. We construct the sheet using a simulated thin-plate material under tension. The deformation energy of this material serves as a smoothness constraint which compels the sheet to vary smoothly almost everywhere. The data constraints apply forces which pull the sheet laterally from its nominally planar state to the data points.
The deformation energy is given by the functional

Ep(z) =

10 |zx|2 + 01 |zy|2 +

20 |zxx|2 + 11 |zxy|2 + 02 |zyy|2 dx dy, (1)
where the x and y subscripts denote derivatives in the x and y directions respectively. Ep is a controlledcontinuity spline defined in [12]. The nonnegative weighting functions ij(x, y) and ij(x, y) control the elasticity of the material. The 10 and 01 functions control the tensions in the x and y directions, respectively. The 02 and 20 functions control the bending rigidities in the x and y directions, respectively. The 11 function controls the twisting rigidity. Increasing the ij has a tendency to decrease the surface area of the material, while increasing the ij tends to make it more rigid. In general, the weighting function may be used to introduce depth and orientation discontinuities in the material. In this paper, however, we do not pursue this topic and we set the functions to constant values ij(x, y) = ij and ij(x, y) = ij.
The expression for the total energy of the deformable sheet is

where

Esheet(z) = Ep(z) + Eext(z), Eext = - zf (x, y) dx dy

(2) (3)

is a data energy derived from the data forces f (x, y). We fit the model to the data by minimizing this energy.
Figure 1 illustrates the surface reconstruction problem using the sheet model. The figure shows the sheet fitted to several data points using different values for ij(x, y) and ij(x, y).
In keeping with the physical nature of our reconstruction technique, we fit the deformable sheet model to data by making it dynamic. A dynamic formulation naturally supports model visualization during the data fitting process, and, if needed, allows a user to introduce constraint forces to pull the model out of local minima towards a good solution.
In a dynamic formulation, the positions of material points becomes a time-dependent function z(x, y, t)

(a) (b) (c)
Figure 1: Sheet fitted to nine data points. (a) Sheet with ij = 0.8, ij = 0.0. (b) ij = ij = 0.4. (c) ij = 0.0, ij = 0.8.

and the simulated material is imbued with mass and damping densities. Using Lagrangian dynamics the energies yield forces and Esheet(z) is minimized when the forces equilibrate and the model becomes stationary z/t = 2z/t2 = 0.
The dynamic behavior of the model during the fitting process is governed by

µ

2z t2

+



z t

+

z Ep

=

f (x, y, t).

(4)

where the first term represents the inertial forces due to the mass density µ(x, y), the second term represents the damping forces due to the damping density (x, y), the third term represents the elastic force which resist deformation, and finally f (x, y, t) represents the data forces.

3 Finite Element Representation
To apply the finite element method, we tessellate the continuous image domain (x, y) into a mesh of element subdomains Ej. We approximate the continuous z as a weighted sum of piecewise polynomial basis functions Ni:

N
z^(x, y, t) = Ni(x, y)qi(t)  z(x, y, t),
i=1

(5)

where qi is a vector of nodal variables associated with mesh node i. We define q = [q1 , . . . , qi , . . . , qN ] .
Substituting (5) into (4) yields the discrete equations of motion

Mq¨ + Cq + Kq = fq,

(6)

where the mass matrix M, damping matrix C, and

stiffness matrix K are sparse, symmetric matrices and

fq are nodal data forces. These global matrices and nodal data forces may be assembled from their associated local element matrices, Mj, Cj, Kj, and nodal forces fqj, by expanding each element matrix appropriately into a q × q matrix and then summing. For

example:

M

K=

Kjq×q ,

(7)

j=1

where Kj is the element stiffness matrix associated with element Ej, j = 1, . . . , M .
We now derive expressions for Mj, Cj, Kj, and fqj from element kinetic and potential energy functionals. Let zj(x, y, t) be the position of material point x, y within Ej, and let qj denote the concatenation of nodal variables for all the nodes of Ej. Following equation (5), we write the element trial function

z^j(x, y, t) = Nj(x, y)qj(t)  zj(x, y, t), (8)

where Nj are known as element shape functions. Note that the basis functions Ni are obtained by superposing the shape functions associated with node i. The element velocity is z^j/t = Njq j, where q j(t) is the rate of change of the nodal variables.
The kinetic energy associated with element Ej be expressed as

1 2

µ

z^j t

z^j t

dx dy

=

1 2

q j

Mjq j ,

Ej

(9)

where the element mass matrix is given by

Mj =

µNj Nj dx dy.

(10)

Ej

We introduce simple velocity-proportional kinetic energy dissipation according to the dissipation functional

1 2



z^j t

z^j t

dx dy

=

1 2

q j

Cj q j ,

Ej

(11)

where the element damping matrix is given by

Cj =

Nj Nj dx dy.

(12)

Ej

According to (1) the element deformation matrix may be expressed as

Epj(z) =

j j dx dy

Ej

(13)

where the strain vector is

j=

zj x

,

zj y

,

2zj x2

,

2zj xy

,

2zj y2

(14)

and the stress vector is

j

 = 

1j 0 0
0
0

0 0j 1 0
0

0
0 2j0 0

0 0 0 1j1

0

0 0 0

 j = Dj j, (15)

0 0 0 0 0j2

y

=0

 3:( x3 ,y3 )
1 -  - , = 0

 (0,1 )

1:( x1 , y1 ) =0

2:(

x2

,y 2

)



(0,0 ) (1 , 0 )  x

Figure 2: C1 continuous triangular element. The three nodes are numbered.

Using (8), we can write

j = Bj qj ,

(16)

where Bj is the element strain matrix. Inserting the expressions for j and j into (13) yields

Epj (z) = qj Kj qj where the element stiffness matrix is given by

(17)

Kj =

Bj DjBj dx dy.

(18)

Ej

Finally, according to (3), the potential energy in element Ej due to data forces f j(x, y, t) is

- zjf j(x, y) dx dy = -qj fqj,
Ej
where the nodal data forces are given by

(19)

fqj =

Njf j dx dy.

Ej

(20)

3.1 Triangular C1 Finite Element
The first version of the sheet model uses a fifthorder triangular finite element[4]. The nodal variables of this element are z, along with its first and second partial derivatives evaluated at each node i. The nodal variable vector for the sheet is therefore

qi(t) = zi, ( zx)i , ( zy)i , ( zxx)i , ( zxy)i , ( zyy)i . (21)
These nodal variables reflect each of the partial derivatives that occur in the thin-plate under tension energy (1) functional.
Figure 2 shows the C1 continuous element defined locally in the dimensionless oblique coordinates (, ). In this local coordinate system, the global coordinates (x, y) can be expressed as

x = (1 -  - )x3 + x1 + x2 y = (1 -  - )y3 + y1 + y2

(22)

where (xi, yi) are the global coordinates at the nodes of the triangular element (as numbered in the figure), and the local nodal variable vector becomes

qi (t) = zi, (z)i , (z)i , (z)i , (z)i , (z)i . (23)
The transformation from global to local coordinates is

qi = Tiqi

(24)

where the transformation matrix Ti is specified in [4] (pp. 100­101).
Concatenating the qi at each of the three nodes of element j, we obtain the 18-dimensional element nodal vector qj = [q1 , q2 , q3 ] . According to (8), we can write the local trial function as z^j(, , t) = Nj(, )qj (t). The nodal shape functions Ni(, ) which are contained in the 18 × 18 matrix Nj are specified in [4] (pp. 100­101). Note that the polynomial basis of the element is complete up to fourth-order terms and contains three fifth-order terms. The trial functions are C within elements and they ensure C1 continuity between elements. Since (1) contains up to second order derivatives, the element is conforming.
The shape functions are expressed in terms of the local coordinates (, ) and it is convenient to work with these coordinates. Thus, the required derivatives of the shape functions in the strain matrix B are computed using repeated applications of the chain rule and equation (23). Also, a function f (x, y) may be integrated over Ej by transforming to the local coordinate system:

f (x, y) dx dy = f (x(, ), y(, )) det J d d.

Ej
where

Ej

J=

x y   x y  

(25) (26)

is the Jacobian matrix. These integrals are approximated using Gauss-Legendre quadrature rules.
3.2 Rectangular C1 Finite Element
Since the image domain is rectangular, it is natural to use rectangular finite elements. Consequently, we also implemented the sheet model using a fournoded rectangular bicubic Hermitian element with nodal variables z, along with its first derivatives and second cross-derivative evaluated at each node i. The nodal variable vector for this version of the sheet is

qi(t) = zi,

z x

,
i

z y

,
i

2z xy i

. (27)

Thus there are sixteen degrees of freedom per element. Although the nodal variables of this element do not

y 4: (-1,1)
 = -1

a

=1 

3: (1,1)

(

x

c

,y )
c



b

1: (-1,-1)  = -1

2: (1,-1) =1

x
Figure 3: Hermitian rectangular element. The four nodes are numbered.

contain the full set of nodal derivatives, the uniform tessellation of the image domain along with the element nodal first derivatives can be used to compute the remaining second derivatives.
For the rectangular Hermitian bicubic element, the local coordinates



=

2 a

(x

-

xc),



=

2 b

(y

-

yc),

(28)

are used ((xc, yc) are the coordinates of the element center). Using this element, the trial function z^ can be written as

z^(x, y) =

4

N1izi

+

N2i

zi x

+

N3i

zi y

+

N4i

2zi xy

,

i=1

(29)

where

N1i = N0i()N0i(), N2i = N0i()N1i() N3i = N1i()N0i(), N4i = N1i()N1i()(30)

The nodal shape functions Nij are specified in [8] (pp. 206). Note that the trial function (29) is an incomplete sixth-order polynomial in terms of  and  and possesses continuity in both the function and its first derivatives. As the energy functional Ep contains 2nd order partial derivatives, the Hermitian bicubic element ensures continuity of the trial function and its first derivatives at element interfaces, hence this element is also conforming.
3.3 Numerical Integration
In computer vision and geometric design applications involving the fitting of models to data, we can simplify the equations of motion (6) while preserving useful dynamics by setting the mass density µ(x, y) to zero to obtain Cq + Kq = fq. This first-order dynamic system governs a model which has no inertia and comes to rest as soon as all the applied forces vanish or equilibrate.
We integrate equation (3.3) forward through time using an explicit first-order Euler method. This method approximates the temporal derivatives with

forward finite differences. It updates the degrees of freedom q of the model from time t to time t + t according to the formula

q(t+t) = q(t) + t(C(t))-1 fq(t) - Kq(t) . (31)

The time step t must be selected carefully, since small time steps slow down the computation while excessively large time steps result in numerical instability.
In our implementation, we do not explicitly assemble and factorize a global stiffness matrix K as is common practice in applied finite element analysis. Instead, we update the nodal vectors qi(t+t) iteratively by computing the product Kjqj on an element-byelement basis using the element stiffness matrices Kj. This approach makes the model fitting process easily parallelizable.
4 Applied Forces
Our dynamic surface reconstruction paradigm applies data constraints to the model as external force distributions f (x, y, t).
For laser range data or digital terrain maps, we use forces based on distances between data points and a model's surface, and the continuous force distribution becomes a discrete, vector of forces. That is, we define long-range spring-like "point" forces

f (x, y) =  p - z(xp, yp)

(32)

proportional to the separation between a data point p in space and the point of influence z(xp, yp) of the force on the model's surface.
For the sheet model, the data point p(x, y) is projected onto the surface parallel to the z axis. Equation (20) can then be applied to transform this force into an equivalent set of nodal forces fqj.
5 3D Generalization
The deformable sheet model is represented as a single-valued scalar function z(x, y) defined on a bounded domain in the (x, y) plane as described above. We have also implemented a deformable "balloon" model, using a more general, multi­valued parametric representation

x(u, v) = [x(u, v), y(u, v), z(u, v)]

(33)

where vector x represents the positions of material points (u, v) relative to a reference frame  in Euclidean 3-space. Note that the single­valued sheet model representation can be considered as a special case of the multi­valued representation: x(u, v) =
[u, v, z(u, v)] .
The deformation energy of the thin plate material under tension for the multi­valued case is an extension

of (1)

Ep(x) =

10 |xu|2 + 01 |xv|2 +

20 |xuu|2 + 11 |xuv|2 + 02 |xvv|2 du dv, (34)
where the u and v subscripts denote parametric derivatives.

6 Surface Analysis

Once a surface has been extracted and recon-

structed from the data, a logical next step is to char-

acterize the surface structure for use in analysis, visu-

alization, and recognition tasks. For example, surface

curvature extrema often correspond to significant in-

trinsic features of an object [7]. Consequently, it is

desirable for a surface model to not only extract accu-

rate and meaningful information from the data, but to

provide the extracted information in a convenient and

useful form.

From differential geometry, 3D smooth surfaces are

uniquely characterized by their first and second fun-

damental forms. The parametric surface form of the

sheet model (i.e. x(u, v) = [u, v, z(u, v)] ), along

with the finite element approximation, provides us

with an analytical description of the reconstructed sur-

face that is directly amenable to a differential analy-

sis. Furthermore, since the nodal variables of our fi-

nite elements contain not only the nodal position but

the nodal derivatives (i.e. xu, xv, xuu, xuv, xuv where

xu

=

(1, 0,

z x

)

and

xv

=

(0, 1,

z y

)

etc.)

as

well,

all

the

information needed to compute the first and second

fundamental forms of the surface is generated auto-

matically. The intrinsic differential characteristics of

the surface, such as the unit normal and the principal

curvatures, can be conveniently computed from this

information.

7 Applications
We have applied our surface fitting technique using the deformable sheet model on sampled laser range data and a 3D digital terrain map. Our experiments run at interactive rates on a Silicon Graphics Indigo workstation.
7.1 Fitting Surfaces to 3D Range Data
This section demonstrates the reconstruction of surfaces from regularly sampled laser range data. Range data based surface reconstruction has practical applications in the areas of visualization and CAD based manufacturing. The range data used in the experiments are from the NRCC 3D image database [10].
In the first set of experiments we fit a 50×50 element deformable sheet to the following range images

· 5000 range data points randomly sampled from a 128 × 128 pixel range image of a statuette (Fig. 4(a)) (NRCC image database CAT 155).

· 2599 range data points randomly sampled from a range image of the upper "hemisphere" of an egg (Fig. 4(d)) (NRCC image database CAT 233).
· 7696 range data points randomly sampled from a range image of the upper part of a mug with a pitted surface (Fig. 4(g)) (NRCC image database CAT 251).
For this set of experiments, the weights ij and ij were set to 0.8 and 0.01 respectively, the force gain parameter  was set to 30.0 and the time step t was set to 0.002. The fitting process required approximately 80 seconds, 40 seconds, and 80 seconds to complete for each of the three data sets respectively on a Silicon Graphics Indigo workstation. Both implementations of the sheet model were fitted to the range images listed above, with similar results. Figure 4(c) shows the result of the rectangular finite element version of the sheet, while figures 4(f) and 4(i) show the result of the triangular element version.
7.2 Digital Terrain Mapping
We used the deformable sheet to reconstruct 3D terrain models from cartographic data. For this experiment we extracted isoelevation contours from a 256 × 256 digital terrain map. Figure 5(a) shows a rendering of the digital terrain map. We subsampled the terrain map using 8 contour lines at 200m intervals(Fig. 5(b)) and then fit the sheet to the resulting sparse contour data. Figure 5(c) shows the final fitted surface using 30 × 30 square elements. The fitting process takes on the the order of 20 minutes to complete, primarily due to the sparseness of the data; in areas where there is little or no data the model takes more time to "fill in".
8 Conclusions
We have developed two finite element implementations of a dynamic deformable sheet model based on a thin-plate under tension spline. The behavior of the dynamic model is governed by equations of motion, which make the model responsive to forces derived from the 3D data and cause the model to conform to the data. The dynamic formulation naturally supports model visualization during the data fitting process. We use the most "natural" finite elements to represent the model as a continuous surface. The triangular element is a conforming C1 element whose nodal degrees of freedom reflect the derivative terms found in the energy expression the thin-plate under tension spline and they can be used in the analysis of the surface properties of the fitted surface. The rectangular element is also a conforming C1 element whose nodal degrees of freedom include useful derivative terms. We have demonstrated the usefulness of our sheet model for reconstruction of surfaces with irregular shape features by applying them to laser range

data and digital terrain data. We are currently experimenting with local subdivision techniques and adaptive meshes to increase the efficiency, accuracy, and flexibility of our model.
References
[1] I. Cohen, L.D. Cohen, and N. Ayache. Introducing New Deformable Surfaces to Segment 3D Images. In Proc. IEEE Conf. Comp. Vis. Pat. Rec., pages 738­739, June 1991.
[2] L.D. Cohen. On Active Contour Models and Balloons. In CVGIP: Image Understanding, volume 53(2), pages 211­ 218, March 1991.
[3] H. Delingette, M. Hebert, and K. Ikeuchi. Shape Representation and Image Segmentation Using Deformable Surfaces. In Proc. IEEE Conf. Comp. Vis. Pat. Rec., pages 467­472, June 1991.
[4] G. Dhatt and G. Touzot. The Finite Element Method Displayed. Wiley, New York, 1984.
[5] W.C. Huang and D.B. Goldgof. Adaptive-Size PhysicallyBased Models for Nonrigid Motion Analysis. In Proc. IEEE Conf. Comp. Vis. Pat. Rec., pages 833­835, 1992.
[6] D. Metaxas and D. Terzopoulos. Recursive Estimation of Shape and Nonrigid Motion. In IEEE Workshop on Visual Motion, pages 306­311, Oct. 1991.
[7] O. Monga, N. Ayache, and P. Sander. From Voxel to Curvature. In Proc. IEEE Conf. Comp. Vis. Pat. Rec., pages 644­649, June 1991.
[8] D.H. Norrie and G. deVries. An Introduction to Finite Element Analysis. Academic Press, New York, 1978.
[9] A. Pentland and B. Horowitz. Recovery of Nonrigid Motion and Structure. IEEE Trans. Pat. Anal. Mach. Intel., 13(7):730­742, July 1991.
[10] M. Rioux and L. Cournoyer. The NRCC ThreeDimensional Image Data Files. Technical Report CNRC No 29077, National Research Council of Canada, 1988.
[11] D. Terzopoulos. Multilevel computational processes for visual surface reconstruction. Computer Vision, Graphics, and Image Processing, 24:52­96, 1983.
[12] D. Terzopoulos. Regularization of Inverse Visual Problems Involving Discontinuities. IEEE Trans. Pat. Anal. Mach. Intel., 8(4):413­424, 1986.
[13] D. Terzopoulos, A. Witkin, and M. Kass. Constraints on Deformable Models: Recovering 3D Shape and Nonrigid motion. Artificial Intelligence, 36(1):91­123, 1988.
[14] Y.F. Wang and J.F. Wang. Surface Reconstruction using Deformable Models with Interior and Boundary Constraints. IEEE Trans. Pat. Anal. Mach. Intel., 14(5):572­ 579, May 1992.
[15] A. Young and L. Axel. Non-Rigid Heart Wall Motion using MR Tagging. In Proc. IEEE Conf. Comp. Vis. Pat. Rec., pages 399­404, 1992.

(a) (b) (c)
(d) (e) (f)
(g) (h) (i) Figure 4: (a)(d)(g) Range data images. (b)(e)(h) Sheet deforming to data. (c)(f)(i) Final reconstructions.
(a) (b) (c) Figure 5: (a) Original digital terrain map. (b) Rendered contour data. (c) Reconstructed terrain.

