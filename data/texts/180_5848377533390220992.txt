FAST 2004, San Francisco, CA
CAR: CLOCK with ADAPTIVE REPLACEMENT
Sorav Bansal, Stanford University Dharmendra S. Modha, IBM Research

CAR: Bansal & Modha

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
The Caching Problem

expensive, but fast

cheap, but slow

How to manage the cache? Assume demand paging: Which page to replace?
How to maximize the hit ratio?

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
Recency Constant Time

L R U
 

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

L R U

Recency Constant Time Scan Resistance "Frequency"

 

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

LL RF UU

Recency Constant Time Scan Resistance "Frequency"

 
 

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

LLA RFR UUC

Recency Constant Time Scan Resistance "Frequency"

 
 

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

LLA RFR UUC

Recency
Constant Time
Scan Resistance
"Frequency"
Lock Contention/ MRU Overhead
FAST 2004, San Francisco, CA

 
 
April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

"In Multics a paging algorithm has been developed that has the implementation ease and low overhead of the FIFO and
is an approximation to LRU." Fernando J. Corbato, 1990 Turing Award Winner

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
Recency Constant Time Scan Resistance "Frequency" Lock Contention/ MRU Overhead
FAST 2004, San Francisco, CA

L LAC RFRL UUCO
C K
 
 
 


April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

C LOCK

1 1

0

0

0 1 0
1

00 0 0 TAIL

1 1 HE A D

0

1 0

1

1

0 1

0 1 1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

C LOCK

1 1

0

0

0 1 0
1

00 0 0 TAIL

1 1 HE A D

0

1 0

1

1

0 1

0 1 1

HIT: Set the reference bit to "1" MISS: Insert at the TAIL, initialize the reference bit to "0"

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

C LOCK

1 1

0

0

0 1 0
1

00 0 0 TAIL

1 1 HE A D

0

1 0

1

1

0 1

0 1 1

REPLACEMENT POLICY: Evict the first "0" page Reset "1" pages to "0"--"second chance"--"delayed MRU"

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

CLOCK Applications and Exposition

 Multics
 UNIX/AIX/LINUX/BSD
 VAX/VMS
 DB2
 Oracle? Windows? Solaris?

 Major OS Textbooks ­ Tanebaum & Woodhull ­ Silberschatz & Galvin

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

Prior Work on LRU versus CLOCK

 LRU ­ (LFU) ­ FBR ­ LRU-2 ­ 2Q ­ LRFU ­ LIRS ­ MQ ­ ARC
FAST 2004, San Francisco, CA

 CLOCK ­ GCLOCK ­ Two-handed CLOCK

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

Prior Work on LRU versus CLOCK

 LRU ­ (LFU) ­ FBR ­ LRU-2 ­ 2Q ­ LRFU ­ LIRS ­ MQ ­ ARC
FAST 2004, San Francisco, CA

 CLOCK ­ GCLOCK ­ Two-handed CLOCK

1968
April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

Prior Work on LRU versus CLOCK

 LRU ­ (LFU) ­ FBR ­ LRU-2 ­ 2Q ­ LRFU ­ LIRS ­ MQ ­ ARC
FAST 2004, San Francisco, CA

 CLOCK ­ GCLOCK ­ Two-handed CLOCK

1968
April 2, 2004

1998
© 2003 IBM Corporation

CAR: Bansal & Modha
Recency Constant Time Scan Resistance "Frequency" Lock Contention/ MRU Overhead
FAST 2004, San Francisco, CA

L LACC RFRLA UUCOR
C K
 
 
   


April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU
B1

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B2

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
CLOCKs T1 and T2 contain cache pages LRU lists B1 and B2 contain recently evicted history pages

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
Size of T1 roughly equals B2 Size of T2 roughly equals B1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
T1(0) & B1 pages seen exactly once recently T1(1), T2, & B2 pages seen at least twice recently

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
Maintain a target size for CLOCK T1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
HIT in T1 or T2: Set reference bit to "1"

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
MISS in B1: Set reference bit to "0", move to TAIL of T2, and increase target size of T1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
MISS in B2: Set reference bit to "0", move to TAIL of T2, and decrease target size of T1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
TOTAL MISS: Set reference bit to "0", move to TAIL of T1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
CACHE REPLACEMENT POLICY: Replace from T1 if larger than target; else from T2

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
During replacement in T1, if "1" page is found, make "0" and move to T2 TAIL, move evicted page to B1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
During replacement in T2, if "1" page is found, make "0", move evicted page to B2

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B1 B2
DIRECTORY REPLACEMENT POLICY: Replace from B1 if T1+B1 = c; else from B2

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
32768

P4

24576

Target Size for List T1

16384

8192

0 2000000

6000000

10000000

14000000

Virtual Time (Request Number)

FAST 2004, San Francisco, CA

April 2, 2004

19776000
© 2003 IBM Corporation

CAR: Bansal & Modha
CART = CAR + Temporal Filtering
 CAR/ARC: two hits to a page is a criterion for promotion from T1 to T2
 CART: promotion from T1 to T2 happens only if two hits are "far"

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

Cache Size (4K pages)
65536 131072 262144 524288 1048576

SPC-1 like Workload
LRU CLOCK ARC
0.37 0.37 0.82 0.78 0.77 1.62 1.63 1.63 3.23 3.66 3.64 7.56 9.19 9.31 20.00

CAR CART

0.84 1.66 3.29 7.62 20.00

0.90 1.78 3.56 8.52 21.90

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
Merge(S) Workload

Cache Size (4k Pages)
16384 32768 65536 131072 262144 524288 1048576 1572864 2097152 4194304

LRU CLOCK

0.20 0.40 0.79 1.59 3.23 8.06 27.62 50.86 68.68 87.30

0.20 0.40 0.79 1.58 3.27 8.66 29.04 52.24 69.50 87.26

ARC
1.04 2.08 4.07 7.78 14.30 24.34 40.44 57.19 71.41 87.26

CAR CART

1.03 2.07 4.05 7.76 14.25 24.47 41.00 57.92 71.71 87.26

1.10 2.20 4.27 8.20 15.07 26.12 41.83 57.64 71.77 87.26

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
64 32 16
CAR 8 4 2 1

P1 CLOCK

Hit Ratio (%)

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64

P2

32

Hit Ratio (%)

16 CAR CLOCK
8

4

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64 32 16
8 4 2

P3

CAR

CLOCK

Hit Ratio (%)

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
32

P4

Hit Ratio (%)

16 CAR
CLOCK 8

4

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64 32 16
8

P5

CAR

CLOCK

Hit Ratio (%)

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

Hit Ratio (%)

CAR: Bansal & Modha
64

P6

32

16
CAR 8
CLOCK
4

2

1

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64

P7

32

Hit Ratio (%)

16 CAR
8 CLOCK
4

2

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

Hit Ratio (%)

CAR: Bansal & Modha
64

P8

32

16 CAR
8

4 CLOCK
2

1

0.5

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64

P9

32

Hit Ratio (%)

16 CAR
CLOCK 8

4

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
32

P10

16

Hit Ratio (%)

8 CAR
CLOCK 4

2

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64 32 16
8

P11

CAR

CLOCK

Hit Ratio (%)

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha

P12

Hit Ratio (%)

32
16 CAR CLOCK
8

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64

P13

32

Hit Ratio (%)

16 CAR
CLOCK 8

4

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
32 16

P14

CAR

CLOCK

Hit Ratio (%)

8

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha
64

ConCat(P)

Hit Ratio (%)

32 CAR
16 LRU
8

4

1024

4096

16384

65536

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

262144
© 2003 IBM Corporation

CAR: Bansal & Modha

Merge(P)

32 CAR
LRU 16

Hit Ratio (%)

8

8192

32768

131072

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

524288
© 2003 IBM Corporation

CAR: Bansal & Modha

DS1

Hit Ratio (%)

32

16 CAR
8
CLOCK 4

2 65536

262144

1048576

Cache Size (Number of 512 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

4194304
© 2003 IBM Corporation

Hit Ratio (%)

CAR: Bansal & Modha

S1

32

16 CAR
8 CLOCK
4

2

65536

131072

262144

523288

Cache Size (Number of 4096 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

1048576
© 2003 IBM Corporation

Hit Ratio (%)

CAR: Bansal & Modha
64

S2

32 CAR
16

8 CLOCK 4

2

65536

131072

262144

524288

Cache Size (Number of 4096 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

1048576
© 2003 IBM Corporation

Hit Ratio (%)

CAR: Bansal & Modha
64

S3

32 CAR
16
8 CLOCK

4

2

65536

131072

262144

524288

Cache Size (Number of 4096 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

1048576
© 2003 IBM Corporation

CAR: Bansal & Modha
64 32 16
8 4 2 1

Merge(S)
CAR CLOCK

Hit Ratio (%)

16384

65536

262144

1048576

Cache Size (Number of 4096 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

4194304
© 2003 IBM Corporation

CAR: Bansal & Modha
32 16
8 4 2 1

SPC1
CAR CLOCK

Hit Ratio (%)

65536

262144

1048576

Cache Size (Number of 4096 byte pages)

FAST 2004, San Francisco, CA

April 2, 2004

4194304
© 2003 IBM Corporation

CAR: Bansal & Modha
CAR: CONCLUSIONS
 Simple and Low Overhead  Self-tuning: captures "recency" and "frequency"  Scan-Resistant  Low Lock Contention and MRU Overhead  Outperforms CLOCK on all workloads examined  Comparable to (sometimes even better than) ARC!

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

"Recency"

MRU

T1
01 10 00 11 10
01

TAIL HEAD

LRU
B1

FAST 2004, San Francisco, CA

MRU

"Frequency"

T2

1 1

0

0

01 0
1

00 0 0 TAIL

1 1 HEAD

0

1 0

1

1

10

0 1 1

LRU

B2

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha
CAR: Set-up
 Clocks T1 and T2 contain cache pages  B1 and B2 contain recently evicted history pages
­ Alex Haley: "History is written by the winners" ­ CAR/ARC: "History is written by the losers"  Size of T1 roughly equals B2  Size of T2 roughly equals B1  T1(0) and B1 contain pages that have been seen exactly once recently = "Recency"  T1(1), T2, and B2 contain pages that have been seen at least twice recently = "Frequency"

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

CAR: Algorithm

 HIT in T1 or T2: Set reference bit to 1  MISS in B1: Set reference bit to 0, move to tail of T2, and
increase target size of T1  MISS in B2: Set reference bit to 0, move to tail of T2, and
decrease target size of T1  TOTAL MISS: Set reference bit to 0, move to tail of T1  CACHE REPLACEMENT POLICY: Replace from T1 if larger
than target; else from T2 ­ During Replacement in T1, if "1" page is found, make "0" and
move to T2 tail, move evicted page to B1 ­ During Replacement in T2, if "1" page is found, make "0", move
evicted page to B2  DIRECTORY REPLACEMENT POLICY: Replace from B1 if
T1+B1 = c; else from B2

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

CAR: Bansal & Modha

CLOCK

 HIT: Set the reference bit to "1"
 MISS: Insert at the TAIL, initialize the reference bit to "0"
 REPLACEMENT POLICY:
­ Evict the first "0" page
­ Reset "1" pages to "0"--giving them a "second chance"
 KEY INSIGHT:
­ Reseting "1" to "0" is "delayed MRU"--removing it from hit path to miss path

C LOCK

1 1

0

0

0 1 0
1

00 0 0 TAIL

1 1 HE A D

0

1 0

1

1

0 1

0 1 1

FAST 2004, San Francisco, CA

April 2, 2004

© 2003 IBM Corporation

