Visual Intelligence: The First Decade of Computer Art (1965-1975) Author(s): Frank Dietrich Source: Leonardo, Vol. 19, No. 2 (1986), pp. 159-169 Published by: The MIT Press Stable URL: http://www.jstor.org/stable/1578284 Accessed: 16/01/2010 21:06 Your use of the JSTOR archive indicates your acceptance of JSTOR's Terms and Conditions of Use, available at http://www.jstor.org/page/info/about/policies/terms.jsp. JSTOR's Terms and Conditions of Use provides, in part, that unless you have obtained prior permission, you may not download an entire issue of a journal or multiple copies of articles, and you may use content in the JSTOR archive only for your personal, non-commercial use. Please contact the publisher regarding any further use of this work. Publisher contact information may be obtained at http://www.jstor.org/action/showPublisher?publisherCode=mitpress. Each copy of any part of a JSTOR transmission must contain the same copyright notice that appears on the screen or printed page of such transmission. JSTOR is a not-for-profit service that helps scholars, researchers, and students discover, use, and build upon a wide range of content in a trusted digital archive. We use information technology and tools to increase productivity and facilitate new forms of scholarship. For more information about JSTOR, please contact support@jstor.org.
The MIT Press is collaborating with JSTOR to digitize, preserve and extend access to Leonardo.
http://www.jstor.org

The First

Visual Intelligence: Decade of Computer Art (1965-1975)
FrankDietrich

Abstract-The authortraces developmentsin computerart worldwidefrom 1965, whenthe first computer
art exhibitions were held by scientists, through succeeding periods in which artists collaborated with scientists to create computerprogramsfor artisticpurposes.The endof the first decadeof computerartwas markedby economic, technological and programmingadvancesthat allowed artists more direct access to computers,high quality images and virtuallyunlimitedcolor choices.

I. INTRODUCTION
The year 1984 has been synonymous with the fundamental Orwellian pessimism of a future mired in technological alienation. Yet one year later, in 1985, we are celebrating the official maturity of an art form born just 20 years ago: computer art. These adjacent dates, one fictional, the other factual, share an intimate relationship with technological development in general and the capabilities of imaging machines in particular.
II. EARLY WORK AND THE FIRST
COMPUTER ART SHOWS
Computer art represents a historical breakthrough in computer applications. For the first time computers became involved in an activity that had been the exclusive domain of humans: the act of
creation. The numberof Ph.D.'s involved
emphasized the heavily academic nature of the art form.
The first computer art exhibitions, which ran almost concurrently in 1965 in the US and Germany, were held not by artists at all, but by scientists: Bela Julesz and A. Michael Noll at the Howard Wise Gallery, New York; and Georg Nees and Frieder Nake at Galerie Niedlich, Stutt-
gart, Germany. Noll and Julesz conducted their visual
research at Bell Laboratories in New
Jersey. The Murray Hill lab became one of the hotbeds for the development of computer graphics. Also working there were ManfredSchroeder,Ken Knowlton, Leon Harmon, Frank Sinden and E.E. Zajac, who all belonged to the first generation of 'computer artists'. These

scientists were motivated mainly by research related to visual phenomena: visualization of acoustics and the found-
ations of binocular vision. Researchersat
Bell contributed a wealth of information
to spur the growth of computer graphics. Numerous computer animations were produced, mostly for educational purposes, but a few artistic experimentswere also conducted. Julesz and Noll worked
on the display of stereoscopic images. Noll developed the mathematics for Ndimensional projections, as well as a 3-D

tactile-input device. Harmon and Knowlton devised automatic digitizing methods for images, work related to a project on sampling and plotting of voice data under the direction of Manfred
Schroeder. Ken Knowlton contributed
several graphics languagesfor animation. Throughout this article I will discuss the researchconducted at Bell Labs in further
detail [1-5]. The German center of activity was
established at the Technische Universitat
Stuttgart under the influence of philo-

Frank Dietrich (artist, computer graphics consultant), 3477 South Court, Palo Alto, CA 94306, U.S.A.
Copyright ? 1985IEEE. Reprintedwith permission, from IEEEComputerGraphicsand Applications, Vol. 5, No. 7, pp. 34-35, July 1985.

Fig. 1. A.MichaelNoll,BridgetRiley'sPainting"Currents"1,966.Anearlyattemptatsimulatinagn existingpaintingwitha computerM. uchof 'op art' uses repetitivepatternsthatusuallycanbe expressedverysimplyinmathematicatel rms.Thesewaveformws eregeneratedas paralleslinusoids withlinearincreasinpgeriodanddrawnonamicrofilmplotterA. .MichaeNl ollalsoapproximatePdiet Mondrian'spaintingCompositionwith Lines statisticallyand createda digital versionwith pseudorandonmumbersX. erographirceproductionosf bothpictureswereshownto 100subjectsa, nd
the computer-generatpeidcturewas preferredby 59.

Pergamon Journals Ltd. Printed in Great Britain.
0024-094X/86 $3.00+0.00

LEONARDO, Vol. 19, No. 2, pp. 159-69, 1986

159

Fig.2. KennethC.KnowltoanndLeonHarmonS, tudiesinPerceptionI, 1966.KnowltoanndHarmonmadethispictureatBellLaboratorieins MurrayHill, NewJersey.It is anearlyexampleof imageprocessinagndprobablythefirst'computenrude'I.twasexhibitedintheshow"TheMachine"attheMuseumof ModernArtin NewYorkin 1968.Scanninga photographth, eyconvertedtheanalogvoltagesintobinarynumbersw, hichwerestoredonmagnetictape. Anotherprogramassignedtypographiscymbolsto thesenumbersaccordingto halftonedensities.Thusthe archetypeof artistictopics,the nude,is
representebdy a microcosmoosf electronicsymbolsprintedby a microfilmplotter.

sopher Max Bense. Bense's main areas of
research covered the history of science and the mathematics of aesthetics. He
coined the terms 'artificial art' and
'generative aesthetics' in his main work, Aesthetica [6].
Advances in both computer music and poetry (or text processing) formed the context and also offered initial guidelines for computer art. Computer-generated texts wereproducedin Stuttgartbeginning in 1960. An entire branch of text analysis relied heavily on computer-processed statistics dealing with vocabulary, length and type of sentences, etc. [7].
Electronic music studios predated computer art studios, leading a number of visual artiststo seek information about
computers from university music departments. Dutch artist Peter Struycken,
for instance, took a course in electronic
music offered by the composer G.M. Koenig at one of the few European centers, the Instituut voor Sonologie at the Rijks Universiteit at Utrecht [8]. LejarenA. Hiller programmedthe "Illiac Suite" in 1957 on the ILLIAC computer at the University of Illinois, Champaign, and composed the well-known
"Computer Cantata" with Robert A. Baker in 1963 [9]. Some musicians who were using computers as a compositional tool also createdgraphicsin an attempt to foster synergism between the arts (Iannas Xenakis, HerbertBriin,etc.)[10-19]. The filmmaker John Whitney, on the other
hand, began structuring his computer animations according to harmonies of the musical scale and latercalled this concept
Digital Harmony [20].

Only in a second phase did artists become involved and participate with scientists in three large-scale shows: "Cybernetic Serendipity," organized in London for the Institute of Contem-
porary Art by Jasia Reichard (1968),

"Some More Beginnings," a show organized by Experiments in Art and Technology at the Brooklyn Museum, New York (1968), and "Software," curated by Jack Burnham at the Jewish Museum in New York (1970). The

I
Fig.3. CharlesA. CsuriandJamesShaffer,SineWaveMan,1967.Thispicturewonfirstprizein ComputersandAutomationmagazine'sannualcomputerart competitionin 1967. Initially the artist drewa humanface andcodeda handfulof selected coordinatesfromthe linedrawing.Thisdataserved as fixed points for the applicationof Fouriertransforms.The result was a numberof sine curveswith
differentslopes, althougheach shares the seed points from the drawingof the face.

160 Dietrich, VisualIntelligence

catalogs of these shows still represent some of the best overviews of emerging approaches to computers and other technologies for artisticpurposes[21-24]. These shows presented the first results
and publicly questioned the relationship of computers and art. They attracted many more artists to the growing field of computer art but did not succeed in making the art world in general more receptive to the new art form.

III. THE TECHNOLOGICAL ARTIST
AND THE COMPUTER
When we look at the handful of early computer art aficionados, certainpatterns emerge. All scientists and artists in this group belong to the same generation, born between the two World Wars,
approximately 1925-1940. Their heritage is not bound by national borders;ratherit is international, representing the highly industrialized countries of Europe, North America and Japan.
Initially, artists saw a very utilitarian advantage in using the computer as an accelerator for "high-speed visual
thinking" [25]. Robert Mallary calls this the synergistic use of the computer in the context of man-machine interactions.He
refersto the computer's "application as a tool for enhancing the on-the-spot creative power and productivity of the artist by accelerating and telescoping the creative process and by making available to its user a multitude of design options that otherwise might not occur to him"
[26]. Because these artistswerenot interested
in descriptiveor elaborated painting, they could allow themselves to relate to the
simple imagery generated by computers. Their interest was fueled by other capabilities of the computer, for instance its ability to allow the artist to be an omnipotent creator of a new universe with its own physical laws. Charles Csuri pointed out this far-reaching concept in an interview: "I can use a well-known
physical law as a point of departure,and then, quite arbitrarily, I can change the numericalvalues,whichessentiallychanges the reality. I can have light travel five times faster than the speed of light, and in a sense put myself in a position of creating my own personal science fiction" [27].
Many of the artists were constructivists. They were accustomed to arranging form and color logically and voluntarily restrictingthemselvesto a few well-defined image elements. They tried to focus on the act of seeing and perception by stripping away any notion of content. The French Groupe de Recherched'Art Visuel, or GRAV, was a

Fig. 4. GeorgeNees, Sculpture,1968. One of the earliestsculpturescreatedcompletelyunder computercontrol.This piece was exhibitedat the Biennalein Venicein 1969. Nees hada long-standing interest in the study of artificial visual complexity in connection with the chance-determination reaction. He programmeda Siemens 4004 computerto generatepseudorandomnumbers,whichwere tightly controlledto determinewidth, length and depthof rectangularobjects.The three-dimensional data were stored on magnetic tape and used to drive an automatic milling machine off line. The
sculpturewas cut from a block of wood.
Fig. 5. Frieder Nake, Matrix Multiplications, 1967. These four pictures reflect the translationof a mathematicalprocessinto an aesthetic process.A squarematrixwas initiallyfilled withnumbers.The matrixwas multipliedsuccessivelyby itself, andthe resultingnewmatricesweretranslatedinto images of predeterminedintervals.Each numberwas assigneda visualsign witha particularformandcolor. These signs were placed in a raster accordingto the numericvalues of the matrix. The images were computed on a AEG/Telefunken TR4 programmedin ALGOL 60 and were plotted with a ZUSE GraphomatZ64. A portfolio with 12 drawingswas publishedand sold in 1967 by Edition Hansjoerg
Mayer, Stuttgart, Germany.

Dietrich, VisualIntelligence

161

Fig. 6. Tony Longson, Quarter#5, 1977. As a sculptorTonyLongsongot interestedin the perception of space andhow it is supportedby perspectiveprojectionandparallaxvision.Quarter#5 isthelast of a series of pieces startedin 1969.All aremadeof foursheetsof Perspexmountedwithsmall intervalson top of each other such that the viewersees throughall four layers.The completeimage consists of an arrangementof dots in a rectangulargrid. But this image has been decomposedrandomlyinto four sections, so that only a subset of dots is engravedinto each sheet of plastic. Viewersapproachingthe piece will see first an apparentlychaotic distributionof dots. However,once the vieweris positionedin one of fourfixed viewpoints,chaos will suddenlychangeinto a highlystructuredorderof dots inoneof
the quadrants[58].

proponent of this direction and became instrumental in the Op Art and Kinetic Art movements of the 60's [28]. Vera Molnar, a cofounder of GRAV, conceived a "Machine Imaginaire"to enable her "to produce combinations of forms never seen before, either in nature or in museums, to createunimaginableimages." She realized that the computer could permit her "to go beyond the bounds of learning, cultural heritage, environment -in short, of the social thing, which we must consider to be our second nature"
[29]. Conventional aesthetics and their social-psychological connotations were seen as a hindrance to creative visual
research. It was precisely the computer's nonhumanness that was understood to
free art from these influences. Art critics
who pointed out the cool and mechanical look of the first results of computer art did not grasp the implications of this
concept. According to the Japanese artist
Hiroshi Kawano, who started producing computer art in 1959 [30], human standards of aesthetics are not applicable

to computer art. Instead the works generated by a computer requirefrom the artist (or critic) "a rigorous stoicism against beauty." For Kawano, the computer artist's only function is to teach the computer how to make art by programming an algorithm. Thus the artist/programmer has become a "metaartist," and the executing artist could be the computer itself, the "art-computer"
[31]. One artist who explicitly taught the
computer is Harold Cohen. He wanted to automate the process of drawing, or, to be more precise, Cohen wanted to have a computer simulate his personal style of drawing. Cohen set out in 1973 to create an expert drawing system at Stanford University's Artificial Intelligence Laboratory. The computer was programmed to model the essence of Cohen's creative
strategies. The programcontained a large repertoireof various forms and shapes he had been using previously in his paintings. The other main component was a 'space-finder' to establish compositional relationships heuristicallybetween forms

on one lane. Well-defined rules and
random number generators guaranteed the creation of never-endingvariations of drawings with a very distinctive style [32, 33].
Cohen's project AARON is an early example of a functioning harmonic symbiosis between man and machinethat enables the team to achieve a top
performance. Increasingly sophisticated relationships between artists and computers have been classified by Robert Mallary in his article "Computer Sculpture: Six Levels of Cybernetics." He speculates that the computer could develop into an autonomous organism, capable of self-replication. Even if the machines could neveractuallybe "alive," Mallary suggests their potential superiority. "The computer, while not alive in any organic sense, might just as well be, if it were to be judged solely on the basis of its capabilities and performances-which are so superlative that the sculptor, like a child, can only get in the way" [34].
But this prediction sounded like pure fantasy to those trying to enable the computer to assist the artist with very simple tasks. Especially in the beginning, interfacing with computers required artists to collaborate extensively with
programmers.
IV. COLLABORATION OF ARTISTS
AND
SCIENTISTS/PROGRAMMERS/
ENGINEERS
Usually artists cooperated with scientists because only scientists could provide access to computers in industrial research labs and university computer centers. But artists needed the programming expertise of scientists even more. Some collaborations prospered over many years and led to successful achievements in custom-designed programs for artistic purposes [35].
Even so, Ken Knowlton described the different attitudes of artists and programmers as a major difficulty. In Knowlton's view artists are "illogical, intuitive, and impulsive." They needed programmers who were "constrained, logical, and precise" as translators and interfaces to the computers of the 1960s [36]. But the first of a growing breed of technological artists with hybrid capabilities started to appear, too. Manfred Mohr proudly declared that he was selftaught in computer science, EdvardZajec learned programming and today teaches it to art students, and Duane Palyka holds degrees in both fine arts and mathematics.

162 Dietrich, VisualIntelligence

V. THE FIRST GRAPHICS
LANGUAGES
Early attempts at graphics languages fell into one of two categories. Eitherthey were graphics subroutines implemented in one of the common programming languages and callable from them, or they were written in machine language and set up their own syntax and command set or vocabulary. The firstgraphicsextensions, G1, G2 and G3 by Georg Nees, for instance, were written in ALGOL 60 and
contained only commands for pen control and random number generators [38]. More elaborate was Mezei's SPARTA, a system of Fortran calls
incorporating graphics primitives (line, arc, rectangle, polygon, etc.), different pen attributes (dotted, connected, etc.), and transformations (move, size, rotate). A further development led to ARTA, an interactive language based on light-pen control. ARTA also provided subroutines for key-frame interpolation, allowing both the interactive drawing of two key frames and the description of the type of interpolation with a function [39]. A language extension similar to Fortran was GRAF, written by Jack Citreon et al., at IBM; GRAF also offered optional light-pen input [40]. Even though these graphics extensions made programming in machine code superfluous, they still required programming in Fortran or ALGOL 60.
In the second group of graphics languages we find Frieder Nake's COMPART ER 56 as well as Ken Knowlton's
languages, BEFLIX and EXPLOR. The names of these programming environments are indicative of either function- or
machine-dependent implementation of the language. COMPART ER 56, for instance, refers to a particularcomputer, the Standard Elektric ER 56, for which the language has been written. ER 56 contained three subpackages, a space organizer, a set of different random number generators, and selectors for the repertoireof graphicelements. Nake used COMPART ER 56 extensively to create more than 100 drawings [30].
BEFLIX (a corruption of Bell Flicks) was designed to produce animated movies on a Stromberg-Carlson 4020 microfilm recorder. Points within a 252-
by-184 coordinate system could be controlled, each having one of eight different shades of gray. In contrast with today's frame buffers, which hold the image memoryin theirbit map,BEFLIX's images resided in the computer's main memory. As an animation language it provided instructions for several motion effects as well as for camera control.
Knowlton had initially hoped that artists

would learn the language to program their own movies, but he came to realize
that they usually wanted to create
something the language could not facilitate, and they also shied away from programming. Therefore he accommodated the artists by, for example, writing special extensions to BEFLIX for Stan
Vanderbeek, or creating a completely new language, EXPLOR (images from EXplicit Patterns, Local Operations and Randomness), for Lillian Schwarz [41].
None of the graphics languages mentioned received widespread use, partly because their implementation was mach-

ine dependent and also because each language was restricted in scope. The tools wereuseful for their inventors'goals but lacked sufficient flexibility and ease of use to accommodate the creative ideas
of many different artists. BEFLIX, however, was installed in several art
departments and provided the helping hand many programmershad given when collaborating individually with artists.
At Ohio State UniversityCharlesCsuri directed, over many years, the development of several graphics languages, all designed for ease of use, interactive
control, and animation capabilities. One

Fig. 7. Herbert W. Franke,PortraitAlbertEinstein, 1973. A photographof Einsteinwas scannedand digitized optically. The data was stored on tickertape and displayed on a CRT using programs developed for applicationsin medical diagnosis. Herbert Franke generatedthe colors with random numbersandby smoothingcontourlines.Thisseries of portraitsgraduallybecomesmoreabstractand
thus fuses visually Einstein's portrait and a nuclearblob.

Dietrich, VisualIntelligence

163

incarnation, GRASS, or GRAphics Symbiosis System, was designed by Tom DeFanti, first for a real-time vector
display and later as ZGRASS for a Z80based animation language for artists. This language has been widely used by programming artists, which indicates that it possesses sufficient generality to
support different imaging strategies as well as suitable command and execution
structures to adapt to artistic creation
[44, 45].

VI. THE FIRST GRAPHICS
SYSTEMS
Let's turn the clock back again to the 1960s when the microcomputer had not even been conceived. The computersused initially were large mainframes, soon followed by minicomputers. Such equipment cost anywhere from $100,000 to several million dollars. All these
machines required air conditioning and therefore were located in separate computer rooms, which served as fairly uninhabitable 'studios'. Programs and data had to be prepared with the keypunch; then the punch cards were fed into the computer, which ran in batch mode. In general, the systems were not interactive and could produce only still
images. Pen plotters, microfilm plotters and
line printers produced most of the visual output. The first animations werecreated by plotting all still frames of the movie sequentially on a stack of paper or microfilm. Motion could only be reviewed after these stills had been
transferredto 16-mm film and projected. Only a few artists had the opportunity to use even more expensive vector displays introduced in the late 1960sby companies such as IBM or newly founded graphics manufacturers such as Evans & Suther-
land, Vector General, and Adage, whose displays cost between $50,000 and $100,000. These displays featured very high addressability, up to 4000 by 4000 points, and could update coordinates fast enough to support real-timeanimation of wireframe models in 3-D [46]. One of the first computer art shows incorporating these interactive displays took place at the College of the Arts at Ohio State University in 1970 [47].
A more popular and cost-effective choice was the storage display tubes offered by Tektronix, starting around $10,000. But even if only a single line was to be changed, the picture had to be erased completely and redrawn.
With the exception of the microfilm plotter, all output devices were line or vector oriented and thus characterized

Fig.8. EdvardZajec,Prostor,1968-69.Oneof a seriesofdrawingfsromtheProstorprogramZ. ajec wasconcernedwithestablishinag designsystemthatcouldgeneratea multitudoef variationsE. ach timetheprogramruns,itdefinesa rectangleandsubdivideistaccordingtoharmonipcroportionTs.he figureformationinsidethiscompositiontakesplaceby selectingsuccessivelya linefromthisset: vertical,horizontald, iagonalandsinusoidalT. heparameterfsorlengthandamplitudceomplywith
harmonicratios.Thelinesconnectwitheachotheraccordingto predeterminerdules[37].

the majority of early computer art. The microfilmplotter is something of a hybrid between a vector CRT and a rasterimage device [48]. The CRT beam scans the screen sequentially, turning on and off under computer control. A camera mounted on the CRT makes a time
exposure during each scan. Thus the resulting image looks like a photograph taken from a raster device.
Some artists used the alphanumeric characters of the line printer to produce shaded areas by overstrikingone position with different characters or using the capacity of the eye to integrate these separate microimages into one larger macroimage or supersign. The German artist Klaus Basset attained extraordin-
arily subtle shading effects by using a simple typewriter. His work clearly relates to computer art, even if he did not employ a computer directlyto control the writing process. He programmedhimself, so to speak, to execute precisely designed

algorithms with a mechanical drawing device [49].
Output was often taken directly from the machineand exhibited. Moreover, the
signatures were sometimes plotted by the machine as part of the drawingprogram. Later, artists used these graphics as sketches for manuallyproducedpaintings or copy for photographically transferred serigraphs.Artists also followed tradition and signed their computer-generated work by hand. Color was often introduced only in this laterphase ofpostproduction, or a limited range could be achieved by using different plotter pens.
Harold Cohen realized this limitation
of the available graphics equipment. His approach was to delegate only the job of drawing to the computer, for which he used a plotter, a CRT, or the funnylooking 'turtle'-a remotely controlled drawing vehicle. He colored the resulting line drawings later by hand, thus mixing automatic drawing and human painting

164 Dietrich, VisualIntelligence

dimensionalicons. In addition,he introducesrotationsandothertransformationsof the cubeto foster visual ambiguityandinstability.The dynamicsof this combinations.

styles. He recently published a series of
his computer-generated line drawings in The First Artificial Intelligence Coloring Book as an invitation to everyone to combine their creative efforts with those
of the computer [50]. MMee-tthhoodds-s off ee-nntteerrininag ggrraapphihcisc, s weerree
even more restricted. With hardly any
interactive means of controlling the computer, artists had to relyon programs and predefined data. (The technology of light pens and data tablets had already

developed, but these input devices were
not widely available.) Once the data was fed into the computer, there was no more creative invention. Therefore the design process took place exclusively in the conceptualization prior to running a pnrrooggrraamm. . Ituwuwasasaat leaassztta deeccaaddeetibeeffoorree Ivan Sutherland's interactive concepts, demonstrated in 1963 with "Sketchpad" [51], resulted in a breakthrough and the
ultimate proliferation of paint systems that enabled the artist to draw directly

into the computer's memory. Today
paint systems,sophisticated3-D modeling software, and video input provide quick ways to create complex images, but the first generation of computerartistshad to focus on logic and mathematics-in sshhoorrrtt,, raatthhee-r abbss%trtarcatcmt eetthhooddss. . Too sommee
degree this restriction brought about creative concepts derived directly from computer technology itself.

Dietrich, Visual Intelligence

165

VII. THE CONCEPTS
The pioneers of computer art were driven by the newness of the technology, the untouched areas wide open for inventive investigation. Because of the lack of viable commercial applications at that time, they enjoyed the rare freedom to define their own goals, guided only by personal motivation and intuition. This small group of believers had a vision, which has not yet been fulfilled. These artists felt challenged to come up with sophisticated artistic and intellectual concepts to offset the crude computer graphics machines of the mid-1960s with their lack of color, speed and interactivity. It might be fruitfulto resolve with today's technology the paradox Manfred Mohr found in his work, a paradox particularly applicable to the early days of computer art:"The paradox of my generativework is that formwise it is minimalist and
contentwise it is maximalist" [52].
VIII. COMBINATORICS
The computer was thought of by Nake as a "Universal Picture Generator"
capable of creating every possible picture out of a combination of available picture elements and colors [30]. Obviously, a systematicapplication of the mathematics of combinatorics would lead to an inconceivable number of pictures, both good and bad, and would require an infinite production time in human terms, even if exactly computable. This raised the issue of preselecting a few elements that could be explored exhaustively and presented in a series or cluster of subimages as one piece. Manfred Mohr, for instance, centered his work on the cube and concisely devised successive transformationsthat modifiedan ordinary cube. The complex set of possible transformations was then plotted, and the transformations were displayed simultaneously as a single image. A series of catalogs of his work from 1973 to present exquisitely documents the consistent progression of his visual logic [52].
IX. ORDER, CHAOS, AND RANDOMNESS
Other artists chose to investigate the full range between order and chaos, employing random number generators. In this way they could create many different images from one program, introducing change with the random selection of certain parametersto define, for instance, location, type or size of a graphic element [8, 29]. Random numbers served to break the predictability of

........'.:..'.:', - . , . : : ii:. '5.'. . '..':'):::~, ?:''

? ':.

:

+

Fig. 10. Colette and Charles Bangert, Landlines, 1970. This couple has been collaboratingon their computerart for almost two decades. In parallel Colette has continuedto drawher art by hand.The investigationof similarities anddifferencesbetween'handwork'andcomputerplots is the foundation of their creative concepts, and findingsare fed back into new programsand more sophisticatedhand drawings.This methodologicalapproachis tightly coupledwith the subjectmatterof all their work: landscapes. Colette reports:"The elements of both the computerworkand my handworkare often repetitive,like leaves, trees, grass andother landscapeelementsare. Thereis samenessandsimilarity,
yet everythingis changing"[59].

the computer. They simulatedintuition in a very limited fashion and helped overcome the severe restrictions of
human interaction with the computer. Random numbers could be constrained
within a limited numeric range and then applied to a set of rules of aesthetic relationships. If these rules were derived from an analysis of traditional paintings, the program could simulate a number of similar designs, according to Noll [53] and Nake [30]. Or the artist could set up
new rules for generatingentirefamilies of new aesthetic configurations, using random numbers to decide whereand how to
place graphic elements. Peter Struycken recoveredthe rigorous
tradition of the art movement de Stijland consciously disregarded even abstract forms by focusing exclusively on pure color. In his own words: "Form is an
easier conceptual representation and repetition than color. Form can almost always be associated with a form that is already known. How easy it is to connect abstract forms to reality:this is just like a cloud, that like a snake, these like flowers.
Form is then regarded as something in itself, where recognition is as important as seeing as such" [8]. To discourageeven the faintest notion of content, he reduced
the image in "Plons" (Dutch for Splash) to simple squares forming a coordinate system. The computer calculated propagation of color energyemanatingfrom an

arbitrary point of initial impact. The changes of color distribution were presented in numerical codes, which the artist translated into actual color paintings by hand.
X. MATHEMATICFUNCTIONS
Numeric evaluations of functions
could be plotted directly. Graphs of different functions could be merged, or their points could be connected. These methods relate directly to experiments with analog computing machines by Ben F. Laposky and HerbertW. Franke in the 1950s. They constructed their own imaging systems based on an arrangement of voltage-controlled oscillators. The voltages deflected the beam of oscilloscopes to produce electronic line drawings. Laposky called his images accordingly 'oscillons'. They were photographic time exposures of the CRT
display [54]. Entire number fields were drawn with
digital computers, which features a control superior to that of analog systems. For instance, artist/scientists would display modular relationships or particularpropertiessuch as primenessor various stages of a matrix multiplication approaching its limiting boundaries. The use of mathematics does not necessarily imply a highly geometrical result. Some scientists tried to model irregular pat-

166 Dietrich, VisualIntelligence

terns. Knowlton, for example, simulated crystal growth, and Manfred R. Schroeder visualized equations describing noise in phone lines. Both experimentsrelateto the mathematics of fractals so prevalent today for the modeling of natural
phenomena [55].
XI. REPRESENTATIONALIMAGES
Whereas the last type of image visualizes the mathematical behavior of
numbers, the numbers could also represent the coordinates of a hand drawing. This data had to be meticulously entered into the computer via punch cards; then various processing methods could be applied to the image data. Leslie Mezei deformed the image progressively into complete noise [56]. Charles Csuri and James Shaffer applied Fourier transforms to a subset of the data samples and generated complex sine functions through those fixed points. The originally digitized drawing, combined with several sine waves, formed the final image of the "Sine Wave Man".
The Japanese Computer Graphics Technique Group experimented with the metamorphosis of one image into a completely different one. Thus a realistic face could be completely distorted or gradually transformed into a geometric entity such as a square. The interpolation techniques they were using for the creation of a simple image became the cornerstone of animation. This anima-
tion technique, called key-frame animation, was pioneered at the National Film Board of Canada by Burtnyk and Marcelli Wein [57]. Peter Foldes used interpolation techniques successfully as

ii11'1;r8
raI=r'5tcQCOCJi i1 lrl

i4

iZ
r'PBlBtClsIB?12 II aBftBBf-BflrB C'

nrrnt1In'l

C1%%1 gaa

1i,,

latiCCReL,,r =5IcII IIrrlr rW r ley

u

r&Q

3CjlL'le?

:rF+F+raer

I%
Fig. 11. KlausBasset,Kubus,1974.Thetypewritegrraphicsarecomposedof onlyfivesigns:'I','O', 'o','H'and'%'.ByoverstrikintghesetypesymbolsinvarioucsombinationBs,assetachieveda rangeof halftonesfrombrightto dark.He usedthesetonesto shadecubicobjects,whichhecalculatedand meticulousltyypedbyhand.RecentlyB, assetstartedto usea computewr itha lineprinterasanoutput
device.He claimsthatthetypewrittenpiecesaremoreprecise.

the major stylistic method in his movie
Hunger. Optical scanners automated the task of
entering visual data into the computer and in effect revealed the potential of machine vision. These imageswerestored in the computer in the form of different numbers to encode different gray values, and later color. They could be printed with plotters, using a printing concept similar to that used for halftones, where

dots of different sizes and densities are
employed. The artistcould relatethe gray values of an image to a set of arbitrary visual symbols and print out the converted images. Thus images were created like the nude by Knowlton and Harmon, which on closer inspection is seen to consist of numerous electrical
symbols, or an eye whose close-up reveals letters forming the sentence "One picture is worth a thousand words" (Schroeder).

Fig. 12. Sonia Landy Sheridan, Scientist's Hand at 3M, 1976. This educational masterpiece implicitly pays homage to the major utensil of early programmingth: e punchcard.The imageof the handhas been transferredonto the top line of a stack of punchcards by an electrostatic processusinga prototypeof 3M'S VQC photocopier.Sheridanwastrying to showthechildrenof thescientistsat 3M'scentralresearchlabsinSt
Paul,Minnesotah, owthecomputerstoresinformatioonncardsandhow theimageonthecardscanbemanipulatewdithouetvenusinga machine. Thishandcanbestretchedmillionsof waysbymerelyshiftingthecards
[42, 43].

Fig. 13. Duane Palyka,PaintingSdf-Portrait,1975. (Photo:Mike Milochek). The artist painted a self-portrait on a computer at the Universityof Utah ComputerScience Departmentin 1975. In the picture, Palyka is using a simple paint programcalled Crayon,writtenin Fortran by Jim Blinn.The programranunderthe DOS operatingsystemona DEC
PDP-11/45 using the first Evans & Sutherlandframe buffer.

Dietrich, VisualIntelligence

167

XII. THE END OF AN ERA
The end of the first decade of computer art coincided with important changes due mainly to three technological advances:
1. The invention of the micro-
processor changed the size, price, and accessibility of computers dramatically. The computer could become a truly personal tool.
2. Interactive systems became common in the creative process. Traditional paradigms of artistic creation such as painting and drawing, photographing and videotaping could be simulated on the computer.
3. Raster graphics displays increased the complexity of imagery significantly. Bit-mapped image memories allowed virtually unlimited choice of color and thus
supported the creation of smoothly shaded or textured three-dimensional images.
These three advances combined to
foster the migration of computer technology into art schools and artists' studios as well as commercial production houses. The intimate collaboration bet-
ween artists and scientists was no longer required. Supported by the emergence of user-friendly general-purpose and highlevel graphics language, artists became computer literate, or they bought software off shelves stocked by a burgeoning
computer graphics industry.
Acknowledgements-The following artists and scientists provided valuable information and visuals for this article. Thank you very much Colette and Charles Bangert, Klaus Basset, Jack Burnham, Harold Cohen, Charles A. Csuri, Herbert W. Franke, Kenneth C. Knowlton, Ben F. Laposky, Tony Longson, Robert Mallary, Aaron Marcus, Manfred Mohr, Vera Molnar, Zsuzsa Molnar, Frieder Nake, Georg Nees, A. Michael Noll, Duane Palyka, Manfred R. Schroeder, Lillian Schwartz, Sonia Landy Sheridan, Peter Struycken and Edvard Zajec.
REFERENCES
1. K.C. Knowlton, "A Computer Technique for Producing Animated Movies", Proc. AFIPS Conf., No. 25, Spring 1964, pp. 67-87.
2. K.C. Knowlton, "Computer Animated Movies", Emerging Concepts in Computer Graphics, D. Secrest and I. Nievergelt, eds., Benjamin/Cummings Publishing Corp., New York-Amsterdam, 1968, pp. 343-369.
3. E.E. Zajac, "Film Animation by Computer", New Scientist, No. 29, pp. 346-349 (1966).
4. A.M. Noll, "Computers and the Visual Arts", Design and Planning, No. 2, M.

Krampen and P. Seitz, eds., Hastings House Publishers, Inc., New York, 1967,
pp. 65-79. 5. A.M. Noll, "The Digital Computer as a
Creative Medium", IEEE Spectrum 4, 89-95 (1967). 6. M. Bense, Aesthetica. Einfuhrungin die Neue Aesthetik, Agis Verlag BadenBaden, 1965.
7. W. Fucks, Nach Allen Regein der Krust, Deutsche Verlags Anstalt, Stuttgart, 1968.
8. P. Struycken, Structuur-Elementen 1969-1980, catalog. Museum Boymansvan Beuningen, Rotterdam, 1980, translated from Dutch by Bert Speelpennig, p. 8.
9. Isaacson L. Hiller, ExperimentalMusic. McGraw-Hill Book Co., New York,
1959.
10. J. Burnham, Beyond Modern Sculpture. George Braziller, Inc., New York, 1968.
11. D. Davis, Art and the Future. Praeger Publishers, New York, 1973.
12. H.W. Franke, ComputerGraphics,Computer Art. Phaidon, New York, 1971.
13. S. Kranz, Science and Technologyin the Arts. Van Nostrand-Reinhold, New
York, 1974.
14. F. Malina, ed., Kinetic Art: Theory and
Practice. Selections from the Journal Leonardo. Dover Publications, New York, 1974.
15. F. Malina, ed., VisualArt, Mathematics
and Computers. Pergamon Press, Elmsford, N.Y., 1979.
16. T. Nelson, Dream Machines-Computer Lib. The Distributors, South Bend, Ind.,
1974.
17. J. Reichardt, ed., Cybernetics, Art and Ideas. New York Graphic Society, Greenwich, Conn., 1971.
18. R. Russett and C. Starr, Experimental Animation. Van Nostrand-Reinhold, New York, 1976.
19. G. Youngblood, ExpandedCinema. E.P. Dutton & Co., New York, 1970.
20. J. Whitney, Digital Harmony. BYTE Pubs., Peterborough, N.H., 1980.
21. J. Reichardt, ed., "Cybernetic Serendipity:The Computerand theArts", Studio International Special Issue, London and New York, 1968.
22. B. Kliiver, J. Martin, and R. Rauschenberg, eds., Some More Beginnings: An Exhibition of Submitted WorksInvolving Technical Materials and Processes.
Brooklyn Museum and the Museum of Modern Art, Experiments in Art and Technology, New York, 1968. 23. J. Burnham, ed., Software: Information Technology:Its New MeaningforArt.The Jewish Museum, New York, 1970. 24. F. Popper et al., eds., Electra: L'electricite et l'electronic dans 'art au XXe siecle., Mus6e d'Art Moderne de la Ville de Paris, Paris, 1983.
25. M. Mohr, "Artist's Statement", The Computer and its Influence on Art and Design. J.R. Lipsky, ed., catalog, Sheldon Memorial Art Gallery, Univ. of Nebraska, Lincoln, Spring 1983.
26. R. Mallary, "Statement", ComputerArt: Hardware and Software Vs. Aesthetics.
Coordinators: Charles and Colette
Bangert, Proc. Seventh National Sculpture Conf., Univ. of Kansas Press, Lawrence, Apr. 1972, pp. 184-189. 27. A. Efland, "An Interview with Charles
Csuri", Reichardt, CyberneticSerendipity, p. 84.

28. Groupe de Recherche d'Art Visuel, Proposition sur le Mouvement. Catalog, Galerie Denise Rene, Paris, Jan. 1961.
29. V. Molnar, "Artist's Statement", Page #43, pp. 26-27 (1980).
30. F. Nake, A'sthetikals Informationsverarbeitung, Springer Verlag, Wien-New York, 1974.
31. H. Kawano, "What Is Computer Art?" Artist and Computer, R. Leavitt, ed., Creative Computing, Morristown, N.J., 1976, pp. 112-113.
32. H. Cohen, WhatIs An Image? IJCAI 6,
pp. 1028-1057.
33. H. Cohen, "How to Make a Drawing", Science Colloquium.Nat'l Bur. of Stds., Wash. D.C., Dec. 17, 1982.
34. R. Mallary, "Computer Sculpture: Six Levels of Cybernetics", Artforum, May 1969, pp. 29-35.
35. Colette Bangert and Charles Bangert, "Experiences in Making Drawings by Computer and by Hand", Leonardo 7, 289-296 (1974).
36. K.C. Knowlton, "Statement", Computer Art. Hardwareand Software Vs. Aesthetics. Coordinators: Charles and Colette
Bangert, Proc. Seventh National Sculpture Conf., Univ. of Kansas Press,
Lawrence, Apr. 1972, pp. 183-184.
37. E. Zajec, "Computer Art: The Binary System for Producing Geometrical Nonfigurative Pictures", Leonardo 11, 13-21
(1978). 38. G. Nees, Generative Computergraphik,
Siemens AG, Berlin-Munich, 1969.
39. L. Mezei, "SPARTA: A Procedure Oriented ProgrammingLanguagefor the Manipulation of Arbitrary Line Drawings", Information Processing 68, Proc. IFIP Congress 69, North-Holland, Amsterdam, pp. 597-604.
40. J.P. Citroen and J.H. Whitney, "CAMP-Computer Assisted Movie Production", AFIPS Conf. Proc. 33, 1299-1305.
41. K.C. Knowlton, "Collaborations with Artists-A Programmer's Reflection", F. Nake and A. Rosenfeld, eds., Graphic
Languages, North-Holland, Amsterdam, 1972, pp. 399-416. 42. Sonia Landy Sheridan, Energized Artscience. Catalog, Museum of Science and Industry, Chicago, 1978. 43. D. Kirkpatrick,"Sonia LandySheridan", Woman'sArt J. 1, 56-59 (1980). 44. T. DeFanti, "The Digital Component of the Circle Graphics Habitat",Proc.NCC 195-203 (1976). 45. T. DeFanti, "LanguageControl for Easy Electronic Visualization", BYTE90-106
(1980). 46. I.E. Sutherland, "Computer Displays",
Scientific AmericanJune 1970. 47. C. Csuri, ed., Interactive Sound and
Visual Systems. Catalog, College of the Arts, Ohio State University, Columbus, 1970.
48. R. Baecker, "Digital Video Displays and Dynamic Graphics", ComputerGraphics (Proc. SIGGRAPH 79), 13,48-56 (1979).
49. K. Basset, "Schreibmaschinengrafik", H.W. Franke and G. Jiger, eds., ApparativeKunst. VomKaleidoskopzum Computer,DuMont Schauberg,Cologne, 1973, pp. 168-171.
50. H. Cohen et al., eds., TheFirst Artificial Intelligence Coloring Book. Kaufmann, Menlo Park, Calif., 1984.

168 Dietrich, Visual Intelligence

51. I.E. Sutherland, "Sketchpad, a ManMachine Graphical Communications System", AFIPS Conf.Proc. 23, 329-346
(1963). 52. M. Mohr, catalogs: Divisibility. Genera-
tive Works, 1980-1981, Galerie Gilles
Gheerbrant, Montreal, 1981; Computer Graphics. A-R-C Musee d'Art Moderne de la Ville de Paris, 1971; Drawings. Galerie Weiller, Paris, Galerie Gilles Gheerbrant, Montreal, 1974; Cubic Limit. Galerie Weiller, Paris, 1975;Cubic Limit II. Galerie Weiller, Paris, 1977; Dimensions. Galerie D+C Mueller-Roth, Stuttgart, 1979; Divisibility. Galerie Teufel, Cologne, 1985.

53. A.M. Noll, "Human or Machine: A
Subjective Comparison of Piet Mondrian's 'Composition with Lines' (1917) and a Computer-Generated Picture", ThePsychological Record 16, 1-10
(1966). 54. B.F. Laposky, Electronic Abstractions.
Catalog, Sanford Museum, Cherokee, Iowa, 1953.
55. M.R. Schroeder, Number Theory in Science and Communications.Springer, Berlin, 1984.
56. L. Mezei, "Randomness in Computer Graphics", Cybernetics,Art andIdeas. J. Reichardt, ed., New York Graphic
Society, Greenwich, Conn., 1971, pp. 165-174.

57. M. Wein and N. Burtnyk, "Interactive Techniques for Enhancing Motion Dynamics in Key Frame Animation", Comm. ACM, Oct. 1976.
58. T. Longson, "Artist's Statement", in Artist and Computer, R. Leavitt, ed.,
Creative Computing, Morristown, N.J., 1976, pp. 27-29. 59. Colette and Charles Bangert, "Artist's Statement", in Artist and Computer, R.
Leavitt, ed., Creative Computing, Morristown, N.J., 1976, pp. 18-20.

Call for Papers
Art andArtificialIntelligence
The editors of Leonardoinvite artists and others to submit articles on work involving art and artificial intelligence for publication consideration.
Artists whose work involves ideas, techniques or technologies of artificial intelligence, expert systems, interactive programs are invited to submit articles under 2500 words on their work. Computer and video engineers, computer scientists, philosophers and other researchers are also invited to submit articles on aspects of their work that may be of interest to artists.
Editorial guidelines may be found on the outside back cover of the journal. Additional information may be obtained from the main editorial office: Leonardo, 2112 Berkeley Way, Berkeley, CA 94704, U.S.A.
Articles that have appeared in Leonardo in this theme area include the following: -Myron Krueger, "VIDEOPLACE: A Report from the Artificial Reality Laboratory", 18, 145 (1985). -Susan E. Metros, "Electronic Thinking Cap: Microcomputer-Enhanced Creative Problem Solving", 18, 100 (1985). -William I. McLaughlin, "Human Intelligence in the Age of the Intelligent Machine", 17, 277 (1984). -Stephen Wilson, "ComputerArt: Artificial Intelligenceand the Arts", 16, 15(1983). -Peter Kugel, "Artificial Intelligence and Visual Art", 14, 136 (1981). -Michael J. Apter, "Can Computers Be Programmed to Appreciate Art?", 9, 17 (1977). -Michael Thompson, "Intelligent Computers and Visual Artists", 7, 227 (1974).

Dietrich, Visual Intelligence

169

