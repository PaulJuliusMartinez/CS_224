Global Illumination Compendium
September 29, 2003
Philip Dutré phil@cs.kuleuven.ac.be Computer Graphics, Department of Computer Science Katholieke Universiteit Leuven
http://www.cs.kuleuven.ac.be/~phil/GI/

This collection of formulas and equations is supposed to be useful for anyone who is active in the field of global illumination in computer graphics. I started this document as a helpful tool to my own research, since I was growing tired of having to look up equations and formulas in various books and papers. As a consequence, many concepts which are `trivial' to me are not in this Global Illumination Compendium, unless someone specifically asked for them. Therefore, any further input and suggestions for more useful content are strongly appreciated.
If possible, adequate references are given to look up some of the equations in more detail, or to look up the derivations. Also, an attempt has been made to mention the paper in which a particular idea or equation has been described first. However, over time, many ideas have become `common knowledge' or have been modified to such extent that they no longer resemble the original formulation. In these cases, references are not given. As a rule of thumb, I include a reference if it really points to useful extra knowledge about the concept being described.
In a document like this, there is always a fair chance of errors. Please report any errors, such that future versions have the correct equations and formulas.
Thanks to the following people for providing me with suggestions and spotting errors: Neeharika Adabala, Martin Blais, Michael Chock, Chas Ehrlich, Piero Foscari, Neil Gatenby, Simon Green, Eric Haines, Paul Heckbert, Vladimir Koylazov, Vincent Ma, Ioannis (John) Pantazopoulos, Fabio Pellacini, Robert Porschka, Mahesh Ramasubramanian, Cyril Soler, Greg Ward, Steve Westin, Andrew Willmott.

This document can be distributed freely at a cost no higher than needed for reproduction. © Copyright, 1999, 2000, 2001, 2002, 2003; Philip Dutré This document produced at Program of Computer Graphics, Cornell University (1999-2001) and Department of Computer Science, Katholieke Universiteit Leuven (2001-2003)

Global Illumination Compendium

1

Table of Contents

I. General Mathematics

6

(1) Dirac-impulse (-function) ............................................................................................................................................... 6

(2) Kronecker ....................................................................................................................................................................... 6

II. Probability

7

(3) Probability density function (pdf) ..................................................................................................................................... 7

(4) Probability distribution function (a.k.a cumulative distribution function or cdf)............................................................. 7

(5) Expected value of a random variable x with pdf p(x)....................................................................................................... 7

(6) Variance of a random variable x with pdf p(x) ................................................................................................................. 7

(7) Generate random variable with given density , using inverse cdf .................................................................................... 7

(8) Generate random variable with given density , using rejection sampling ........................................................................ 8

III. Geometry

9

(9) Ray casting function.......................................................................................................................................................... 9

(10) Visibility function ........................................................................................................................................................... 9 (11) Member function........................................................................................................................................................... 10

(12) Intersection of ray with object ...................................................................................................................................... 10

A. Geometric Transformations

10

(13) Translation .................................................................................................................................................................... 10

(14) Rotation......................................................................................................................................................................... 10

(15) Coordinate transforms................................................................................................................................................... 11

B. Triangles

11

(16) Surface area of a triangle .............................................................................................................................................. 11

(17) Barycentric coordinates (a.k.a. trilinear coordinates or homogeneous coordinates) .................................................... 12

(18) Generate random point in triangle with probability density ........................................................................................ 12

C. Disks

12

(19) Generate random point on unit disk with probability density ...................................................................................... 12 (19a) Polar map .................................................................................................................................................................. 13

(19b) Concentric map......................................................................................................................................................... 13

IV. Hemispherical Geometry

15

A. General

15

(20) Finite Solid angle .......................................................................................................................................................... 15

(21) (Hemi-)Spherical coordinates: (, ) parametrisation ................................................................................................. 15

(22) Differential solid angle for (, ) parametrisation........................................................................................................ 15

(23) (, c) parametrisation of hemisphere ............................................................................................................................ 15

(24) (1, 2) parametrisation of hemisphere ......................................................................................................................... 16 (25) Transformation between differential surface area and differential solid angle ............................................................ 16

(26) Solid angle subtended by a surface ............................................................................................................................... 16

(27) Visible solid angle subtended by a surface ................................................................................................................... 16

(28) Solid angle subtended by a polygon ............................................................................................................................. 16

(29) Tangent-sphere function ............................................................................................................................................... 17

(30) Useful integrals (cosine lobes) over the hemisphere (see also 33, 34, 35 and 36) ....................................................... 17

(31) Useful integrals over spherical digons .......................................................................................................................... 17

(31a) (cosine lobe is non-zero on only)............................................................................................................................ 17

(31b) (cosine lobe is non-zero on only) ........................................................................................................................... 18

(32) Dirac-impulse on hemisphere (see also 1) .................................................................................................................... 18

B. Generating points and directions on the (hemi)sphere

18

(33) Generate random point on sphere with density ........................................................................................................... 19

(34) Generate random direction on unit hemisphere proportional to solid angle................................................................. 19

(35) Generate random direction on unit hemisphere proportional to cosine-weighted solid angle...................................... 19

(36) Generate random direction on unit hemisphere proportional to cosine lobe around normal........................................ 20

(37) Generate uniform random direction on a spherical triangle ......................................................................................... 21 (38) Generate random direction on spherical digon; density proportional to cosn;  angle from off-normal axis ........... 21

V. Monte Carlo Integration,

22

(39) General Properties of Monte Carlo estimators.............................................................................................................. 22

Table of Contents

2

(40) Basic MC integration .................................................................................................................................................... 22 (41) MC integration using importance sampling.................................................................................................................. 22 (42) MC integration using stratified sampling...................................................................................................................... 23 (43) Combined estimators..................................................................................................................................................... 23 (44) Combined estimators: balance heuristic ....................................................................................................................... 23 (45) Efficiency of a Monte Carlo estimator.......................................................................................................................... 24 (46) Quasi-random sequences............................................................................................................................................... 24

VI. Radiometry & Photometry

25

(47) Radiometric and Photometric units............................................................................................................................... 25

(48) Flux: radiant energy flowing through a surface per unit time (Watt = Joule/sec) ........................................................ 25

(49) Irradiance: incident flux per unit surface area (Watt/m2)............................................................................................. 25

(50) Radiant Intensity: flux per solid angle (Watt/sr)........................................................................................................... 25

(51) Radiance: flux per solid angle per unit projected area (Watt/m2sr) ............................................................................. 26

(51a) Notations:.................................................................................................................................................................. 26

(51b) Wavelength Dependency:......................................................................................................................................... 26

(51c) Invariant along straight lines: ................................................................................................................................... 26

(51d) Integration: specify integration domain if specific values are needed ..................................................................... 26

(52) Radiometric quantities  Photometric quantities ........................................................................................................ 27

VII. Optics

28

(53) Reflection at perfect mirror (incoming, outgoing direction, surface normal in same plane)........................................ 28

(54) Refraction at transition from vacuum to material (incoming, refracted direction, surface normal in same plane) ...... 28

(55) Refraction at transition from material to vacuum (incoming, refracted direction, surface normal in same plane) ...... 28

(56) Refraction at transition from material 1 to material 2 (incoming, refracted direction, surface normal in same plane) 28

(57) Total internal refraction (incoming, refracted direction, surface normal in same plane) ............................................. 29

(58) Fresnel Reflection - Conductors ................................................................................................................................... 29

(60) Index of Refraction Data Values................................................................................................................................... 30

VIII.Bidirectional Reflectance Distribution Functions (BRDFs)

31

A. General properties

31

(61) BRDF: .......................................................................................................................................................................... 31 (62) BRDF Reciprocity......................................................................................................................................................... 31 (63) BRDF Energy conservation .......................................................................................................................................... 31 (64) Biconical Reflectance ................................................................................................................................................... 31 (65) Lambertian Diffuse Reflection...................................................................................................................................... 31

B. BRDF models

32

(66) Modified Phong-BRDF................................................................................................................................................. 32 (67) Modified Phong-BRDF - Blinn Variant........................................................................................................................ 34 (68) Cook-Torrance-BRDF .................................................................................................................................................. 34 (69) Ward-BRDF .................................................................................................................................................................. 35 (70) Lafortune-BRDF ........................................................................................................................................................... 36

C. BRDF Measurements

36

(71) Cornell Measurements .................................................................................................................................................. 36

IX. Rendering Equation and Global Illumination Formulations

37

A. Radiance Transport Formulations

37

(72) Rendering Equation (Radiance), integration over incoming hemisphere ..................................................................... 37

(73) Rendering Equation (Radiance), integration over all surfaces in the scene.................................................................. 37

(74) Direct Illumination Equation (Radiance), integration over all light sources ................................................................ 37

(74a) Integration over the area of all light sources: ........................................................................................................... 37

(74b) Integration over solid angles subtended by light sources:........................................................................................ 38

(74c) Integration over visible solid angles subtended by light sources: ............................................................................ 38

(75) Continuous Radiosity Equation: diffuse reflection, diffuse light sources, integration over surfaces ........................... 38 (76) Participating medium .................................................................................................................................................... 38

(77) Participating medium, no scattering.............................................................................................................................. 39

B. Dual Transport Formulation

39

(78) Relationship between Flux, Radiance, Potential........................................................................................................... 39

X. Form Factors

41

A. General Expressions and Properties

41

Table of Contents

3

(79) Differential element to differential element Form Factor ............................................................................................. 41

(80) Differential element to element Form Factor................................................................................................................ 41 (81) Differential element to polygon Form Factor; full visibility ........................................................................................ 41

(82) Element to element Form Factor................................................................................................................................... 42

(83) Element to element Form Factor; full visibility; Stoke's Theorem .............................................................................. 42

(84) Form Factor Algebra ..................................................................................................................................................... 42

(85) Nusselt's Analog (projection on a disk)........................................................................................................................ 42

(86) Projection on a sphere ................................................................................................................................................... 43

B. Computing Form Factors using Monte Carlo Integration

43

(87) Uniform area sampling on both surfaces ...................................................................................................................... 43

(88) Uniform area sampling + uniform solid angle sampling .............................................................................................. 43

(89) Uniform area sampling + cosine-weighted solid angle sampling ................................................................................. 44

(90) Uniform area sampling + cosine-weighted hemisphere sampling ................................................................................ 44

(91) Global Lines .................................................................................................................................................................. 44

XI. Radiosity System & Algorithms

46

(92) System of radiosity equations, constant basis functions ............................................................................................... 46

(93) System of power equations, constant basis functions ................................................................................................... 46

(94) Discretizing the continuous radiosity equation............................................................................................................. 46

(94a) Point Collocation ...................................................................................................................................................... 47

(94b) Galerkin .................................................................................................................................................................... 47

(95) Basic Relaxation Algorithm.......................................................................................................................................... 47

(96) Gauss-Seidel iteration ................................................................................................................................................... 48

XII. Radiosity Extensions

49

(97) Clustering - Equivalent extinction coefficient .............................................................................................................. 49

(98) Final Gathering ............................................................................................................................................................. 49

XIII.Pixel-driven Path Tracing Algorithms

50

A. Direct illumination using shadow-rays

50

(99) Single light source, uniform sampling of light source area .......................................................................................... 50

(100) Single light source, uniform sampling of solid angle subtended by light source ....................................................... 50

(101) Multiple light sources, uniform random source selection, uniform sampling of light source area ............................ 51

(102) Multiple light sources, uniform random source selection, uniform sampling of light source solid angle.................. 51

(103) Multiple light sources, non-uniform random source selection, non-uniform sampling of light source area.............. 52

(104) Various strategies for computing direct illumination due to multiple light sources ................................................... 52

(105) Multiple light sources, uniform sampling of hemisphere ........................................................................................... 53

(106) Multiple light sources, non-uniform sampling of hemisphere .................................................................................... 54

(106a) Multiple light sources, uniform sampling of hemisphere: see 105......................................................................... 54

(106b) Multiple light sources, cosine-sampling of hemisphere ......................................................................................... 54

(106c) Multiple light sources, BRDF-sampling of hemisphere ......................................................................................... 54

(106d) Multiple light sources, BRDF.cosine-sampling of hemisphere.............................................................................. 55

B. Ray Tracing

55

(107) Stochastic ray tracing - general idea ........................................................................................................................... 55

(108) Next event estimation (split in direct and indirect term) ............................................................................................ 56

(108a) Uniform sampling of hemisphere ........................................................................................................................... 56

(108b) Cosine-sampling of hemisphere ............................................................................................................................. 56

(108c) BRDF-sampling of hemisphere .............................................................................................................................. 56

(108d) Multiple light sources, BRDF.cosine-sampling of hemisphere.............................................................................. 57

(109) End of recursion - Russian Roulette ........................................................................................................................... 57

C. Light Tracing

58

D. Bidirectional Tracing

58

XIV. Multipass Algorithms A. Photon Mapping

60 60

XV. Test Scenes for Global Illumination

61

(110) Mother of all test scenes.............................................................................................................................................. 61

(111) Analytic Solution - General Rendering Equation ....................................................................................................... 61

(112) Analytic Solution - Radiosity System......................................................................................................................... 61

(113) Testing global illumination algorithms ....................................................................................................................... 61

Table of Contents

4

(114) Testing ray tracing performance ................................................................................................................................. 61 (115) Testing animated ray tracing....................................................................................................................................... 61

XVI.Color & Display

62

(116) Spectrum to CIE XYZ................................................................................................................................................ 62

(117) xyY to XYZ ................................................................................................................................................................ 62

(118) CIE XYZ to Spectrum ................................................................................................................................................ 62

(119) CIE XYZ to/from NTSC standard RGB based on standard CIE phospors and D6500 white point........................... 63

(120) CIE XYZ to/from color space .................................................................................................................................... 63

(121) CIE XYZ to/from color space .................................................................................................................................... 64

Table of Contents

5

I. General Mathematics
(1) Dirac-impulse (-function) (x) = 0 if x  0
 (a ­ x)f(x)dx = f(a) if a  D
D
Notation: (a ­ x) = a(x) (2) Kronecker 
ij = 1 if i = j ij = 0 if i  j

General Mathematics

6

II. Probability

(3) Probability density function (pdf)

Constraints:  p(x)dx = 1
D

x: p(x)  0

b
Probability that a random variable y belongs to interval [a, b] : Prob[a  y  b] = p(x)dx
a
(4) Probability distribution function (a.k.a cumulative distribution function or cdf)

P(x) is the probability that a random variable y , generated using p(y) , has a value lower than or equal than x .

x
P(x) =  p(x)dx
­
0 = P(­)  P(x)  P() = 1

(5) Expected value of a random variable x with pdf p(x)


E[x] =  xp(x)dx
­


E[f(x)] =  f(x)p(x)dx
­

(6) Variance of a random variable x with pdf p(x)

2[f(x)] = E[(f(x) ­ E[f(x)])2] 2[f(x)] = E[f(x)2] ­ E[f(x)]2

(7) Generate random variable with given density p(x) , using inverse cdf

Generate uniform random number r, 0  r  1 then compute x = P­1(r) .

For multidimensional sampling: use marginal or conditional probability distributions, and apply the inverse for

each variable seperately.

p(x) P(x)

P(x)

11

integration

r2 r1

Probability

x

x P­1(r1) P­1(r2) x
7

(8) Generate random variable with given density p(x) , using rejection sampling
Find M such that x: p(x)  M ; generate uniform random tuplet (x', y')  D × [0, M] . If p(x')  y' accept sample x' ; otherwise reject and try again.
p(x) reject
M

accept

x

More general: construct a pdf q(x) such that x: p(x)  Mq(x) . Generate a random sample x' according to q(x) . Generate a uniform random number r, 0  r  1 . If r  p(x') / Mq(x') accept sample x' , otherwise reject and try again.

Probability

8

III. Geometry

Notations:
dAx Differential surface area at surface point x nx Surface normal at point x  Direction vector:  (usually assumed to be normalized) xy Direction vector from x to y : xy = y ­ x A Union of all surfaces in the scene, also used for total surface area of all
surfaces in the scene. Ap Collection of all surface patches in the scene
(9) Ray casting function
Closest surface point visible from (any) point x in direction  :
r(x, ) = x + tinf   tinf = inf{t > 0:(x + t  )  A}

nx
surface x


dAx

surface r(x, )

if y = r(x, ) and x  A  x = r(y, ­) or x = r(r(x, ), ­)


x surface
y = r(x, )

surface



x = r(y, ­)

-

Shorthand notation for r(x, ) : x (10) Visibility function

x, y  A:

V(x, y)

=

1  0

if x and y are mutually visible if x and y are not mutually visible

The visibility function is often used in various formulations of the rendering equations using area integrals (e.g. 73), or in the equations describing form factors (e.g. 79).

Geometry

9

(11) Member function

x  A, j  Ap:

M(x, j)

=

1  0

if x belongs to surface patch j if x does not belong to surface patch j

The member function is a handy shorthand notation when one wants to express whether a surface points belongs to a patch. E.g. computing form factors using Monte Carlo integration (87).
(12) Intersection of ray with object
A good overview of various ray-object intersection techniques can be found at: http://www.realtimerendering.com/int/
A. GEOMETRIC TRANSFORMATIONS
Tranformation in 3D graphics are usually represented by 4x4 matrices. The 4th homogeneous coordinate is needed for translations and perspective transforms. A basic overview can be found in any introductory book on computer graphics.
A right-handed coordinate system is assumed.
(13) Translation

Translate a point x by translation vector d : x' = T(d)  x

T(d) =

1 0 0 dx 0 1 0 dy 0 0 1 dz 0001

1 0 0 ­dx
T­1(d) = 0 1 0 ­dy 0 0 1 ­dz
0001

(14) Rotation

Rotate point x around the X -axis by angle  : x' = Rx()  x

Rx() =

1000 0 cos ­ sin  0 0 sin cos 0 0001

Rx­1() =

100 0 cos  sin  0 ­ sin  cos  000

0 0 0 1

Rotate point x around the Y -axis by angle  : x' = Ry()  x

Ry() =

cos  0
­ sin  0

0 1 0 0

sin  0
cos  0

0 0 0 1

R­y1() =

cos  0
sin  0

0 ­ sin  0 100 0 cos  0 001

Rotate point x around the Z -axis by angle  : x' = Rz()  x

Rz() =

cos ­sin  sin  cos
00 00

0 0 1 0

0 0 0 1

R­z 1() =

cos sin  ­ sin cos 
00 00

0 0 1 0

0 0 0 1

Geometry

10

Rotation such that basis vectors (x,y,z) become orthonormal vectors (u,v,w):

R(uvw) =

ux vx wx 0 uy vy wy 0 uz vz wz 0 0001

R­1(uvw) =

ux uy uz 0 vx vy vz 0 wx wy wz 0 0 0 01

(15) Coordinate transforms
Summary: To transform the coordinates of a point, expressed in coordinate system 1, to coordinates expressed in coordinate system 2; apply the transformation that transforms the axes of coordinate system 2 into the axes coordinate system 1.
o ­ xyz : Canonical coordinate system p ­ uvw : Coordinate system with origin in p , and orthonormal axes uvw (expressed in OXYZ).
qo ­ xyz : point q expressed in o ­ xyz qp ­ uvw : point q expressed in p ­ uvw
qp ­ uvw = M(p ­ uvw)qo ­ xyz
ux uy uz 0 1 0 0 ­px M(p ­ uvw) = R­1(uvw)T­1(p) = vx vy vz 0 0 1 0 ­py
wx wy wz 0 0 0 1 ­pz 0 0 01 0 0 0 1

qo ­ xyz = M­1(p ­ uvw)qp ­ uvw

M­1(p ­ uvw) = T(p)R(uvw) =

1 0 0 px ux vx wx 0 0 1 0 py uy vy wy 0 0 0 1 pz uz vz wz 0 0001 0 0 0 1

ux vx wx px
= uy vy wy py uz vz wz pz
000 1

B. TRIANGLES
(16) Surface area of a triangle

If a, b, c are the vertices of a triangle:

area = ---a----×-----b-----+----b-----2×-----c----+-----c----×-----a----

Geometry

11

(17) Barycentric coordinates (a.k.a. trilinear coordinates or homogeneous coordinates)

p(, , ) = a + b + c ( +  +  = 1 )

c

0<<1 p is inside triangle if and only if 0 <  < 1
0<<1



=

-A---aA

=

-----------------l--a--l--a---'--------------lala' + lblb' + lclc'

Also:



=

-A---bA

=

-----------------l--b--l--b---'--------------lala' + lblb' + lclc'



=

A----cA

=

l--a---l--a--'---+-----ll--cb--l-l-cb--'-'--+-----l--c---l--c-'

lb' Ab lb

Aa la' la

ap

lc lc'

Ac

b

( A is total area of triangle)

(18) Generate random point in triangle with probability density p(x) = 1 / A r1 and r2 are random numbers, uniformly generated over the interval [0, 1]

 = 1 ­ r1  = (1 ­ r2) r1  = r2 r1
with (, , ) the barycentric coordinates (see 17) of the random point.
(method as described in R40)
C. DISKS
(19) Generate random point on unit disk with probability density p(x) = 1 / 
In general, a disk is parametrized by:
  [0, 2] r  [0, 1]
Random numbers (r1, r2)  [0, 1] × [0, 1] need to be mapped to (, r) coordinates.

r

 =0

Geometry

12

(19a) Polar map
This map preserves fractional area, but is not bicontinuous and has severe distortions. r2 
r =0
r1
r1 and r2 are random numbers, both uniformly generated over the interval [0, 1]
r = r1  = 2r2
(19b) Concentric map
This map was first proposed by Shirley in the context of ray tracing and illumination computations (R31)1. This map preserves fractional area, is bicontinuous and has low distortion. See reference in footnote for an implementation.
r2 
r =0
r1

r2 r1

r  =0

r1 and r2 are random numbers, both uniformly generated over the interval [­1, 1] (This can easily be transformed from random numbers in the interval [0, 1] ).

1st triangular region ( r1 > ­r2 and r1 > r2 ):

r = r1



=

-4



-r--2r1

1. Pictures in this section of the Compendium are based on the pictures in this book.

Geometry

13

2nd triangular region ( r1 < r2 and r1 > ­r2 ):

r = r2



=

-4



 

2

­

rr---21-

3rd triangular region ( r1 < ­r2 and r1 < r2 ):

r = ­r1



=

-4



 

4

+

-rr--21-

4th triangular region ( r1 > r2 and r1 < ­r2 ):

r = ­r2



=

-4-



 

6

­

-rr--21-

Geometry

14

IV. Hemispherical Geometry

A. GENERAL

(20) Finite Solid angle



=

-A--r2

Solid angles are dimensionless and expressed in steradians. The solid angle subtended by all space equals 4 .

(21) (Hemi-)Spherical coordinates: (, ) parametrisation

direction  = (, )

  [0, 2]   [0,  / 2]

x = r cos  sin y = r sin  sin  z = r cos

nx

A

 xr

Z



direction  solid angle d

xY

r = x2 + y2 + z2 tan  = y / x

tan 

=

-----x---2---+-----y---2z

 X

dxdydz = r2 sin drdd

Spherical coordinates: above formulas remain the same, except   [0, ] (22) Differential solid angle for (, ) parametrisation
d = sin dd

2 / 2
Integral over the hemisphere:  f()d =   f(, ) sin dd
 00

(23) (, c) parametrisation of hemisphere

2 / 2

21

Apply coordinate transform:

 c

= =

 1­

: cos 

 f()d

=



 f(, ) sindd =

 f(, c)dcd

 00

00

Equally sized areas in (, c) space translate to equally sized solid angles.

Hemispherical Geometry

15

(24) (1, 2) parametrisation of hemisphere

1 Apply coordinate transform:
   2

= =

sin2 

2------

: f()d


=

2 / 2
f(, ) sin dd
00

=

11

0

0

f--(------1--,-------2---) 1 ­ 21

d

1d2

Equally sized areas in (1, 2) space translate to equally sized, cosine-weighted solid angles.

(25) Transformation between differential surface area and differential solid angle

d

=

-c---o---s------y--d----A----y rx2y

solid angle d

ny
y
rxy

y dAy

(26) Solid angle subtended by a surface

x direction 

 x ( j )

=

A

j

-c---o---s------y rx2y

d

A

y

x(j)

ny y dAy
y
rxy

j

(27) Visible solid angle subtended by a surface

x

Parts of the surface j might not be visible to x . Therefore, visibility between x and all surface points y on j needs to be included explicitly.

xvis(j) = Aj -c--o-r--sx-2--y----yV(x, y)dAy
(28) Solid angle subtended by a polygon

Girard's formula:

x = i ­ (n ­ 2)
i
with:
n : number of vertices of the polygon i : dihedral angles (angles between the planes formed by the edges of the polygon and the projection point x )
This formula is valid for convex and concave polygons. An implementation is given in Graphics Gems (R27, R6).

i 
x

Hemispherical Geometry

16

(29) Tangent-sphere function
In the context of global illumination, one is often interested in the cosine of the angle between a direction  on the hemisphere and the normal vector nx at a surface point x , but only if the direction is located at the same side of the surface of nx . If  is `below' the surface, the value is 0 . Some authors (R34) introduce the `tangentsphere' function for this purpose:

Tnx()

=

nx   0

if nx    0 otherwise

In this document, the notation cos(, nx) is often used.

(30) Useful integrals (cosine lobes) over the hemisphere (see also 33, 34, 35 and 36)

2  / 2

 d =  d  sin d = 2
 00
2  / 2

 cos (, nx)d =  d  cos sin d = 

 00

2  / 2

 cosn (, nx)d =

 d



cosn sind

=

---2-------n+1

 00

Integrals of cosine lobes are useful because many BRDF models (e.g. Lafortune model, see 70) make use of these lobes, although usually not centered around the normal.

Limiting the integration area to the spherical cap bounded by   [0, max]

nx

2 m

  cosn(, nx)d =

d

cosn sin d

=

---2-------n+1

(

1

­

cosn

+

1 max)

m 0 0

max

(31) Useful integrals over spherical digons

(31a) cosn(, m) cos(, nx)d (cosine lobe is non-zero on 2 only)
2

A method for computing this integral was presented by J. Arvo, as part of a general method for computing double-axis moments on the hemisphere (R2). Pseudocode looks as follows:

1

F(nx, m, n) S = 0;
d = m.nx; c = sqrt(1-d*d); T = if even(n) then /2 else c; A = if even(n) then /2 else -acos(d); i = if even(n) then 0 else 1;
while i <= n-2 do

Hemispherical Geometry

nx m
2
17

S = S+T; T = T*c*c*(i+1)/(i+2); i = i+2; endwhile return 2*(T + d*A + d*d*S)/(n+2) end

(31b) cosn(, m)d (cosine lobe is non-zero on 2 only)
2
An expression can be derived from the same paper (although this form is not explicitly mentioned):

n even: n odd:

 cosn(, m)d

=

2----(-------­--------m----)---+------c--o---s------m----[---s--i--n---n----­---1-------m---F----n----­----1---+------s--i--n---n---­----3------m----F----n----­---3----+-----...--------+-----s--i--n-------m----F----1--]n+1

2

 cosn (, m)d = -----+------c--o---s------m----[---s--i--n---n----­---1-------m---F----n----­---n-1---++-----1-s--i--n---n---­----3------m----F----n----­---3----+-----...--------+----F----0---]-
2

m = acos(m  nx)

where: Fn

=

-n----­----1-- F n n­2

F0 = 

F1 = 2

(32) Dirac-impulse on hemisphere (see also 1)

(1 ­ ) = ( cos 1 ­ cos)(1 ­ ) 1 = (1, 1)  = (, )

such that:

2  / 2
 (1 ­ )f()d =  d(1 ­ )  d( cos)( cos 1 ­ cos)f(, )
 00 2
= d(1 ­ )f(, 1) = f(1, 1) = f(1)
0
B. GENERATING POINTS AND DIRECTIONS ON THE (HEMI)SPHERE

Generating random directions over the hemisphere is a fundamental operations in most Monte Carlo-based rendering algorithms. The rendering equation (see section IX) is usually expressed as an integral over the hemisphere, so sampling the hemispherical domain requires generating directions over the hemisphere.

r1 and r2 are random numbers, uniformly generated over the interval [0, 1] . Some of the formulas can be simplified by substituting a uniform random variable r with 1 ­ r or vice versa. Since both have the distribution, the resulting distribution of directions is not affected.

Hemispherical Geometry

18

(33)

Generate random point on sphere

(cx, cy, cz, R)

with density

p()

=

------1-----4R2

 = 2r1  = acos (1 ­ 2r2)

x = cx + 2R cos (2r1) r2(1 ­ r2) y = cy + 2R sin (2r1) r2(1 ­ r2) z = cz + R(1 ­ 2r2)

(34) Generate random direction on unit hemisphere proportional to solid angle

PDF: p() = -2-1----

 = 2r1  = acos (r2)

x = cos(2r1) 1 ­ r22 y = sin (2r1) 1 ­ r22 z = r2

With   [0, max] and p() = 2-------(---1----­-----c-1--o---s------m----a---x---) :

nx max

 = 2r1  = acos (1 ­ r2(1 ­ cos max))

x = cos (2r1) 1 ­ (1 ­ r2(1 ­ cosmax))2
y = sin (2r1) 1 ­ (1 ­ r2(1 ­ cos max))2 z = 1 ­ r2(1 ­ cosmax)

Generating points uniformly on the disk (see 19), and then applying the following transformation, also produces a uniform distribution of points on the hemisphere:

Point on disk: (d, rd)

 = d

x = cos d  rd 2 ­ r2d

Resulting point on hemisphere:  = acos(1 ­ r2d) or y = sin d  rd 2 ­ r2d

z = 1 ­ r2d

(35) Generate random direction on unit hemisphere proportional to cosine-weighted solid angle

PDF: p() = -c--o---s-----

Hemispherical Geometry

19

 = 2r1  = acos ( r2)

x = cos (2r1) 1 ­ r2 y = sin (2r1) 1 ­ r2 z = r2

With

  [0, max]

and

p()

=

--------c---o--s----------- sin2 max

 = 2r1  = acos ( 1 ­ r2 sin2 max)

x = cos(2r1) sin max r2 y = sin(2r1) sin max r2 z = 1 ­ r2 sin2 max

Generating points uniformly on the disk (see 19), and then projecting them on the hemisphere, also gives a cosine-weighted distribution of points on the hemisphere.
Point on disk: (d, rd)

A

x = rd cos d

 = d Resulting point on hemisphere:

or y = rd sin d

 = asin(rd)

z = 1 ­ rd2

(36) Generate random direction on unit hemisphere proportional to cosine lobe around normal

PDF: p() = n---2--+-----1- cosn 

 = 2r1



=

acos

  

r2-n----+1-----1-

-----2------
x = cos (2r1) 1 ­ r2n + 1

-----2------

y = sin (2r1)

1

­

r

n 2

+

1

z = r2-n----+1-----1-

With

  [0, max]

and

p()

=

----------(---n----+-----1----)--c---o---s--n--------------2(1 ­ cosn + 1 max)

 = 2r1



=

 acos (1


­

r2(1

­

cosn

+

1



m

ax

)

)

-n----+1-----1- 

n = 0 produces (34); n = 1 produces (35).

-----2------
x = cos(2r1) 1 ­ (1 ­ r2(1 ­ cosn + 1 max))n + 1 y = sin (2r1) 1 ­ (1 ­ r2(1 ­ cosn + 1 max))-n----+2-----1-
-----1------
z = (1 ­ r2(1 ­ cosn + 1 max))n + 1

Hemispherical Geometry

20

(37) Generate uniform random direction on a spherical triangle
See the paper published by J. Arvo in SIGGRAPH 95 for a complete formula and algorithm (R1).
(38) Generate random direction on spherical digon; density proportional to cosn;  angle from off-normal axis
1. Generate direction on unit hemisphere proportional to cosn  using (36). 2. Transform direction by transforming normal to off-normal axis. 3. If transformed direction has angle greater then /2 with normal, reject direction and try again. 4. Compute correct pdf-value by normalizing cosn  using (31b).

Hemispherical Geometry

21

V. Monte Carlo Integration1,2

(39) General Properties of Monte Carlo estimators Let F(N) be a stochastic estimator for quantity Q , using N samples. Error: F(N) ­ Q Bias: (F(N)) = E[F(N) ­ Q] . If bias is zero for all N , then estimator is unbiased.

Estimator

is

consistent

if:

 Prob

lim

F(N)

=

 Q

=

1.

A

sufficient

condition

for

an estimator

to

be

unbiased

N  



is: lim (F(N)) = lim 2[F(N)] = 0

N

N

(40) Basic MC integration

I =  f(x)dx
D
D = [1...1] × [2...2] × ... × [d...d]

(i, i  )

 d  ­1

Generate a sequence of samples

(x1, x2, x3, ..., xN)

using a uniform pdf

p(x)

=

 

(i ­ i)

i = 1



 I

= N-1--

N



f ( xi )



 

d

 (i ­ i)

 i = 1  i = 1



E[  I ] =  f(x)dx (unbiased estimator)
D

   2[  I ]

=

-------------d------1-------------------- (f(x) ­ I)2dx N  (i ­ i)D

=

-------------d------1-------------------N  (i ­ i)

  D

f(

x

)2dx

­

I2 

i=1

i=1

(41) MC integration using importance sampling

Generate a sequence of samples (x1, x2, x3, ..., xN) using pdf p(x)

N

 I

=

-1-N

-pf--(-(--xx--i-i-)-)

i=1

E[  I ] =  f(x)dx
D

 2[  I ]

=

-1-N

 

p-f--(-(--xx---)-)

­

I

2
p ( x ) dx

D

=

-1-N

  

D

-fp--(--(x--x-)--)2-

dx

­

I2 

1. For an introduction on Monte Carlo integration: (R18, R37, R21, R14) 2. An excellent text covering Monte Carlo methods for global Illumination is the Ph.D. thesis of Eric Veach (R44).

Monte Carlo Integration,

22

Optimal pdf for importance sampling, giving minimum variance:

p(x) = ------f--(--x---)-----
 f(x)dx
D

For the estimator to be unbiased, p(x) must be non-zero wherever f(x) is non-zero.

(42) MC integration using stratified sampling

1 1 2

m ­ 1

1

f(x)dx =  f(x)dx +  f(x)dx + ... +  f(x)dx +  f(x)dx

0 0 1

m ­ 2

m ­ 1

If each stratum j receives nj samples, distributed uniformly within each stratum:

   2 =

m

(-------j---­--------j---­---1---)nj

j

f(x)2dx ­

m

 j 2

-1-nj

  

f(x

)

dx

 



j=1

j ­ 1

j = 1 j ­ 1



If all strata have equal size, and each stratum contains one sample:

1

N  j

2

2

=

-1-N



f

(

x

)

2dx

­



 





f ( x ) dx

 



0

j = 1j ­ 1



(43) Combined estimators

 I =

n

--1-Nj

Nj

wj(xi, j)-p-f--j(-(-x--x-i--,i-,-j--j)-)-

j=1 i=1

with xi, j the ith sample, from a total of Nj , taken from pdf pj(x) .
n
If  wj(x) = 1 for all x, then  I is unbiased.
j=1
(see R43)

(44) Combined estimators: balance heuristic

Balance Heuristic: wj(x) = -----c---j-p----j-(---x---)----- with Nj = cjN , with N total number of samples.
j cjpj(x)

If  I bh is obtained by the balance heuristic, and  I by any other set of wj(x) , then:

 2[

 I bh]



2[

 I ]

+

  

--------1-------minjNj

­

------1------- j Nj

f ( x ) dx
D

Monte Carlo Integration,

23

One sample model ( N = 1 ): if pj is cosen with probability cj , then the balance heuristic gives the lowest variance.
(45) Efficiency of a Monte Carlo estimator



=

----1----T2

where T is the time to take 1 sample, and

2 is the variance for 1 sample.

(see R21, pp. 91-92) (46) Quasi-random sequences



 Radical inverse function: i =

ajbj  b(i) =

ajb­ j ­ 1

j=0

j=0

a. Van der Corput sequence

xi = b(i)

b. Halton sequence (s dimensions)

xi = (b1(i), b2(i), b3(i), b4(i), ..., bs(i)) with b1, b2, b3, ..., bs relative primes.

c. Hammersley sequence (s dimensions, length N )

xi

=

 

-N-i-,

b1(

i

),

b2

(

i

),

b3

(

i

),

b4(

i

),

...,

bs

­

1

(

i

)

with b1, b2, b3, ..., bs ­ 1

relative primes.

Monte Carlo Integration,

24

VI. Radiometry & Photometry

· A general overview of units and measurements can be found at the "How many?" website (http://www.unc.edu/~rowlett/units/index.html).
· Another overview of light measurements and units is compiled in the Light Measurement Hanbook: http://www.intl-light.com/handbook/registered.html
(47) Radiometric and Photometric units

Joule Watt Watt/m2
Watt/sr Watt/m2sr

Radiometry Radiant Energy Q Radiant Power Radiosity (Radiant exitance) Irradiance Radiant Intensity
Radiance

Photometry

 Luminous Energy

Talbot

 Luminous Power

Lumen (lm)

 Luminosity Illuminance

Lux (lm/m2)

 Luminous Intensity

Candelaa (cd or lm/sr)

 Luminance

Nit (cd/m2 or lm/m2sr)

a. From the "How Many" website: Candela: the fundamental SI unit for measuring the intensity of light. Candela is the Latin word for "candle." The unit has a long and complicated history. Originally, it represented the intensity of an actual candle, assumed to be burning whale tallow at a specified rate in grains per hour. Later this definition was replaced with a definition in terms of the light produced by the filament of an incandescent light bulb. Still later a standard was adopted which defined the candela as the intensity of 1/600 000 square meter of a "black body" (a perfect radiator of energy) at the temperature of freezing platinum (2042 K) and a pressure of 1 atmosphere. This definition has also been discarded, and the candela is now defined to be the luminous intensity of a light source producing single-frequency light at a frequency of 540 terahertz (THz) with a power of 1/683 watt per steradian, or 18.3988 milliwatts over a complete sphere centered at the light source. The frequency of 540 THz corresponds to a wave length of approximately 555.17 nanometers (nm). Light of this frequency has a yellow-green color and roughly the same visual brightness as ordinary daylight. In addition, normal human eyes are more sensitive to this wavelength than to any other. In order to produce 1 candela of single-frequency light of wavelength l, a lamp would have to radiate 1/(683V(l)) watts per steradian, where V(l) is the relative sensitivity of the eye at wavelength l. Values of V(l) are defined by the International Commission on Illumination (CIE).

(48) Flux: radiant energy flowing through a surface per unit time (Watt = Joule/sec)  = P = -d-d--Q-t-
(49) Irradiance: incident flux per unit surface area (Watt/m2) E = d-----dA Radiant exitance (a.k.a Radiosity): departing flux per unit surface area (Watt/m2) M = B = d-----dA
(50) Radiant Intensity: flux per solid angle (Watt/sr) I = d-d-----

Radiometry & Photometry

25

(51) Radiance: flux per solid angle per unit projected area (Watt/m2sr)
L = -dd---E-- = d----d----2d----A----- = d--------d-d---A2----c---o---s----
(51a) Notations:
L(x  ) : radiance leaving point x in direction  L(x  ) : radiance arriving at point x from direction  L(x  y) : radiance leaving point x, arriving at point y L(x  y) : radiance arriving at point x, coming from point y
(51b) Wavelength Dependency:
780 n m
L(x  ) =  L(x  , )d
380 n m
Wavelength dependency is usually assumed in radiometric eqautions.
(51c) Invariant along straight lines:
Radiance remains invariant along a straight path in vacuum:
L(x  y) = L(y  x) if x and y are mutually visible L(x  ) = L(r(x, )  ­)
Proof: consider power exchange d2 between 2 differential surfaces dAx and dAy . Power d2 arriving at dAy from dAx must equal power leaving dAx in the direction of dAy (full proof see R13 p.24).
(51d) Integration: specify integration domain if specific values are needed

 = L(x  ) cosddAx = E(x)dAx = I()d E(x) = L(x  ) cos d B(x) = L(x  ) cos d I() = L(x  ) cos dAx

For a diffuse emitter ( L(x  ) = L ) with surface area A and hemispherical solid angle ( 2 sr):
 = LA E(x) = L B(x) = L I() = LA cos
Radiometry & Photometry

26

(52) Radiometric quantities  Photometric quantities
Integrate radiometric quantity R() weighted by the spectral luminous efficiency curve V() . This curve is the same as the color matching function y() in the CIE XYZ color system (see 116)
V() 1

0.8

0.6

0.4

0.2

 ( n m )0
380 430 480 530 580 630 680 730 780

770 n m
P = Km  V()R()d
380 n m

Km = 680lumen/watt

Tabular data for the spectral luminous efficiency curve can be found in R16, p. 1170.

Radiometry & Photometry

27

VII. Optics

(53) Reflection at perfect mirror (incoming, outgoing direction, surface normal in same plane) r = i (incident angle = reflected angle)
Vector computation (incident direction i , normal nx , reflection vector r ): r = 2(nx  i) ­ i 2(nx  i) nx ­i
i r
x

(54) Refraction at transition from vacuum to material (incoming, refracted direction, surface normal in same plane)

-ss--i-i-nn-------ri = n

0

<

i

<

-2

sin g

=

-1n

0 < r < g

for small angles: ----ri = n (Kepler's formula)

(55) Refraction at transition from material to vacuum (incoming, refracted direction, surface normal in same plane)

if 0 < i < g

-ss--ii--nn-------ri

=

1-n

for small angles: ----ri = 1n--

(56) Refraction at transition from material 1 to material 2 (incoming, refracted direction, surface normal in same plane)

-ss--i-i-nn-------ri

=

n----2n1

=

n1  2

i

r g
r

i g

i r

n1 n2

Optics

28

(57) Total internal refraction (incoming, refracted direction, surface normal in same plane)

if

g

<

i

<

-2

t = i

(58) Fresnel Reflection - Conductors

g t i

n1 n2

Material 1 to material 2; relative index of refraction nn----21- =  + j ;  is angle of incidence. The Fresnel coefficients express the directional-hemispherical spectral specular reflectivity.

Fs

=

-a---2----+-----b---2----­----2----a---c---o---s--------+-----c--o---s---2----a2 + b2 + 2a cos + cos2 

Fp

=

Fs

-a---2----+-----b---2----­----2----a---s---i-n--------t--a--n--------+------s--i--n---2------t--a---n---2----a2 + b2 + 2a sin  tan  + sin2 tan2 

where a and b are given by:

2a2 = 2b2 =

(2

­

2

­

sin2



2
)

+

422

+

(2

­

2

­

sin2 )

(2

­

2

­

sin2



2
)

+

422

­

(2

­

2

­

sin2  )

Polarized light: reflectance Fr = sFs + pFp with s + p = 1

Unpolarized light:

Fr

=

F----s----+-----F----p 2

Fs and Fp are also written as F and F// in various textbooks1.

(59) Fresnel Reflection - Dielectrics

Material 1 to material 2; relative index of refraction

-n---2n1

=

;

i

is angle of incidence,

r

is angle of refraction

(given by 56). The Fresnel coefficients express the directional-hemispherical spectral specular reflectivity.

Fs

=

 

-cc---oo---ss------rr---//---cc---oo---ss------ii---+­-----11----//-----

2

=

-s--i--n---2---(------i---­--------r--) sin2 (i + r)

Fp

=

 

-cc---oo---ss------ii---//--c-c--oo---ss------r-r---+­-----11----//-----

2

=

-t--a--n---2---(------i---­--------r--)tan2 (i + r)

( Fs and Fp are also written as F and F// in various textbooks)

Unpolarized light: Fr

=

-F---s----+2-----F----p

=

1-2



-s--i--n---2---(------i---­--------r--) sin2 (i + r)



 1 

+

-cc---oo---ss--22---((------ii--+-­-------r-r--))

1. s stands for `senkrecht', German for perpendicular.

Optics

29

If

i

=

0 , and thus

r

=

0:

Fr

=

Fs

=

Fp

=

 

------+­----11--

2

(also sometimes written as

F0 )

(60) Index of Refraction Data Values A website listing all sort of possible data is at http://www.luxpop.com/

Optics

30

VIII. Bidirectional Reflectance Distribution Functions (BRDFs)

A. GENERAL PROPERTIES
(61) BRDF: fr(x, i  r) = -dd---LE---(-(--xx----------------r-i-))- = -L---(---x-----d---L----(--x--i--)--c---o---s----r--i-)-d-----------i
nx

r dL(x  r)

i r

i
dE(x  i)

x
BRDF is dimensionless but is expressed as 1/sr BTDF = Bidirectional Transmittance Function: similar as BRDF but defined for transmittance BSDF = combination of 2 BRDFs and 2 BTDFs (one pair for each side of the surface) (62) BRDF Reciprocity fr(x, i  r) = fr(x, r  i) = fr(x, i  r) (63) BRDF Energy conservation

: fr(x,   ) cos(nx, )d  1
x
(64) Biconical Reflectance

  fr(in  out) cosout cos indindout
(in  out) = ----o--u--t-----i-n----------------------------------------------------------------------------------------------------------
 cos indin
in
in and out can be a single direction, a solid angle, or the hemisphere. Combine the words `directional', `conical' and `hemispherical' to obtain the right adjective for the reflectance. E.g. Biconical reflectance; directionalhemispherical reflectance etc. (definitions from R7, p. 32).
(65) Lambertian Diffuse Reflection
fr(x, i  r) = fr, d = constant
Outgoing radiance due to incoming radiance field:

L(x  ) = fr, d L(x  in) cos indin = fr, dE
in
Bidirectional Reflectance Distribution Functions (BRDFs)

31

Bihemispherical reflectance:

d

=

fr, d

and

d

=

B--E

( B is the hemispherical radiosity and E is the hemispherical irradiance, see VI)
B. BRDF MODELS
General notations for BRDF models:

r Outgoing direction of light. i Incoming direction of light s Perfect specular direction w.r.t. i h Halfway vector between r and i nx Normal vector at surface point x where BRDF is evaluated

Spherical coordinates for each direction are using the same index. E.g. for the outgoing direction (r, r) Cartesian coordinates are also using the same index. E.g. for the outgoing direction (xr, yr, zr) . Normally, these will assumed to be normalized.
In general, negative values for cosine-lobes are ignored and set to zero.
(66) Modified Phong-BRDF1

fr(i  r) = kd + ks cosn (r, s) or also:

fr(i  r) = ----d- + ----s--(---n2----+-----2---)- cosn (r, s) with d = kd and s = -n--2--+-----2- ks

Energy conservation: d + s  1 . d and s are the maximum energy ( i = nx ) reflected through the diffuse part and specular part respectively. In other words:

d = kd cos(nx, )d
x

s = ks cosn + 1(nx, )d (to compute, see 30)
x

The energy reflected through the specular lobe, given a direction i :

s' = ks cosn (r, s) cos (nx, )d
x

s'  s (to compute, see 31)

Proportional sampling: There are various ways to sample according to the modified Phong-BRDF, using a combination of 34, 35, 36 and 38. In a global illumination context, one is often interested in computing an integral of the following type (see 72), using Monte Carlo integration:

I() = L()fr(  ) cos (nx, )d
x
1. The modified Phong-BRDF is very similar to the Phong shading function and was introduced as a BRDF in R26. See also R23.

Bidirectional Reflectance Distribution Functions (BRDFs)

32

Since the modified Phong-BRDF is often used in global illumination algorithms, there are various strategies for sampling proportional to the modified Phong-BRDF.

a. The integral can be split in two parts, compute each part independently using PDFs p1() and p2() .

 I = L()kd cos (nx, )d + L()ks cosn (, s) cos(nx, )d = I1 + I2
x x

 I =  I1 +  I2

 =

--1---N1

N1

L----(--------i-)---k-p--d-1--c-(-o---s---i(--)-n---x--,--------i--)

+

--1---N2

N2

L----(--------i-)---k---s--c---o---s--n---(-p---2---(-i-,-----i--)-s--)---c--o---s---(---n---x--,--------i--)

i=1

i=1

Some interesting choices for p1() :

p 1 (  )

=

2--1----

(see 34):

 I1

=

-2------dN1

N1

L(i) cos (nx, i)

i=1

p 1 (  )

=

-c---o---s--(---n---x--,---------)

(see 35):

 I1

=

----dN1

N1

L(i)

i=1

Some interesting choices for p2() :

Uniform over hemisphere (see 34): p2()

=

-2-1----

;

 I2

=

-2------k----s N2

N2

L(i) cosn (i, s) cos (nx, i)

i=1

Cosine -weighted (see 35): p2()

=

-c---o---s--(---n---x--,---------)

;

 I2

=

----k---s N2

N2

L(i) cosn (i, s)

i=1

Proportional to specular lobe of BRDF (see 38): p2() = ----------c--o---s---n---(-------,--------s--)--------- ;
 cosn (, s)d
x

N2

  I2

=

-k---sN2

  

x

cosn

(,

  s ) d  

i

=

1

L(i)

cos

( nx,

i)

b. Integral is split in two parts, use discrete probabilistic selection of what term to evaluate. Select random event based on discrete PDF (q1, q2, q3) with q1 + q2 + q3 = 1 . Then generate i using either p1() or p2() . if event 1: eval(i) = -L---(--------i-)-q--k-1--d-p--c-1--o-(-s---(---ni--)-x--,--------i--) if event 2: eval(i) = L----(--------i-)---k---s--c---o---s--n-q--(-2---p---2-i-,-(-------si--))---c--o---s---(---n---x--,--------i--) if event 3: eval(i) = 0 (If L() contains recursive evaluations, this can be used to stop recursion).

Bidirectional Reflectance Distribution Functions (BRDFs)

33

N
Total estimator:  I = -N1--  eval(i)
i=1
Interesting choices for p1() , p2() : see above.
Interesting choices for (q1, q2, q3) :

An obvious choice is to pick q1 = d , q2 = s' , q3 = 1 ­ d ­ s' (proportional to energy reflected in different modes). However, this requires the evaluation of s' for every value of  . Another choice is to use the following values: q1 = d , q2 = s , q3 = 1 ­ d ­ s . There will be some more samples drawn in the specular lobe relative to the reflected energy in the lobe, but this can be countered by NOT resampling any directions that are located in the part of the lobe below the surface. These samples then give a contribution = 0 .

Total PDF is combination of discrete and continuous sampling. Generate samples as above, then the total PDF of all samples generated is: p() = q1p1() + q2p2() (q1 + q2 = 1 )
 I = N-1-- N L----(--------i-)-------------d-----+---------q----s---1-(----p-2n------1---+--(--------2------)-i--)-c---o+---s--qn---2(---p---2-i--(,-------is--)-)-----c---o---s---(--n---x---,--------i--) i=1
Interesting choices: p1() = 2--1---- ; p2() = n---2--+-----1- cosn (, s) (no resampling of directions under surface, so full lobe) q1 = 2-------d----+----2-((------nn------d--++----------21--------))------s ; q2 = -2------d-(-(-----nn+--------++--(-(--------nn---12---------++---))--------12----s----))------s

then the above estimator is written as:  I

=

-2------d----+-----(-(-----nn--------++----------21-------))-------s N

N

L(i) cos(nx, i)

i=1

(directions under the surface in the specular lobe evaluate to 0).

(67) Modified Phong-BRDF - Blinn Variant (see notations page 32)

fr(i  r) = kd + ks cosn h

(68) Cook-Torrance-BRDF

(see notations page 32)

fr(i  r) = F----(-------)  -c---o-D-s---(----i--ch---o)--G-s------r

Bidirectional Reflectance Distribution Functions (BRDFs)

34

 : angle between i and h (equal to angle between r and h ) F() : Fresnel Reflectance (see 58) D(h) : Facet distribution G : Geometric masking term

­ -t-a---n----- 2

D()

=

----------1----------m2 cos4 

e

m

( m is material-parameter)

G

=

m i n  1, 

2----c---o---s-c--o---hs---c---o---s------i,

2----c---o---s-c---o--h-s--c---o---s-------r

  

The Cook-Torrance model is described in more detail in R8.

(69) Ward-BRDF (see notations page 32)

a. Isotropic Gaussian Model:

fr(i  r)

=

----d-

+

s



---------------1---------------cos i cos r



-e---x--p----(---­---4t--a--n---2----2---h----/------2---)

 is standard deviation (RMS) of the surface slope. Energy conservation: d + s  1 Normalization 1 / 42 is accurate as long  is not much greater than 0.2 (surface is then mostly diffuse).
Proportional sampling of specular part (is already normalized as a pdf):

h = atan ( ­log(r1))  = 2r2

b. Anisotropic Elliptical Gaussian Model:

fr(i  r)

=

----d-

+

s



---------------1---------------cos i cosr



-e---x--p----(---­---t--a--n---2-------h---(--c---o---s4--2-------h--x--/-----y--x2----+-----s--i--n---2-------h----/------y2---)---)

x and y are are the standard deviation of the surface slope in the x and y direction at the tangent plane. Energy conservation: d + s  1 and x2 « 1 and 2y « 1

Proportional sampling of specular part (is already normalized as a pdf):



h

=

atan  

-c---o---s--2--------/-­---l--o2x---g-+--(---r-s-1-i--n)---2--------/------2y-



=

atan

 

-----yx

tan

(

2



r2

)

See R46 for a more complete description of the Ward BRDF.

Bidirectional Reflectance Distribution Functions (BRDFs)

35

(70) Lafortune-BRDF

fr(i  r) = (Cx, kxixr + Cy, kyiyr + Cz, kzizr)nk
k
which can also be written as:

fr(i  r) = Ck(i)(a  r)nk
k
where:

a

=

-----(---C----x--,--k---x---i-,---C----y--,---k--y---i-,----C----z--,--k--z---i--)----C2x, kxi2 + C2y, ky2i + Cz2, kzi2

n----k
Ck(i) = (C2x, kx2i + C2y, ky2i + C2z, kz2i ) 2

Therefore, the BRDF is a combination of cosine-lobes, each centered around a different axis a

Proportional sampling:

1. Integrate different cosine-lobes over spherical digons using (31b) 2. Select cosine-lobe proportional to the above computed values. 3. Generate direction according to this cosine-lobe (38)

See R25 for a complete description.
C. BRDF MEASUREMENTS

(71) Cornell Measurements

The Program of Computer Graphics, Cornell University, has a number of measurements online:

http://www.graphics.cornell.edu/online/measurements/

Bidirectional Reflectance Distribution Functions (BRDFs)

36

IX. Rendering Equation and Global Illumination Formulations

A. RADIANCE TRANSPORT FORMULATIONS
All formulations in this section take radiance as the main transport quantity. For the sake of clarity, the wavelength dependency of radiance values is implicitly assumed in all equations.
(72) Rendering Equation (Radiance), integration over incoming hemisphere

L(x  ) = Le(x  ) + L(x  )fr(x,   ) cos(nx, )d
x

Direct illumination only: L(x  ) = Le(r(x, )  ­)fr(x,   ) cos (nx, )d
x
(73) Rendering Equation (Radiance), integration over all surfaces in the scene

L(x  ) = Le(x  ) + L(z  zx)fr(x,   zx)G(x, z)V(x, z)dAz
A
G(x, z) = -c---o---s--(---n---x--,-----x---)-­--c---oz--s---2(---n---z--,---­--------)

(many authors include V(x, z) in the definition of G(x, z) , but in this document they are kept separate for clarity).
Direct illumination only: see 74.

(74) Direct Illumination Equation (Radiance), integration over all light sources (computing direct illumination using various sampling techniques for shadow rays: page 50)

Li : all light sources (i = 1...NL) in the scene. ALi : area of light source Li . x(Li): solid angle subtended by light source Li w.r.t. x . xvis(Li): visible solid angle subtended by light source Li w.r.t. x . y : intersection of ray (x, ) and light source Li NL : number of light sources in the scene
(74a) Integration over the area of all light sources:

r(x, )

x(Li) 



x

Li y

NL

 L(x  ) = Le(x  ) +

Le(y  yx)fr(x,   xy)G(x, y)V(x, y)dAy

i = 1 ALi

Rendering Equation and Global Illumination Formulations

37

(74b) Integration over solid angles subtended by light sources:

NL

 L(x  ) = Le(x  ) +

Le(y  ­)fr(x,   ) cos(nx, )V(x, y)d

i = 1 x(Li)

(74c) Integration over visible solid angles subtended by light sources:

(in this case y  r(x, ) )

NL

 L(x  ) = Le(x  ) +

Le(y  ­)fr(x,   ) cos (nx, )d

i = 1 xvis(Li )

(75) Continuous Radiosity Equation: diffuse reflection, diffuse light sources, integration over surfaces

If all surfaces are diffuse reflectors and light sources are diffuse emitters, radiance values are independent of direction and can be expressed by the hemispherical radiometric quantities:

B(x) = L(x) Be(x) = Le(x) (x) = fr(x)

B(x) = Be(x) + (x) -B---(---z---)--G-----(--x---,---z---)--V----(--x---,---z---)dAz A
(76) Participating medium
See also descriptions in (R7, p. 325) and (R33, p. 174). There are 4 phenomena that affect the radiance along a path in a medium:
absorption: the medium absorbs light emission: the medium emits light in-scattering: light scatters into the direction of travel out-scattering: light scatters away from the direction of travel
Change in radiance along a path:
-d---L-d---(s--s---) = ­tL(s) + aLe(s) + s Li()f()d

emission in-scattering
absorption + out-scattering
with:

absorption emission

in-scattering out-scattering

a(s) : absorption coefficient (dimension: 1/meter), fraction by which radiance is reduced per unit length due to absorption in the medium. s(s) : scattering coefficient (dimension: 1/meter), fraction by which radiance is reduced per unit length due to out-scattering. t(s) = a(s) + s(s) : extinction coefficient.

Rendering Equation and Global Illumination Formulations

38

f() : phase function, describing fraction of radiance arriving from direction  that is in-scattered along the path. If the medium is isotropic: fisotropic = 4--1----

Solving the above differential equation:

s
L(s) = L(0)(0, s) + (s', s)J(s')t(s')ds'
0
with:

 s2 

(s1, s2) =

exp

 

­

t(s)ds : transmittance function. If the medium is isotropic, t(s) is constant and thus

 s1 

(s1, s2) = e­t s1 ­ s2

J(s) : source function, describing in-scattering and emission.

J(s) = (1 ­ R(s))Le(s) + R(s) Li()f()d

R(s) = ----st--((--s-s--)-) = ----a---(--s---)--s-+-(---s--)---s--(---s--)- : scattering albedo of the medium

(77) Participating medium, no scattering

Equations in 76 apply, with s(s) = 0 and a(s) = t(s)

s
L(s) = L(0)(0, s) + Le(s')(s', s)t(s')ds'
0

and if t(s) and Le(s) constant: L(s) = L(0)e­ts + Le(1 ­ e­ts) (can be used as a simple fog-model)
B. DUAL TRANSPORT FORMULATION
Light transport can also be formulated by using the adjoint equations. The adjoint transport quantity is called importance or potential function by various authors, and an often used notation is W . An intuitive way of thinking about the potential function is to consider it an incident function in combination with radiance as an exitant function.
(78) Relationship between Flux, Radiance, Potential
See R12 for a more complete description.

Consider a set S of surface points and associated directions S = As × x  A ×  . The exitant flux for S can be written as:

Rendering Equation and Global Illumination Formulations

39

(S) =   L(x  )We(x  ) cos (, nx)ddAx
A
with We(x  ) the initial potential, defined as:

We(x  )

=

1

 

0

if if

(x, )  S (x, )  S

The above integral can also be formally defined as an inner product: (S) =  L, We .

Using the dual formulation, (S) can also be written as an integral over all light sources, or formally:

 (S) = Le(x  )W(x  ) cos(, nx)ddAx =  Le, W
A
with

W(x  ) = We(x  ) +

W(r(x, )  )fr(r(x, ),   ) cos(nr(x, ), )d

r(x, )

W(x  ) is dimensionless and has the same transport properties as radiance (invariant along straight lines).

Rendering Equation and Global Illumination Formulations

40

X. Form Factors

Form Factor: the fraction of uniform diffuse radiant energy leaving one surface that is incident upon a second surface.

Form Factor Algebra: mathematical relations between form factors

Notation: The `sender' surface is written as the first index, the `receiver' surface as the second. An arrow indicates the `energy flow'. This notation is consistent with other notations in literature, where the arrow usually is not used.

Form Factors are usually treated very extensively in books dealing with thermal radiation heat transfer (R32).

A good on-line resource for analytical avaluations of form factors: "A Catalog of Radiation Heat Transfer Configuration Factors" by John R. Howell: http://www.me.utexas.edu/~howell/

Global illumination context: computing form factors is one of the main elements of radiosity algorithms. Radiosity algorithms based on some variant of particle tracing often implicitly compute form factors without storing them. Direct illumination computations in ray tracing using shadow-rays also often implicitly computes a point-to-area form factor.
A. GENERAL EXPRESSIONS AND PROPERTIES

(79) Differential element to differential element Form Factor

dFdAx  dAy

=

-c---o---s------x---c--o---s-------y



r

2 xy

d

Ay

=

-G----(---x--,---y---)- d Ay

With visibility term:

nx x

ny y
rxy

dAy y

dFdAx  dAy

=

-c---o---s------x---c--o---s-------y



r

2 xy

V

(

x,

y)dAy

=

G-----(---x--,---y---)---V----(--x---,---y---) d A y

dAx x

(80) Differential element to element Form Factor

 FdAx  j

=

Aj

-c---o---s------x---c--o---s-------y  r x2y

V

(

x,

y

)dAy

=

G-----(---x--,---y---)---V----(--x---,---y---) d A y
Aj

(81) Differential element to polygon Form Factor; full visibility

E
FdAx  j = 2--1---- nx  i ( E = number of edges or vertices of the polygon)
i=1

where i = Vi  Vi + 1 and magnitude of i = i .

nx

Vi i Vi + 1

See also R3.

dAx

Form Factors

41

(82) Element to element Form Factor

   Fi  j

=

--1-Ai

Ai

Aj

-c---o--s-------x---c--o---s-------y  r 2x y

V

(

x,

y

)

d

A

y

d

A

x

=

--1-Ai

Ai

Aj

-G----(---x--,---y---)-

V ( x,

y)dAydAx

x(j) is subtended solid angle covering surface j as seen from x (see 26 and 27; also 9):

 Fi  j

=

--1-Ai

Ai

x

(j)

-c---o---s------x

M(

x,

j

)

dd

Ax

 Fi  j

=

--1-Ai

Ai

xv

i

s

(

j

)

-c---o---s------x

d





d

Ax

(83) Element to element Form Factor; full visibility; Stoke's Theorem

° °Fi  j = 2-----1--A----iCi Cj ( ln rdxidxj + ln rdyidyj + ln rdzidzj)
An analytic solution for this integral, given any two polygons, was derived by Schröder and Hanrahan (R29). (84) Form Factor Algebra

a. AiFi  j = AjFj  i

b. In a closed environment: Fi  j = 1
j
(85) Nusselt's Analog (projection on a disk)

FdAx  j

=

-A---p---r--o---j r2

nx

Aj

r

dAx x

Aproj

Form Factors

42

(86) Projection on a sphere

FdAx  j

=

-A---p---r--o---j 4r2

See also R39.

nx
Aj
r

dAx x

Aproj

B. COMPUTING FORM FACTORS USING MONTE CARLO INTEGRATION1
(87) Uniform area sampling on both surfaces MC integration applied to (82 - 1st equation):

p(x, y) = -A---i--1----A----j

N

 Fi  j = -N1--

-A---j--G-----(--x---k--,---y---k---)--V----(--x---k--,---y---k---)

k=1

 2[  Fi  j ]

=

N-1--

  

-A---j Ai

Ai

Aj

G-----2---(--x---,---y---)--V----2---(--x---,---y---)2

d

Ay

d

Ax

­

Fi2

 j

(88) Uniform area sampling + uniform solid angle sampling

MC integration applied to (82 - 2nd equation)

p(x, ) = -A---i-------1----x--(---j--)

 Fi  j

=

-1-N

N

-c---o---s------x--k-------x--k--(--j--)--M------(--x---k----k-,---j--)-

k=1

 2[  Fi  j ]

=

N-1--

  

Ai

x(j)

-c--o---s---2------x-------x---(--j---)--M-----2---(--x-------,---j--) Ai2

d

dA

x

­

Fi2

  j 

By using visibility culling or rejection sampling, sampling and integration can be limited to vxis(j) .

1. Extensive coverage of computing form factors using MC integration can be found in the Ph.D. thesis of Ph. Bekaert (R5). This section is partly based on that text.

Form Factors

43

(89) Uniform area sampling + cosine-weighted solid angle sampling

MC integration applied to (82 - 2nd equation)

p(x, )

=

--1-Ai



------------c---o---s------x-----------cos x d 

x(j)

N M(xk k, j)

cos xd

 Fi  j

=

-1-N

----------------------------x-(--j--)---------------------------

k=1

  2[  Fi  j ]

=



-1-N

  

 

Ai

x(j)

cos xM2(x, j) cos xd -------------------------------------------x--(--j--)--------------------------
Ai2

ddAx

­

Fi2

   j  

By using visibility culling or rejection sampling, sampling and integration can be limited to xvis(j) .

(90) Uniform area sampling + cosine-weighted hemisphere sampling

Directions are sampled over the entire hemisphere x and do not need to point to surface element j . Just count the number of rays arriving at j to get an estimate for Fi  j .

p(x, )

=

--1-Ai



-c---o--s-------x

N

 Fi  j

=

-1-N

M(


xk

k,

j

)

k=1

2[  Fi  j ]

=

-1-N

Fi



j

(

1

­

Fi



j

)

This sampling procedure can be used to compute all Fi  j simultaneously for a given i using the same set of rays (xk, k) :
for all patches j: Fij = 0; for k = 1,...,N do
generate a uniformly distributed random point x on patch i generate a cosine distributed direction  j = patch hit by the ray (x, ) Fij += 1/N
(91) Global Lines
Global lines methods compute all form factors in the scene without explicitly sampling points on the surface patches1. Various techniques can be used to compute the global lines:
a. Construct a bounding sphere for the scene. Generate each global line by connecting 2 uniform random points on the surface of the sphere.
1. An overview of global lines in the context of radiosity can be found in the Ph.D. Thesis of Mateu Sbert (R28):

Form Factors

44

b. Generate a random direction  on the unit sphere. Project the scene on a plane perpendicular to  . Generate a uniformly distributed random surface point x in the projection. (x, ) is a global line.
All global lines are intersected with all surfaces in the scene, resulting in several spans on each line. The probability that a line intersects a surface is proportional to the area of that surface.
Fi  j is estimated by Nij / Ni , with Nij the number of spans connecting surface patches i and j , and Ni the number of spans starting from surface patch i .

Form Factors

45

XI. Radiosity System & Algorithms

The term `Radiosity' is used in various ways in photorealistic image synthesis: as the radiometric quantity describing incident energy integrated over the hemisphere; but also to indicate a specific class of algorithms that compute an energy distribution in the scene. Although there is no formal definition of what a `radiosity algorithm' actually is, it is usually assumed that one means a finite-element solution, computing diffuse light interaction only.
Most radiosity literature uses Galerkin Radiosity, a projection method to transform the continuous radiosity equations (75) into a set of linear equations. Unless otherwise indicated, Galerkin radiosity is used in this section.
Notations:
Bi : constant radiosity of patch i (see 49, 51) - expressed in Watt/m2 Bei : self-emitted constant radiosity of patch i - expressed in Watt/m2 i : diffuse bihemispherical reflectance of patch i (see 65) - dimensionless Fi  j : form factor between patch i and j (see 82) - dimensionless Pi : power of patch i - expressed in Watt Pi = AiBi Ai : surface area of patch i - expressed in m2
(92) System of radiosity equations, constant basis functions

patches i:

Bi = Bei + i Fi  jBj
j

1 ­ 1F1  1 ­1F1  2 ... ­1F1  n B1

Be1

­2F2  1 1 ­ 2F2  2 ... ­2F2  n B2 = Be2

...

.........

......

­nFn  1 ­nFn  2 ... 1 ­ nFn  n Bn

Ben

(93) System of power equations, constant basis functions

patches i:

Pi = Pei + i Fj  iPj
j

1 ­ 1F1  1 ­1F2  1 ... ­1Fn  1 P1

Pe1

­2F1  2 1 ­ 2F2  2 ... ­2Fn  2 P2 = Pe2

...

.........

......

­nF1  n ­nF2  n ... 1 ­ nFn  n Pn

Pen

(94) Discretizing the continuous radiosity equation1

Continuous radiosity equation (see 75): B(x) = Be(x) + (x) -B---(---z---)--G-----(--x---,---z---)--V----(--x---,---z---)dAz A
1. Based on chapter 3 of R7.

Radiosity System & Algorithms

46

N
Approximation of B(x) : B(x)  B^ (x) = BiNi(x)
i=1

Residual (substitute B^ (x) in continuous equation): r(x) = B^ (x) ­ Be(x) ­ (x) B-^----(--z---)--G-----(--x---,---z---)--V----(--x---,---z---)dAz A

N

General approach: pick N weighting functions Wi(x) . The norm of residual: r(x) =

 r(x), Wi(x) .

i=1

Each of the terms  r(x), Wi(x) = r(x)Wi(x)dAx can now be set to be zero, resulting in a linear equation for
A
each Wi(x) .

(94a) Point Collocation

Wi(x) = (x ­ xi) (residual is zero for selected number of points xi )

N

 then: i:

KijBj ­ Be(xi) = 0 with Kij = Nj(xi) ­ ----(---x--i--)- Nj(z)G(xi, z)V(xi, z)dAz

j=1

A

(94b) Galerkin

Wi(x) = Ni(x)

N

 then: i:

KijBj ­ Be(x)Ni(x)dAx = 0

j=1

A

  with Kij = Ni(x)Nj(x)dAx ­ (x)Ni(x)Nj(z)G-----(---x--,---z---)--V----(---x--,----z--)-dAzdAx A AA

Choosing

Ni(x)

=

1

 

0

if x belongs to surface element i otherwise

results in the classic radiosity formulation (92 or 93).

(95) Basic Relaxation Algorithm1
Most radiosity algorithms are relaxation methods, that solve the radiosity system through a series of iterations. This item describes the basic principle of all relaxation algorithms.

a11 ... a1n x1

e1

Linear system to solve: Ax = e or ... ... ... ... = ...

an1 ... ann xn

en

Subsequent iterations: x(0), x(1), x(2), ...

1. A very good overview of different relaxation techniques for solving the radiosity system can be found in the Ph.D. thesis of Philippe Bekaert (R5).

Radiosity System & Algorithms

47

Correction vectors x(k) : x(k + 1) = x(k) + x(k) Residu vectors r(k) (measure for error): r(k) = e ­ Ax(k) , and therefore r(k + 1) = r(k) ­ Ax(k)
Basic relaxation algorithm:
Choose initial x(0); r(0) = b - A.x(0); for k = 0, 1, ... until convergence do
compute x(k) (based on x(k), r(k), other information) x(k+1) = x(k) + x(k); r(k+1) = r(k) - A.x(k);
(96) Gauss-Seidel iteration



Each

component

of

the

solution

is

updated

in

turn:

xs



 

es

­

j



a s j x j
s

/

ass

Correction vector: xi  isrs / ass (all components 0 except s ).

Residu vector: ri  ri ­ aisrs / ass (component s equals 0).

Applied to (93) ( ass = 1 if Fs  s = 1 ):

Ps  Pes + s Fj  sPj
js
Algorithm:
for all patches j: Pj = Pej; cycle through patches until convergence (selected patch = s)
Ps = Pes; for all patches j
Ps += s.Fjs.Pj;
Incremental Gauss-Seidel: compute residu vector explicitly and increment solution vector instead of replacing previous solution.

Radiosity System & Algorithms

48

XII. Radiosity Extensions

(97) Clustering - Equivalent extinction coefficient
When clustering objects, an equivalent isotropic extinction coefficient can be computed for the cluster (R35), in an analogy with a participating medium (76).

t

=

--A---4V

where A is the total surface area of objects in the cluster and V is the volume of the cluster.

Directional extinction (R34):

t()

=

-A-------(-------)V

where A() is the total projected area in direction  .

(98) Final Gathering
A final gathering step is used to make a high-quality rendering of a radiosity solution, using a per-pixel radiance computation. It usually involves computing a radiance value for the visible surface point through each pixel, using the radiosity values stored on the surface patches.

Suppose L is the pre-computed (diffuse) radiosity solution, then the radiance for surface point x in direction  can be approximated as (see section IX for basic rendering equation):

L(x  ) = Le(x  ) + L(x  )fr(x,   ) cos(nx, )d (hemisphere integration)
x
or:
L(x  ) = Le(x  ) + L(z  zx)fr(x,   zx)G(x, z)V(x, z)dAz (surface integration)
A
The integral in either of the two above formulations can be approximated by an appropriate sampling technique, thereby `gathering' radiance from the other surfaces. Many different variants are possible, depending on how much information was stored with the radiosity solution.
Variants: Uniform hemisphere sampling; cosine-weighted hemisphere sampling; uniform area sampling; area sampling proportional to solid angle; area sampling proportional to cosine weighted angle; area sampling pro-
portional to L ; area sampling sampling proportional to stored (linked) form factors. See (R41, R4) for an overview.

Radiosity Extensions

49

XIII. Pixel-driven Path Tracing Algorithms

Many rendering algorithms use (random) paths in object space to compute illumination values. If these paths are directly used to compute the illumination of the pixels, one has a specific class of algorithms, of which classic ray tracing is the best-known. Other algorithms include stochastic ray tracing; light tracing (also called backward ray tracing or particle tracing); and bidirectional ray tracing.

See also: Ray-object intersections: chapter on Geometry (chapter III)
A. DIRECT ILLUMINATION USING SHADOW-RAYS

Most algorithms that compute direct illumination using shadow rays apply a specific numerical integration scheme directly derived from the equations described in 74.

When there are multiple light sources in the scene, the complete sampling procedure can usually be divided in two parts: a discrete selection of one of the light sources, followed by the generation of a shadow-ray for the selected light source. Various choices for each of these sampling procedures produce different estimators. The obvious alternative is to split the direct illumination integral in seperate integrals, one for each light source, and compute the illumination due to each light source seperately.

A good general overview for direct lighting calculations using Monte Carlo techniques can be found in R30.

(99) Single light source, uniform sampling of light source area

Apply Monte Carlo integration to integral 74a:

p(y) = 1 / AL

N

 L(x  )

=

A----LN

Le(yk  ykx)fr(x, xyk  )G(x, yk)V(x, yk)

k=1

Graphical representation:

1. generate point on light source, evaluate Le yk
2. evaluate V, G

 x

? 3. evaluate fr

(100) Single light source, uniform sampling of solid angle subtended by light source

Apply Monte Carlo integration to integral 74b:

p() = 1 / x(L)

N

 L(x  )

=

-----x---(--L----) N

Le(yk  ­k)fr(x, k  ) cos (nx, k)V(x, yk)

k=1

with yk = intersection of ray (x, k) and light source L

Pixel-driven Path Tracing Algorithms

50

Graphical representation

2. evaluate V

3. evaluate Le yk

1. generate direction in solid angle 
x

? k 3. evaluate cosine, fr

Solid angle sampling of the light source usually yields lower variance as opposed to area sampling (99), due to the abscence of a cosine and inverse distance factor in the estimator.

(101) Multiple light sources, uniform random source selection, uniform sampling of light source area

Apply 2 sampling steps for Monte Carlo evaluation of integral 74a: 1. Select a light source i using a discrete pdf pL(i) = 1 / NL 2. Select a surface point y on light source i using a uniform pdf p(y) = 1 / ALi

N

 L(x  )

=

-N----LN

ALkLe(yk  ykx)fr(x, xyk  )G(x, yk)V(x, yk)

k=1

Graphical representation:

1. pick random light source

yk

3. evaluate visibility, G  x

? 2. generate point on light source, evaluate Le
4. evaluate fr

(102) Multiple light sources, uniform random source selection, uniform sampling of light source solid angle
Apply 2 sampling steps Monte Carlo evaluation of integral 74b: 1. Select a light source i using a discrete pdf pL(i) = 1 / NL 2. Select a random direction  within solid angle subtended by light source i using pdf p() = 1 / x(L)

N

 L(x  )

=

-N----LN

x(Li)Le(yk  ­k)fr(x, k  ) cos(nx, k)V(x, yk)

k=1

with yk = intersection of ray (x, k) and light source Li
Pixel-driven Path Tracing Algorithms

51

Graphical representation

1. pick random light source

4. evaluate Le

3. evaluate visibility

yk

2. generate direction in solid angle 
x

? k 5. evaluate cosine, fr

Solid angle sampling of the light source usually yields lower variance as opposed to area sampling (101), due to the absence of a cosine and inverse distance factor in the estimator.

(103) Multiple light sources, non-uniform random source selection, non-uniform sampling of light source area

Apply 2 sampling steps during the Monte Carlo evaluation of 74a: 1. Select a light source i using a discrete pdf pL(i) 2. Select a surface point y on light source i using a pdf p(y)

N

 L(x  ) = -N1--

L----e---(--y---k-----------y---k--x---)---f--r--(--x--p-,---Lx---(y--i-k-)--p----(--y---k---)-)--G-----(---x--,---y---k---)--V----(--x---,---y---k---)

k=1

Some interesting choices:

pL(i) can be chosen proportional to the power emitted by each light source (bright light sources get sampled more often). E.g. for diffuse light sources: i = LeiAi and thus pL(i) = i / tot where tot is the total emitted power of all light sources.

N

In this case:  L(x  ) = -----t-N-o---t

-f-r---(--x---,---x---y---k-----------A---i--)p--G-(---y-(--kx--)-,---y---k--)---V----(--x---,---y---k--)-

k=1

N

and if p(y) = 1 / Ai :  L(x  ) = -----t-N-o---t

fr(x, xyk  )G(x, yk)V(x, yk)

k=1

(104) Various strategies for computing direct illumination due to multiple light sources

Various schemes for speeding up the computation of direct illumination due to multiple light sources have been proposed by several authors. These usually involve a smart choice for the pdf pL(i) in 103, taking into account light source brightness, visibility, etc.

G. Ward (R45) proposes to rank all light sources according to their potential illumination contribution to the point to be shaded (that is, without taking into account visibility). Then, the illumination of the light source ranked first is computed first (e.g. using 99), followed by the light source ranked second, and so on; until the potential contribution of the remaining light sources falls below a certain threshold. The illumination due to the remaining light sources is then computed using e.g. 101 or 103. Alternatively, one can estimate the contribution of the remaining light sources by multiplying their potential contribution by the average hit ratio of shadow rays

Pixel-driven Path Tracing Algorithms

52

send to these light sources so far (e.g. when computing previous points). The accuracy goal can be relaxed by a user-specified parameter.

In (R30), an approach is presented where the scene is divided in octree cells. Each cell maintains a list of `important' light sources for the points in that cell, based on intensity of the light source, distance, and reflectivity. When selecting a light source, the important light sources are sampled proportional to their potential contribution (not taking into account visibility), and all remaining light sources are selected with equal probability. The number of samples used for the important and unimportant light sources can vary. In (R48), an extension using the visibility function to classify light sources is presented.

The same authors also describe the following technique: instead of using two different sampling steps (pick the light source first, then sample within the light source), a single procedure can be used that only uses 2 random

numbers. Suppose we want to pick light source i with probability i . Generate 1 uniform over [0, 1] .

Choose light source i if:

i­1 i

 j < 1 <  j

j=1

j=1

To sample the light source, use the pair

(1', 2)

with

1'

=

 

1

­

i j

­ =

1 1

j

/

i

.

Graphically, this means all light sources are mapped into the [0, 1] × [0, 1] domain:

light source 1

light source 3

2 light source 2

light source 4

1

1 2 3 4

0 1 01
1' 01

Advantage: one less random variable, so stratified sampling becomes more effective; less variance.
(105) Multiple light sources, uniform sampling of hemisphere
The main difference with the previous methods is that shadow rays are not targeted towards light sources, but are generated over the entire hemisphere. Apply Monte Carlo evaluation to direct illumination equation of 72.

p() = 1 / 2 (uniform sampling of hemisphere, see 34)

N

 L(x  ) = 2--N----

Le(r(x, k)  ­k)fr(x, k  ) cos(nx, k)

k=1

Pixel-driven Path Tracing Algorithms

53

(106) Multiple light sources, non-uniform sampling of hemisphere
The main difference with the previous methods is that shadow rays are not targeted towards light sources, but are generated over the entire hemisphere. Apply Monte Carlo evaluation to direct illumination equation of 72.

Choose a pdf for generating random directions: p()

N

 L(x  )

=

-1-N

-L---e---(--r---(--x---,--------k--)-----------­--------k---)--pf--r-(-(---x---,-k--)-----k----------------)---c--o---s---(---n---x--,--------k---)

k=1

Graphical representation:

r(x, k)

2. find nearest intersection point; if on light source, evaluate Le

1. pick random direction k

x

3. evaluate fr.cos

Some interesting choices: uniform sampling, cosine-sampling, brdf sampling, brdf.cosine sampling.

(106a) Multiple light sources, uniform sampling of hemisphere: see 105

(106b) Multiple light sources, cosine-sampling of hemisphere

p() = cos(nx, ) /  (cosine sampling of hemisphere, see 35)

N

 L(x  ) = N---

Le(r(x, k)  ­k)fr(x, k  )

k=1

(106c) Multiple light sources, BRDF-sampling of hemisphere

p() = ---------f--r--(---x--,----------------------)----------
 fr(x,   )d
x

 fr(x,   )d N

 L(x  ) = ----x---------------------------------------------N

Le(r(x, k)  ­k) cos(nx, k)

k=1

For a general BRDF, the appropriate sampling function might be very difficult to construct. Rejection sampling can be used (see 8), but might yield very high variance, especially when the BRDF has a narrow peak.

Pixel-driven Path Tracing Algorithms

54

(106d) Multiple light sources, BRDF.cosine-sampling of hemisphere
p() = ---------f--r--(---x--,----------------------)---c---o---s---(--n---x---,--------)---------
 fr(x,   ) cos (nx, )d
x

 fr(x,   ) cos (nx, )d N

 L(x  ) = ----x------------------------------------------------------------------------N

Le(r(x, k)  ­k)

k=1

For a general BRDF, the appropriate sampling function might be very difficult to construct. Rejection sampling can be used (see 8), but might yield very high variance, especially when the BRDF has a narrow peak.

B. RAY TRACING

The term `ray tracing' has been used for different algorithms over the years. In the context of global illumination, `ray tracing' usually implies `stochastic ray tracing', where one can compute a full solution to the rendering equation. The traditional ray tracing algorithm (R47) is then often referred to as `classic ray tracing' or `Whitted-style ray tracing'.

Stochastic ray tracing computes the radiance value for a given surface point in a given direction. These points are usually points visible through a pixel, and by averaging such radiance values using an appropriate filter, one can compute the illumination value of a pixel in the image.

(107) Stochastic ray tracing - general idea

Rendering equation (72): L(x  ) = Le(x  ) + L(x  )fr(x,   ) cos(nx, )d
x
Monte Carlo integration using pdf p() , and invariance property of radiance ( L(x  i) = L(r(x, i)  ­i) ):

N

 L(x  )

=

Le(x



)

+

-1-N

L----(---r--(---x--,--------i--)-----------­--------i--)--f-p-r--(-(--x---,--i--)----i---------------)---c---o--s---(---n---x--,--------i--)

i=1

L(r(x, i)  ­i) is evaluated recursively using the same procedure. r(x, i)

L(r(x, i)  ­i)

L(x  )

x

Pixel-driven Path Tracing Algorithms

55

(108) Next event estimation (split in direct and indirect term)
Rewrite rendering equation (72,74) as integral over area of all light sources and hemispherical integral of all indirect light (not directly from light sources).
L(x  ) = Le(x  ) + Lr(x  )
Lr(x  ) = L(x  )fr(x,   ) cos (nx, )d
x
 = Le(y  yx)fr(x,   xy)G(x, y)V(x, y)dAy + Li(x  )fr(x,   ) cos(nx, )d
AL x
= Ldirect(x  ) + Lindirect(x  )

and Li(x  ) = Lr(r(x, i)  ­i) .

Ldirect(x  ) is evaluated using any of the techniques for direct illumination (99 - 106). Lindirect(x  ) is evaluated with Monte Carlo integration:

N

 Lindirect(x  )

=

-1-N

L----r--(---r--(---x--,--------i--)-----------­--------i--)--fp--r--(-(--x---,-i--)-----i---------------)---c---o---s---(--n---x--,--------i--)

i=1

Lr(r(x, i)  ­i) is evaluated recursively.

Some interesting choices for p() : uniform sampling, cosine-sampling, brdf sampling, brdf.cosine sampling.

(108a) Uniform sampling of hemisphere

p() = -2-1----

N

 Lindirect(x  )

=

-2----N

Lr(r(x, i)  ­i)fr(x, i  ) cos (nx, i)

i=1

(108b) Cosine-sampling of hemisphere

p() = cos(nx, ) /  (cosine sampling of hemisphere, see 35)

N

 Lindirect(x  )

=

--N

Lr(r(x, i)  ­i)fr(x, i  )

i=1

(108c) BRDF-sampling of hemisphere

p() = ---------f--r--(---x--,----------------------)----------
 fr(x,   )d
x
Pixel-driven Path Tracing Algorithms

56

 fr(x,   )d N

 Lindirect(x  )

=

----x---------------------------------------------N

Lr(r(x, i)  ­i) cos(nx, i)

i=1

For a general BRDF, the appropriate sampling function might be very difficult to construct. Rejection sampling can be used (see 8), but might yield very high variance, especially when the BRDF has a narrow peak.

(108d) Multiple light sources, BRDF.cosine-sampling of hemisphere

p() = ---------f--r--(---x--,----------------------)---c---o---s---(--n---x---,--------)---------
 fr(x,   ) cos (nx, )d
x

 fr(x,   ) cos(nx, )d N

 Lindirect(x  )

=

----x------------------------------------------------------------------------N

Lr(r(x, i)  ­i)

i=1

For a general BRDF, the appropriate sampling function might be very difficult to construct. Rejection sampling can be used (see 8), but might yield very high variance, especially when the BRDF has a narrow peak.

(109) End of recursion - Russian Roulette

Russian Roulette is a technique that can be used to ends recursive evaluation, but still keeps the final result unbiased. For any (recursive) expression A to be evaluated, use the following procedure:

Pick value   [0, 1] , and generate uniform random number r  [0, 1] :

if r  :  A = -A-if r > :  A = 0

Expected value: E[  A ] =   -A-- + (1 ­ )  0 = A

Global illumination context: when recursively tracing rays, Russian Roulette can be used to stop the recursion. Any value for  can be used, but a popular choice is the directional-hemispherical reflectance (64) of the surface point where the reflection is being considered.
Another variant of looking at RR is by rescaling the function to be integrated, such that part of the integration domain yields 0 , and thereby effectively stopping any further evaluations. E.g. computation of the one-dimensional integral

1
I =  f(x)dx =  -1--f-x-- dx
00
Using pdf p(x) :
Pixel-driven Path Tracing Algorithms

57

if xi  :  I = -f--(---x---ip---/(---x--i-)-)if xi > :  I = 0
Graphical representation: f(x)

-f--(--x----/-------)

=

xx

01

0 1

C. LIGHT TRACING

Light tracing is the dual algorithm of ray tracing. Instead of shooting rays from the eye through a pixel, and working towards the light source, light tracing shoots rays from the light sources, and works towards the pixels.

References: R9, R10, R11, R12 Principle:

light source

light particle random walk

contributions to pixels

Variants:
a. If the eye is a surface, one could just let the light particles bounce around the scene till they hit the eye surface. A contribution to the relevant pixel is then recorded. This would be the dual of stochastic ray tracing without shadow rays.
b. All hit points of all light particles can be stored in the scene. When the camera moves, the hit points can be reprojected to new camera view. This requires a re-evaluation of the BRDF at the reprojected hit points. This could be combined with any visibility determination scheme used in reprojection algorithms, or even using the original geometry.
D. BIDIRECTIONAL TRACING
Bidirectional ray tracing constructs paths from the light sources and the eye simultaneously, and employs a meet-inthe-middle strategy for the paths generated. Ray tracing and light tracing can be considered to be special cases of bidirectional tracing.

Pixel-driven Path Tracing Algorithms

58

References: R22, R24, R42 Principle:

light source light path (random walk) possible contributions

eye path (random walk)
If the light paths are of length 0 (only a random point on the light source is generated), bidirectional tracing behaves as stochastic ray tracing. If the eye path is of length 0, bidirectional tracing becomes identical to light tracing.

Pixel-driven Path Tracing Algorithms

59

XIV. Multipass Algorithms
Multipass algorithms denote a class of algorithms that combine several global illumination passes into a single solution. Different passes are selected to compute subsets of all light paths. Clever combinations of different passes have been the subject of many global illumination papers. Often, one or more passes are used to store partial illumination information in the scene, which is then read out by a subsequent pass.
To classify the different types of lightpaths, regular expressions can be used based on Heckbert's notation (R19). See also (R38).
D, Dr, Dt : diffuse reflection, transmission G, Gr, Gt : glossy reflection, transmission S, Sr, St : specular reflection, transmission X : (D S G) E : the eye L : a light source * : zero or more occurences + : one or more occurences | : "or"
A. PHOTON MAPPING
Photon mapping traces light particles or photons through the scenes, and stores all possible hits of the random walks. During a subsequent stochastic ray tracing pass, information from the stored photons is used to compute several lighting illumination components.
References: R20

Multipass Algorithms

60

XV. Test Scenes for Global Illumination

(110) Mother of all test scenes Data for the original Cornell Box can be found at: http://www.graphics.cornell.edu/online/box/
(111) Analytic Solution - General Rendering Equation

If (x, ):

Le(x  ) + dfr(x,   ) cos (nx, ) = 1 and if the environment is closed, then:
x

L(x  )  1 is the solution for L(x  ) = Le(x  ) + dL(x  )fr(x,   ) cos(nx, ) (72).
x

For diffuse surfaces: (x, ):

Le(x  ) + d = 1

In other words, every surface point emits exactly the amount of energy that is absorbed at the point.

(112) Analytic Solution - Radiosity System

if patches i:

Pei + i = 1 and if the environment is closed, then:

 i: Pi = 1 is the solution for the linear system Pi = Pei + i Fj  iPj (93).
j

(113) Testing global illumination algorithms

Brian Smits and Henrik Jensen have proposed a number of simple and elegant scenes to test light transport modes (R36), available at the following URL: http://www.cs.utah.edu/~bes/papers/scenes/.

A number of scenes, designed to test performance and overall image appearance, made available by Greg Ward Larson and Peter Shirley are available from the RADIANCE website: http://radsite.lbl.gov/mgf/.

Andrew Willmott and Paul Heckbert have designed parametrized test scenes for diffuse global illumination (radiosity), so that algorithms' sensitivity to various parameters, such as reflectance or scene complexity, can be tested. They also described a scheme for making comparisons that normalizes for differences in error and time. All information can be found at the following URL: http://www.cs.cmu.edu/~radiosity/.

(114) Testing ray tracing performance

The classic Standard Procedural Database (R17), designed by Eric Haines to test the performance of classic ray tracers, is available from: http://www.acm.org/tog/resources/SPD/overview.html.

(115) Testing animated ray tracing

Jonas Lext, Ulf Assarsson, and Tomas Möller have designed a number of scenes to test animated ray tracing. http://www.ce.chalmers.se/BART/.

Test Scenes for Global Illumination

61

XVI. Color & Display1

(116) Spectrum C() to CIE XYZ

Color matching functions x(), y(), z() 2
1.8
z()
1.6
1.4 1.2
y() x()
1 0.8
0.6 0.4 0.2
0
380 430 480 530 580 630 680 730 780

780 n m
X =  C()x()d
380 n m

780 n m
Y =  C()y()d
380 n m

780 n m
Z =  C()z()d
380 n m

x = -X-----+----X-Y----+-----Z--

y = X------+----Y-Y----+-----Z--

z = -X-----+----Z-Y----+-----Z--

(117) xyY to XYZ

X = Y-yx-

Y=Y

Z = Y-(--1----­-----yx----­-----y---)

(118) CIE XYZ to Spectrum C()

Choose 3 linearly independent functions F1() , F2() and F3() . C() can be writtten as aF1() + bF2() + cF3() with a , b , c determined by:

X F1()x()d  F2()x()d  F3()x()d a Y = F1()y()d  F2()y()d  F3()y()d b
Zc
 F1()z()d  F2()z()d F3()z()d
See also R15.
1. A good source for color data: http://cvision.ucsd.edu/basicindex.htm 2. Tabular data for the color matching curves can be found in R16, p. 1170.
Color & Display

62

E.g. 1: Dirac-impulse functions at wavelengths u , v and w .
X x(u) x(v) x(w) a Y = y(u) y(v) y(w) b Z z(u) z(v) z(w) c

E.g. 2: First three Fourier basis functions defined on interval [min, max] = [380, 780]

F1() = 1.0

F2()

=

-12

 1

+

sin 2-----4­---0--3-0--8---0-

F3()

=

2-1-1 +

cos

 

2  -----4­---0--3-0--8---0-  

(119) CIE XYZ to/from NTSC standard RGB based on standard CIE phospors and D6500 white point. Scaling is such that RGB=[1,1,1] produces the chromaticity values of the white point with Y=1.0 (R16, p.104).

xy

r

0.670

0.330

g

0.210

0.710

b

0.140

0.080

w

0.313

0.329

X 0.5893 0.1789 0.1831 R Y = 0.2904 0.6051 0.1045 G Z 0.0000 0.0684 1.0202 B
R 1.967 ­0.548 ­0.297 X G = ­0.955 1.938 ­0.027 Y B 0.064 ­0.130 0.982 Z

(120) CIE XYZ to/from L*u*v* color space

Defined w.r.t. white point (Xn, Yn, Zn) , usually scaled such that Yn = 100 .

L*

=

Y 

/

Yn



0.008856

Y / Yn  0.008856

u* = 13L*(u' ­ u'n)

v* = 13L*(v' ­ v'n)

116(Y / Yn)1 / 3 ­ 16 903.3(Y / Yn)

u' = -X-----+-----1--4-5---XY-----+-----3---Z-v' = --------------9---Y---------------
X + 15Y + 3Z

where u'n = X----n----+-----1---45---XY----nn----+-----3---Z----n-

v'n

=

----------------9----Y---n----------------Xn + 15Yn + 3Zn

Color & Display

63

X

=

­

-A-R

+ 3Z

Q

=

----u---*---13L*

+

u'n

Y Z

= =

Yn

 

-L---*-1---+1---6--1---6-

3

-(--Q------­----4----)--A-----­-----1---5---Q-----R----Y-12R

where

R A

= =

----v---*---13L*

+

v'n

3Y(5R ­ 3)

(121) CIE XYZ to/from L*a*b* color space

Defined w.r.t. white point (Xn, Yn, Zn) , usually scaled such that Yn = 100 .

L*

=

Y 

/

Yn



0.008856

116(Y / Yn)1 / 3 ­ 16

Y / Yn  0.008856

903.3(Y / Yn)

a* = 500L*(f(X / Xn) ­ f(Y / Yn))

where f(r) = r  0.008856 r  0.008856

b* = 200L*(f(Y / Yn) ­ f(Z / Zn))

X

=

 Xn

 

Y--Y--n-

1

/

3

+

5----0-a-0---*-L---*-

3

Y

=

Yn

 

-L---*-1---+1---6--1---6-

3

Z

=

Zn

  

 

Y--Y--n-

1

/

3

+

-2--0--b--0--*-L---*-

3

r1 / 3 7.787r + 16 / 116

Color & Display

64

Index

B
barycentric coordinates.......................................................... 12 bidirectional tracing............................................................... 58 BRDF..................................................................................... 31
biconical reflectance.......................................................... 31 Cook-Torrance................................................................... 34 energy conservation........................................................... 31 Lafortune model ................................................................ 36 lambertian diffuse reflection.............................................. 31 measurements .................................................................... 36 Phong - Blinn model.......................................................... 34 Phong model...................................................................... 32 reciprocity.......................................................................... 31 Ward model ....................................................................... 35
C
CDF see probability distribution function
color and display ................................................................... 62 color conversion
CIE XYZ to spectrum........................................................ 62 CIE XYZ to/from Lab ....................................................... 64 CIE XYZ to/from Luv....................................................... 63 CIE XYZ to/from NTSC ................................................... 63 spectrum to CIE XYZ........................................................ 62 xyY to XYZ....................................................................... 62 coordinate transformations .................................................... 11 Cornell box ............................................................................ 61 cosine lobes integrate over hemisphere.................................................. 17 integrate over spherical digons .......................................... 17
D
diffuse emitter........................................................................ 26 dirac-impulse ........................................................................... 6
hemisphere......................................................................... 18 direct illumination
multiple light sources ........................................................ 51 rendering equation............................................................. 37 shadow rays ....................................................................... 50 single light source.............................................................. 50 disk concentric map .................................................................. 13 polar map ........................................................................... 13 random point...................................................................... 12 dual light transport................................................................. 39

dielectrics........................................................................... 29
G
Gauss-Seidel iteration............................................................ 48 geometric transformations ..................................................... 10
H
Halton sequence..................................................................... 24 Hammersley sequence ........................................................... 24 hemisphere
random direction in spherical triangle ............................... 21 random direction proportional to cosine lobe.................... 20 random direction proportional to cosine-weighted solid angle
19 random direction proportional to off-normal cosine lobe.. 21 random direction proportional to solid angle..................... 19
I
importance function ............................................................... 39 irradiance ............................................................................... 25
K
kronecker d .............................................................................. 6
L
light tracing............................................................................ 58
M
member function.................................................................... 10 monte carlo
combined estimators .......................................................... 23 combined estimators, balance heuristic ............................. 23 estimator ............................................................................ 22 estimator efficiency............................................................ 24 importance sampling.......................................................... 22 integration .......................................................................... 22 stratified sampling ............................................................. 23 multipass algorithms.............................................................. 60
N
next event estimation ............................................................. 56

E
extinction coefficient clustering ........................................................................... 49
F
final gather step ..................................................................... 49 flux......................................................................................... 25 form factor............................................................................. 41 fresnel reflection
conductors ......................................................................... 29

P
participating medium ............................................................. 38 no scattering....................................................................... 39
PDF see probability density function
photometric units ................................................................... 25 photon mapping ..................................................................... 60 potential function ................................................................... 39 probability density function..................................................... 7 probability distribution function .............................................. 7

Index

65

Q
quasi-random sampling sequences ........................................ 24
R
radiance ................................................................................. 26 invariant along straight lines.............................................. 26
radiant energy ........................................................................ 25 radiant intensity ..................................................................... 25 radiometric units.................................................................... 25
convert to photometric units .............................................. 27 radiosity
algorithms.......................................................................... 46 clustering ........................................................................... 49 continuous transport equation ........................................... 38 final gather step ................................................................. 49 radiosity equation discretizing ........................................................................ 46 random point disk .................................................................................... 12 sphere................................................................................. 19 triangle............................................................................... 12 random variable expected value ..................................................................... 7 generate using inverse CDF................................................. 7 generate using rejection sampling ....................................... 8 variance................................................................................ 7 ray casting function ................................................................. 9 ray tracing.............................................................................. 55 next event estimation ......................................................... 56 russian roulette .................................................................. 57 stochastic ........................................................................... 55 ray-object intersection ........................................................... 10 reflection at perfect mirror .................................................... 28 vector computation ............................................................ 28 refraction ............................................................................... 28 refraction data........................................................................ 30 relaxation algorithm .............................................................. 47 rendering equation................................................................. 37 area integration .................................................................. 37 direct illumination ............................................................. 37 hemisphere integration ...................................................... 37 participating medium......................................................... 38 russian roulette ...................................................................... 57

global illumination............................................................. 61 ray tracing performance..................................................... 61 total internal refraction .......................................................... 29 triangle barycentric coordinates...................................................... 12 random point...................................................................... 12 surface area ........................................................................ 11
V
Van der Corput sequence ....................................................... 24 visibility
member function................................................................ 10 ray casting function.............................................................. 9 visibility function................................................................. 9 visibility function..................................................................... 9

S
solid angle.............................................................................. 15 differential ......................................................................... 15 subtended by polygon........................................................ 16 subtended by surface ......................................................... 16 transformation to surface................................................... 16 visible subtended by surface.............................................. 16
spectral luminous efficiency curve ........................................ 27 sphere
random point...................................................................... 19 spherical coordinates ............................................................. 15 stochastic ray tracing ............................................................. 55

T
tangent-sphere function ......................................................... 17 test scenes .............................................................................. 61
analytic solutions............................................................... 61 animated ray tracing .......................................................... 61 Cornell box ........................................................................ 61

Index

66

References
Abbreviations:
SIGGRAPH xx: Proceedings of SIGGRAPH conference held in 19xx EGWR xx: Proceedings of the Eurographics Workshop on Rendering held in 19xx EG xx: Proceedings of the Eurographics conference held in 19xx
[1] Arvo J.; Stratified Sampling of Spherical Triangles; SIGGRAPH 95 [2] Arvo J.; Applications of Irradiance Tensors to the Simulation of Non-Lambertian Phenomena; SIGGRAPH 95 [3] Baum D., Rushmeier H., Winget J.; Improving Radiosity Solutions Through the Use of Analytically Determined Form-Fac-
tors; SIGGRAPH 89 [4] Bekaert Ph., Dutré Ph., Willems Y.; Final Radiosity Gather Step using a Monte Carlo Technique with Optimal Importance
Sampling; Report CW275, January 1996, Dept. of Computer Science, Katholieke Universiteit Leuven. [5] Bekaert Ph.; Hierarchical and Stochastic Algorithms for Radiosity; Ph.D. Thesis, Katholieke Universiteit Leuven, 1999
http://www.cs.kuleuven.ac.be/cwis/research/graphics/CGRG.PUBLICATIONS/PHBPHD/ [6] Carvalho, P., Cavalcanti, P.; Point in Polyhedron Testing Using Spherical Polygons; Graphics Gems V, p. 42-49 [7] Cohen M., Wallace J.; Radiosity and Realistic Image Synthesis; Academic Press [8] Cook R.L., Torrance K.E.; A reflectance model for computer graphics; Computer Graphics, Vol. 15, No. 3, 1981, pp. 307-
316 (SIGGRAPH 81) [9] Dutré Ph., Lafortune E., Willems Y.; Monte Carlo Light Tracing with Direct Computation of Pixel Intensities; Proceedings
of CompuGraphics, pp. 128-137, Alvor, Portugal, December 1993 [10] Dutré Ph., Willems Y.; Importance-driven Light Tracing; EGWR 94 [11] Dutré Ph., Willems Y.; Potential-driven Monte Carlo Particle Tracing for Diffuse Environments with Adaptive Probability
Functions; EGWR 95 [12] Dutré Ph.; Mathematical Frameworks and Monte Carlo Algorithms for Global Illumination in Computer Graphics; Ph.D.
Thesis, Katholieke Universiteit Leuven, 1996. http://www.cs.kuleuven.ac.be/~graphics/CGRG.PUBLICATIONS/PHDPHD/ [13] Dutré Ph., Bekaert Ph., Bala K.; Advanced Global Illumination; A K Peters 2003 http://www.advancedglobalillumination.com/ [14] Fishman G.S.; Monte Carlo: Concepts, Algorithms and Applications; Springer-Verlag, 1996 [15] Glassner A.; How to Derive a Spectrum from an RGB Triplet; IEEE CG&A, 9(4):95-99, July 1989 [16] Glassner A.; Principles of Digital Image Synthesis; Morgan Kaufmann [17] Haines, E. A Proposal for Standard Graphics Environments; IEEE Computer Graphics and Applications, vol. 7, no. 11, November 1987, pp. 3-5 [18] Hammersley J.M., Handscomb D.C.; Monte Carlo Methods; Chapman and Hall, London, 1964 [19] Heckbert P.; Adaptive radiosity textures for bidirectional ray tracing, SIGGRAPH 90. [20] Jensen H.W.; Realistic Image Synthesis using Photon Mapping; AK Peters, 2001 [21] Kalos M.H., Whitlock P.A.; Monte Carlo Methods; Wiley-Interscience, New York, 1986 [22] Lafortune E.P., Willems Y.D.; Bi-directional Path Tracing; Proceedings of CompuGraphics, pp. 145-153, Alvor, Portugal, December 1993 [23] Lafortune E.P., Willems Y.D.; Using the Modified Phong Reflectance Model for Physically Based Rendering; Report CW 197, November 1994, Department of Computer Science, Katholieke Universiteit Leuven. [24] Lafortune E.; Mathematical Models and Monte Carlo Algorithms for Physically Based Rendering; Ph.D. Thesis, Katholieke Universiteit Leuven, 1996. [25] Lafortune E., Foo S., Torrance K., Greenberg D.; Non-Linear Approximation of Reflectance Functions; SIGGRAPH 97 [26] Lewis R.; Making Shaders More Physically Plausible; Computer Graphics Forum, 13 (2), 1994 (also in EGWR 93) [27] Miller, Robert D.; Computing the Area of a Spherical Polygon; Graphics Gems IV, p. 132-137
67

[28] Sbert M.; The use of global random directions to compute radiosity - Global Monte Carlo techniques. Universitat Politècnica de Catalunya, Barcelona, Spain, 1997. http://ima.udg.es/~mateu/
[29] Schröder P., Hanrahan P.; On the Form Factor between Two Polygons; SIGGRAPH 93 [30] Shirley P., Wang C., Zimmerman K.; Monte Carlo Techniques for Direct Lighting Calculations; ACM Transactions on
Graphics, Vol. 15,1, January 1996. [31] Shirley P.; Realistic Ray Tracing; A.K.Peters 2000 [32] Siegel R., Howell J.R.; Thermal Radiation Heat Transfer; Hemisphere Publishing Corporation [33] Sillion F. and Puech C.; Radiosity & Global Illumination; Morgan-Kaufmann [34] Sillion F., Drettakis G., Soler C.; A Clustering Algorithm for Radiance Calculation in General Environments; EGWR 95 [35] Sillion F.; A Unified Hierarchical Algorithm for Global Illumination with Scattering Volumes and Object Clusters; IEEE
Transactions on Vizualizations and Computer Graphics, 1(3), September 1995 (also in EGWR 94) [36] Smits, B. and Jensen, H. W.; Global Illumination Test Scenes; Tech. Rep. UUCS-00-013, Computer Science Department,
University of Utah, June 2000 [37] Spanier J., Gelbard E.M.; Monte Carlo Principles and Neutron Transport Problems; Addison-Wesley, 1969 [38] Suykens F., Willems Y.; Weighted Multipass Methods for Global Illumination; EG 99. [39] Tobler R., Neumann L., Sbert M., Purgathofer W.; A New Form Factor Analogy and its Application to Stochastic Global
Illumination Algorithms, EGWR 98 [40] Turk G.; Generating Random Points in Triangles; Graphics Gems I, p.24 [41] Ureña C., Torres J.; Improved Irradiance Computation by Importance Sampling; EGWR 97 [42] Veach E., Guibas L.; Bidirectional Estimators for Light Transport; EGWR 95 [43] Veach E., L. Guibas L.; Optimally Combining Sampling Techniques for Monte Carlo Rendering; SIGGRAPH 95 [44] Veach E.; Robust Monte Carlo Methods for Light Transport Simulation; Ph.D. Dissertation, Stanford University, December
1997. [45] Ward G.; Adaptive Shadow Testing for Ray Tracing; Photorealistic Rendering in Computer Graphics. P. Brunet and F.W.
Jansen, eds. Springer-Verlag (EGWR 91) [46] Ward G.; Measuring and Modeling Anisotropic Reflection; SIGGRAPH 92 [47] Whitted T.; An improved illumination model for shaded display; Communications of the ACM, 23(6):343-349, June 1980 [48] Zimmerman K., Shirley P.; A Two-pass Solution to the Rendering Equation with a Source Visibility Preprocess; EGWR 95
68

