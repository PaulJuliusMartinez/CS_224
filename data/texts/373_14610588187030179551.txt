BI-DIRECTIONAL PATH TRACING
Eric P. Lafortune, Yves D. Willems
Department of Computing Science Katholieke Universiteit Leuven
Celestijnenlaan 200A, 3001 Leuven, Belgium Eric.Lafortune@cs.kuleuven.ac.be

ABSTRACT

In this paper we present a new Monte Carlo rendering algorithm that seamlessly integrates the ideas of shooting and gathering power to create photorealistic images. The algorithm can be explained as a generalisation of the well-known path tracing algorithm. Test results show that it performs signi cantly better for typical indoor scenes where indirect lighting is important.
Key Words: Rendering and visualisation global illumination and photorealistic render-
ing.

INTRODUCTION
Both the eye point of the viewer and the set of primary light sources in a scene have always been identi ed as being important for solving the global illumination problem to create a realistic rendering. Some algorithms such as ray tracing are entirely built around the importance of the viewing point. Other algorithms such as the progressive radiosity method put a great emphasis on the contributions of the light sources. Ideally one would want an algorithm which takes into account the importance of both the light sources and the viewing point. In this paper we will present a new Monte Carlo algorithm which treats light sources and the viewing point on an equal basis.
RELATED WORK
An important milestone in the development of the global illumination theory for computer graphics was the introduction of the radiosity method by Goral et al. Goral et al.84]. Originally developed within the eld of heat transfer it is based on the energy equilibrium

between di use emitters and re ectors of radiative energy such as heat or light. It requires the scene to be discretised into patches or elements and as such it is a nite element method. The radiosity solution is viewindependent the solution does not take into account the eventual viewpoint. Smits et al. Smits et al.92] introduced the notion of importance and adapted the radiosity algorithm to tune the solution towards the nal rendering. Their progressive radiosity algorithm shoots light from the light sources and importance from the viewpoint.
In Kajiya86] Kajiya presented the rendering equation and introduced path tracing as a Monte Carlo algorithm to solve it. The idea is to sample the ux through the pixels, gathering light by following all light paths back to the light sources. As such it is entirely viewdependent. Various other algorithms are based on the same principle Cook et al.84, Shirley90]. Monte Carlo techniques are capable of handling the most general class of lighting e ects but are generally slow to converge.

light path

shadow rays

eye path

light source

screen eye point

Figure 1: A schematic representation of the bi-directional path tracing algorithm.

Most research on the global illumination problem is currently directed towards twopass methods Chen et al.91]. These compute di use lighting components in a rst extended progressive radiosity pass and specular lighting components in a second viewdependent pass. The di use components are computed using a deterministic method Wallace et al.87, Ward et al.88, SillionPuech89, Lange91, Pattanaik-Mudur92] or a Monte Carlo technique Feda-Purgathofer93, Pattanaik93]. The nal image including the specular re ections is usually rendered using some variant of distribution ray tracing or path tracing. Some algorithms attempt to reconstruct not only the di use component but also the directional component of the emitted light in order to nd a completely viewindependent solution of the problem Immel et al.86, Sillion et al.91]. The main problem with the latter approach is the huge amount of storage that is required to represent the lighting function.
BI-DIRECTIONAL PATH TRACING
The algorithm we present di ers from distribution ray tracing or path tracing in its computation of a primary estimator for the ux through each pixel. The basic idea is that particles are shot at the same time from

a selected light source and from the viewing point, in much the same way. All hit points on the respective particle paths are then connected using shadow rays and the appropriate contributions are added to the ux of the pixel in question (Fig. 1). Using this approach various lighting contributions are taken into account, not only from primary light sources but in a probabilistic way also from important secondary, tertiary, etc. light sources.
We will now present in greater detail which probability distribution functions (pdfs) govern the random walks and how the e ective contributions to the ux are then calculated. It can be proven mathematically that these lead to a correct solution of the rendering equation or its adjoint formulation.

Performing the random walks

As shown in Fig. 2 the random walks can be written as:

x0 x1
xi+1 is

x2 :
the

:p:oixnNt l

for seen

the by

light point

path, where xi along di-

rection xi, and

y0 y1 y2 : : : yNe;1 for the eye path, where yj+1 is the point that sees point yj along direction yj+1. The initial points and directions of the random walks have to be selected rst. Using the

x2

light path

x2

x1 x1 x0

x3

y1 y1
eye path
y0 y0

x0 light source

screen eye point

Figure 2: path and

Naming conventions for x0 the eye path respectively. In

xt0hi:s:e:xamxNpll;e1

Nanl deqyu0alsy30

:::
and

NyeNee;q1uatolsd2e.note

the

light

x0 y0 y0

x0 light source

Figure 3: Sampling x0 and the self-emitted radiance of

ligxh0 tascocuorrcdeins.g

to

naming conventions above we do this for the

eye path by sampling x0 and to the following pdf, which is

bxa0seadccoonrdtinhge

principle of importance sampling (Fig. 3):

(pdf x x) = (Le x x) j x Nxj (1) L
with the normalisation factor of the pdf

ZZ

= ( )L

A

Le x x

x j x Nxj d!xd x

where (Le x x) is the self-emitted radi-

ance at point x in direction x) and where

j x Nxj is the absolute value of the cosine of

the angle between x and the normal vector

at x. The importance sampling ensures that

more light particles are shot from bright emit-

ters and in bright directions, instead of dis-

tributing them uniformly and weighting their contributions to the ux later on.

pixel screen
eye point

Figure to the

p4i:xeSlaumnpdleirngcoyn0siadnedratioy0n.with

respect

theSiemyielaprlaythweacsceolercdtinsgamtopleths ey0foalnlodwinyg0

for pdf

(Fig. 4):

(pdf y y) = (g y y) j y Nyj

(2)

with the normalisation factGor of the pdf

ZZ

= ( )G

A

gy
y

y j y Nyj d!y d y

where (g y y) the function is 1 for all pairs of points and directions (y y) on the surfaces that contribute to the ux, and 0 otherwise.

Once the initial points and directions have

been chosen the rest of the random walks is

determined by sampling the directions

and mine

yj+1 xi+1

respectively. These variables and yj+2 unambiguously.

detxei+r1-

xi + 1

xi + 1 xi

Figure brdf of

5: the

Sampling surface at

pxoi+in1t

according xi+1 and

to the

the in-

coming direction xi.

yj + 1

yj

yj

Figure brdf of

6: the

Sampling surface at

poyijn+t1

according yj and the

to the incom-

ing direction xj.

The subcritical as follows, again

pdf on

(spdf) for the basis

ofxi+im1 ipsocrhtaonsecne

sampling (Fig. 5):

( ) = (pdf fr xi+1 xi ) x Nxi+1 (3)

where (fr x in out) is the bi-directional reection distribution function (brdf). The pdf

is subcritical because it does not integrate to

1 over all possible angles , at least for physi-

cally valid brdfs. The actual value of the in-

tegration gives the chance that the random

walk is continued, which ensures that the ran-

dom walk terminates. This technique is com-

monly called Russian roulette.

The subcritical pdf for the same way (Fig. 6):

yj+1 is chosen in

(pdf ) = (fr yj

yj ) y Nyj (4)

The random walks are independent of one

another. The spdfs for the directions can be

made identical simply by renaming the vari-

ables and using the bi-directional property of

the brdf. This property implies that after the

initialisation both random walks can be per-

formed by a single algorithm.

Estimating the ux

Now that we have shown how the stochastic

variables for the integrals and for the random

walks are selected we will actually evaluate

the nal result. For this purpose all points on

the respective random walks are linked using

shadow rays. The primary estimator for the

ux can then be derived as a sum of weighted

partial estimates:

= XNl XNe
h i wij hCiji

(5)

i=0 j=0

The factors hCiji express the estimates of the ux found by i re ections on the light path

and j re ections on the eye path. Three

cases have to be distinguished when evalu-

ating them:

i = 0 j = 0 : hC00i = G (Le y0 y0) This term is an estimate for the ux received from a light source that is directly seen through the pixel under consideration (Fig. 7).

i = 0 j > 0 : hC0ji =

L0 G
(fr yj;1

(Le x0 x0!yj;1
x0!yj;1 yj;1

) )

j x0!yj;1 Nkxx00;jjyj;x01!k2yj;1 Nyj;1j (v x0 yj;1)

with L0 = R x Le(x0

L x)j

x Nx0jd!x ,

where x!y is the direction from point x

to point y and where (v x y) is the visibility

function which is 1 if point x sees point y

and 0 otherwise. This value is found by

means of the shadow ray between point x

and point y.

The term is an estimate for the ux that reaches the eye from the light source through the eye path, as in classical path tracing (Fig. 8).

0i > j > 0 : hCiji =

(L G fr xi xi;1 (fr yj;1 xi!yj;1

yj;x1i!) yj;1)

j xi!yj;1 Nkxxii;jjyj;xi1!k2yj;1 Nyj;1j (v xi yj;1)

This term is an estimate for the ux

that reaches the eye from the light source,

through i re ections on the light path and j re ections on the eye path (Fig. 9).

y1

x0
x0 light source

C02 

y1

C01 

y0 y0

screen

eye point

Figure 8: The contribution hC0ji is an estimate for the ux that reaches the eye from the light source through the eye path.

x2 x2

x3

C22  x1 C12

C32 

y1

C31 

y1

x1 x0

C21  C11 

y0 y0

x0 screen

light source

eye point

Figure 9: The contribution hCiji is an estimate for the ux that reaches the eye through both the light path and the eye path.

y0 C00 
screen eye point

y0

Figure 7: The contribution hC00i is an estimate for the ux emitted by a light source that is seen directly by the viewer.

Selecting the weights

At this point the algorithm is still generic as

there are various alternatives to choose the

weights wij for the contributions hCiji, as

long as they comply with the condition that

PtioNi=n0cwainNb;ei

= 1 (N = 0 1 ).: : : derived theoretically

This condiits physical

meaning is that the sets of weights for the es-

timates of the uxes arriving at the eye via

one, two, etc. re ections respectively all have

to add up to 1. One can verify that the fol-

lowing instantiation yields the classical path

tracing algorithm:

wij = 1 for i = 0 and = 0 otherwise.

This selection does not fully use the information of the sampling process however. The following alternative uses both particle paths more e ectively:

wij = jY;2 Wk for i = 0
k=0
= 0 for j = 0 and = (jY;2 Wk)(1 ; Wj) otherwise.
k=0
where the weights Wj (j = 0 : : : Ne ; 1) still leave some degrees of freedom.
The idea behind this particular choice is that at each point on the eye path the estimates for the indirect lighting via the rest of the eye path and via the light path are weighted (Fig. 10). For specular surfaces one would rather rely on the estimate found by following the eye path. For di use surfaces the estimate found through the contributions

C3, j - 1

yj + 1

C2, j - 1 C1, j - 1 C0, j - 1

1 - Wj

Wj

yj yj

Figure 10: The weights Wj for the contributions via the eye path are selected proportional to the degree of specularity at point yj. The contributions arriving from the light path via the shadow rays have the weight 1 ; Wj.

of the light path is more likely to be important. Therefore the weight Wj is chosen proportional to a measure of the degree of specularity of the surface at point yj on the eye path. For highly specular surfaces it approaches 1, for di use surfaces it goes to 0. Tests on practical scenes have shown that this technique greatly improves the quality of the images, especially when rendering scenes containing mirrors.

Computing a secondary estimator

The primary estimator of the ux will still

have a large variance, which will clearly show

up in the image under the form of random

noise. As with all Monte Carlo methods a

secondary estimator is therefore computed by

averaging the results of several primary es-

timators for a single pixel. The variance of

the tor

pevNentifuaNl

result is the

will be reduced by a facnumber of primary sam-

ples. For path tracing N reportedly typi-

cally ranges between 40 and 500, but the op-

timal number largely depends on the com-

plexity of the scene and the desired accuracy.

Some heuristic adaptive sampling techniques

are usually applied to nd a balance between

the computational work and the quality of the

results.

IMPLEMENTATION
We have implemented the bi-directional path tracing algorithm as described above. The program has been written in the programming language C on an IBM RS/6000-320. It is based on the library routines of the public domain ray tracing program `Rayshade'.
The brdfs have been modeled using a Phong model which has been modi ed slightly as to make it reciprocal and energy-conserving. It allows the few constants in the equations and the pdfs to be computed analytically. More complicated models will in general require numerical techniques.
Several optimised sampling strategies have been implemented. Importance sampling and Russian roulette have been applied as explained in the previous paragraphs. Furthermore strati ed sampling has been used. This technique consists in subdividing the sampling intervals and selecting samples from each of these, instead of just selecting all samples randomly over the whole interval. The uniform samples selected in this way may be transformed into non-uniform samples, so that the technique is combined easily with importance sampling.
RESULTS
Based on the implementation we have performed some tests, comparing our bidirectional path tracing algorithm with classical path tracing. The largest amount of work in both algorithms consists in performing ray intersection tests. So in order to obtain a fair comparison approximately the same numbers of rays are used by the respective algorithms in each test. Table 1 gives an overview of the results. All images have been rendered at a resolution of 400 400 pixels. Both implementations use the optimised sampling strategies such as importance sampling, Russian roulette and strati ed sampling. Neither of the algorithms performs adaptive sampling of the pixels.
The scene consists of coloured di use walls, a slightly specular oor and a mixture of opaque and transparent objects. Both algorithms accurately render typical global illumination e ects such as di use and glossy re-

ections, soft shadows and colour bleeding. The results for the directly illuminated scene show little di erence between them. For the indirectly illuminated scene however our bi-directional algorithm produces visibly less noise for the same amount of work (it is even noticeable on the printed images, in spite of the dithering applied to produce di erent colour shades). An intuitive explanation is that the light particle paths help the indirect light to meet the eye paths halfway, thereby producing more reliable estimates and less noise.
CONCLUSION
We have presented bi-directional path tracing as a new Monte Carlo algorithm for physically-based rendering. It can be explained in a general theoretical framework in which the existing path tracing algorithm is a special case.
Similarly to other Monte Carlo techniques the algorithm is very general: it can handle extensive classes of geometrical objects and optical properties. Di use lighting e ects, soft shadows, specular and glossy re ections and refractions, and if required even depth of eld and motion blur are all simulated correctly. Anti-aliasing is integrated in a natural way. Experiments show that the algorithm performs better than path tracing for typical indoor scenes where indirect illumination is important. The method requires no meshing and thus avoids all the associated problems. Also because of this the method requires little memory. The description of the scene is accessed in a read-only fashion. Importance sampling is used extensively, reducing the variance drastically. Without adaptive sampling however convergence is rather slow. This is partly because the exact solution is sought for each pixel, as opposed to nite element methods where the eventual solution is interpolated over larger

Test Algorithm Number of samples Total number Time (sec)

per pixel

of rays

1 Path tr.

60 45 106 15 897

2 Bi-dir. path tr.

20 30 106 11 036

3 Path tr.

60 35 106 18 251

4 Bi-dir. path tr.

20 31 106 14 929

Table 1: Overview of the test results.

surface areas most of the time. Adaptive and hierarchical techniques and ltering should help to nd a proper balance between `oversolving' and `undersolving' in the future.
REFERENCES
Chen, S.E., Rushmeier, H.E., Miller, G., Turner, D. 1991. A progressive multi-pass method for global illumination. In Computer Graphics, volume 25, pages 164{174.
Cook, R.L., Porter, T., Carpenter, L. 1984. Distributed ray tracing. In Computer Graphics, volume 18, pages 137{145.
Feda, M., Purgathofer, W. 1993. Progressive ray re nement for monte carlo radiosity. In Proceedings of the Fourth Eurographics Workshop on Rendering, pages 15{25, Paris, France.
Goral, C.M., Torrance, K.E., Greenberg, D.P., Battaile, B. 1984. Modelling the interaction of light between di use surfaces. In Computer Graphics, volume 18, pages 213{222.
Immel, D.S., Cohen, M.F., Greenberg, D.P. 1986. A radiosity method for non-di use environments. In Computer Graphics, volume 20, pages 133{142.
Kajiya, J.T. 1986. The rendering equation. In Computer Graphics, volume 20, pages 143{ 150.
Lange, B. 1991. The simulation of radiant light transfer with stochastic ray-tracing. In Proceedings of the Second Eurographics Workshop on Rendering, Barcelona, Spain.
Pattanaik, S.N., Mudur, S.P. 1992. Computation of global illumination by monte carlo

simulation of the particle model of light. In Proceedings of the Third Eurographics Workshop on Rendering, pages 71{83, Bristol, UK. Pattanaik, S.N. 1993. Computational Methods for Global Illumination and Visualisation of Complex 3D Environments. PhD thesis, Birla Institute of Technology & Science, Pilani, India. Shirley, P. 1990. Physically Based Lighting Calculations for Computer Graphics. PhD thesis, University of Illinois. Sillion, F., Arvo, J.R., Westin, S.H., Greenberg, D.P. 1991. A global illumination solution for general re ectance distributions. In Computer Graphics, volume 25, pages 187{ 196. Sillion, F., Puech, C. 1989. A general two-pass method integrating specular and di use reection. In Computer Graphics, volume 23, pages 335{344. Smits, B.E., Arvo, J.R., Salesin, D.H. 1992. An importance-driven radiosity algorithm. In Computer Graphics, volume 26, pages 273{ 282. Wallace, J.R., Cohen, M.F., Greenberg, D.P. 1987. A two-pass solution to the rendering equation: a synthesis of ray tracing and radiosity methods. In Computer Graphics, volume 21, pages 311{320. Ward, G.J., Rubinstein, F.M., Clear, R.D. 1988. A ray tracing solution for di use interre ection. In Computer Graphics, volume 22, pages 85{92.

