Least-Squares Fitting of Circles and Ellipses
Walter Gander Gene H. Golub Rolf Strebel
Dedicated to °Ake Bj¨orck on the occasion of his 60th birthday.
Abstract Fitting circles and ellipses to given points in the plane is a problem that arises in many application areas, e.g. computer graphics [1], coordinate metrology [2], petroleum engineering [11], statistics [7]. In the past, algorithms have been given which fit circles and ellipses in some least squares sense without minimizing the geometric distance to the given points [1], [6]. In this paper we present several algorithms which compute the ellipse for which the sum of the squares of the distances to the given points is minimal. These algorithms are compared with classical simple and iterative methods. Circles and ellipses may be represented algebraically i.e. by an equation of the form F (x) = 0. If a point is on the curve then its coordinates x are a zero of the function F . Alternatively, curves may be represented in parametric form, which is well suited for minimizing the sum of the squares of the distances.
1 Preliminaries and Introduction
Ellipses, for which the sum of the squares of the distances to the given points is minimal will be referred to as "best fit" or "geometric fit", and the algorithms will be called "geometric".
Determining the parameters of the algebraic equation F (x) = 0 in the least squares sense will be denoted by "algebraic fit" and the algorithms will be called "algebraic".
We will use the well known Gauss-Newton method to solve the nonlinear least squares problem (cf. [15]). Let u = (u1, . . . , un)T be a vector of unknowns and consider the nonlinear system of m equations f(u) = 0.
If m > n, then we want to minimize
m
fi(u)2 = min .
i=1
This paper appeared in similar form in BIT 34(1994), 558­578.

64 W. Gander ­ G. H. Golub ­ R. Strebel

This is a nonlinear least squares problem, which we will solve iteratively by a sequence of linear least squares problems.
We approximate the solution u^ by u~ + h. Developing
f (u) = (f1(u), f2(u), . . . , fm(u))T

around u~ in a Taylor series, we obtain

(1.1)

f(u~ + h) f(u~) + J (u~)h  0,

where J is the Jacobian. We solve equation (1.1) as a linear least squares problem for the correction vector h:

(1.2)

J (u~)h  -f(u~).

An iteration then with the Gauss-Newton method consists of the two steps:

1. Solving equation (1.2) for h.

2. Update the approximation u~ := u~ + h.

We define the following notation: a given point Pi will have the coordinate vector xi = (xi1, xi2)T. The m × 2 matrix X = [x1, . . . , xm]T will therefore contain the coordinates of a set of m points. The 2-norm · 2 of vectors and matrices will simply be denoted by · .
We are very pleased to dedicate this paper to professor A°ke Bj¨orck who has
contributed so much to our understanding of the numerical solution of least squares
problems. Not only is he a scholar of great distinction, but he has always been
generous in spirit and gentlemanly in behavior.

2 Circle: Minimizing the algebraic distance

Let us first consider an algebraic representation of the circle in the plane:

(2.1)

F (x) = axTx + bTx + c = 0,

where a = 0 and x, b  IR2. To fit a circle, we need to compute the coefficients a, b

and c from the given data points.

If we insert the coordinates of the points into equation (2.1), we obtain a linear system of equations Bu = 0 for the coefficients u = (a, b1, b2, c)T, where



B = 

x211 + x212 ...

x11 ...

x12 ...

1 ...  .

xm2 1 + x2m2 xm1 xm2 1

To obtain a non-trivial solution, we impose some constraint on u, e.g. u1 = 1 (commonly used) or u = 1.
For m > 3, in general, we cannot expect the system to have a solution, unless all the points happen to be on a circle. Therefore, we solve the overdetermined system Bu = r where u is chosen to minimize r . We obtain a standard problem (c.f. [3]):

Bu = min subject to u = 1.

Least-Squares Fitting of Circles and Ellipses

65

This problem is equivalent to finding the right singular vector associated with the smallest singular value of B. If a = 0, we can transform equation (2.1) to

(2.2)

x1

+

b1 2a

2
+

x2

+

b2 2a

2
=

b2 4a2

-

c a

,

from which we obtain the center and the radius, if the right hand side of (2.2) is

positive:

z = (z1, z2) =

- b1 , - b2 2a 2a

r=

b2 4a2

-

c a

.

This approach has the advantage of being simple. The disadvantage is that we are uncertain what we are minimizing in a geometrical sense. For applications in coordinate metrology this kind of fit is often unsatisfactory. In such applications, one wishes to minimize the sum of the squares of the distances. Figure 2.1 shows two circles fitted to the set of points

(2.3)

x y

1 7

2 6

5 8

7 7

9 5

3 7

.

Minimizing the algebraic distance, we obtain the dashed circle with radius r = 3.0370 and center z = (5.3794, 7.2532).

12 10
8 6 4 2 0 -2
-2 0 2 4 6 8 10 12
Figure 2.1: algebraic vs. best fit -------- Best fit - - - - Algebraic fit

The algebraic solution is often useful as a starting vector for methods minimizing the geometric distance.

66 W. Gander ­ G. H. Golub ­ R. Strebel

3 Circle: Minimizing the geometric distance

To minimize the sum of the squares of the distances di2 = ( z - xi - r)2 we need to solve a nonlinear least squares problem. Let u = (z1, z2, r)T, we want to determine

u~ so that

m

di(u)2 = min .

i=1

The Jacobian defined by the partial derivatives di(u)/uj is given by:


J (u) = 

u1 - x11
(u1 - x11)2 + (u2 - x12)2 ...
u1 - xm1

u2 - x12
(u1 - x11)2 + (u2 - x12)2 ...
u2 - x2m

(u1 - xm1)2 + (u2 - xm2)2 (u1 - xm1)2 + (u2 - xm2)2



-1
... -1

 .

A good starting vector for the Gauss-Newton method may often be obtained by solving the linear problem as given in the previous paragraph. The algorithm then iteratively computes the "best" circle.
If we use the set of points (2.3) and start the iteration with the values obtained from the linear model (minimizing the algebraic distance), then after 11 GaussNewton steps the norm of the correction vector is 2.05E-6. We obtain the best fit circle with center z = (4.7398, 2.9835) and radius r = 4.7142 (the solid circle in figure 2.1).

4 Circle: Geometric fit in parametric form

The parametric form commonly used for the circle is given by

(4.1) (4.2)

x = z1 + r cos  y = z2 + r sin  .

The distance di of a point Pi = (xi1, xi2) may be expressed by

di2

=

min
i

(xi1 - x(i))2 + (xi2 - y(i))2

.

Now since we want to determine z1, z2 and r by minimizing

m
di2 = min,
i=1

we can simultaneously minimize for z1, z2, r and {i}i=1...m; i.e. find the minimum of the quadratic function

m
Q(1, 2, . . . , m, z1, z2, r) = (xi1 - x(i))2 + (xi2 - y(i))2 .
i=1

This is equivalent to solving the nonlinear least squares problem

z1 + r cos i - xi1  0 z2 + r sin i - xi2  0

for i = 1, 2, . . . , m .

Least-Squares Fitting of Circles and Ellipses

67

Let u = (1, . . . , m, z1, z2, r). The Jacobian associated with Q is

J=

rS A -rC B

,

where S = diag(sin i) and C = diag(cos i) are m × m diagonal matrices. A and B are m × 3 matrices defined by:

ai1 = -1 ai2 = 0 ai3 = - cos i bi1 = 0 bi2 = -1 bi3 = - sin i .

For large m, J is very sparse. We note that the first part

rS -rC

is orthogonal. To

compute the QR decomposition of J we use the orthonormal matrix

Q=

SC -C S

.

Multiplying from the left we get

QTJ =

rI SA - CB O CA + SB

.

So to obtain the QR decomposition of the Jacobian, we only have to compute a QR decomposition of the m × 3 sub-matrix CA + SB = UP . Then

I0 O UT

QTJ =

rI SA - CB OP

,

and the solution is obtained by backsubstitution. In general we may obtain good starting values for z1, z2 and r for the Gauss-Newton iteration, if we first solve the linear problem by minimizing the algebraic distance. If the center is known, initial approximations for {k}k=1...m can be computed by
k = arg ((xk1 - z1) + i (xk2 - z2)) .

We use again the points (2.3) and start the iteration with the values obtained from the linear model (minimizing the algebraic distance). After 21 Gauss-Newton steps the norm of the correction is 3.43E-06 and we obtain the same results as before: center z = (4.7398, 2.9835) and radius r = 4.7142 (the solid circle in figure 2.1).

5 Ellipse: Minimizing the algebraic distance

Given the quadratic equation

(5.1)

xTAx + bTx + c = 0

with A symmetric and positive definite, we can compute the geometric quantities of the conic as follows.
We introduce new coordinates x¯ with x = Qx¯ + t, thus rotating and shifting the conic. Then equation (5.1) becomes
x¯T(QTAQ)x¯ + (2tTA + bT)Qx¯ + tTAt + bTt + c = 0.

68 W. Gander ­ G. H. Golub ­ R. Strebel

Defining A¯ = QTAQ, and similarly b¯ and c¯, this equation may be written

x¯TA¯x¯ + b¯Tx¯ + c¯ = 0.

We may choose Q so that A¯ = diag(1, 2); if the conic is an ellipse or a hyperbola, we may further choose t so that b¯ = 0. Hence, the equation may be written

(5.2)

1x¯21 + 2x¯22 + c¯ = 0,

and this defines an ellipse if 1 > 0, 2 > 0 and c¯ < 0. The center and the axes of the ellipse in the non-transformed system are given by

z=t a = -c¯/1
b = -c¯/2 .
Since QTQ = I, the matrices A and A¯ have the same (real) eigenvalues 1, 2. It follows that each function of 1 and 2 is invariant under rotation and shifts. Note
det A = a11a22 - a21a12 = 12 trace A = a11 + a22 = 1 + 2 ,

which serve as a basis for all polynomials symmetric in 1, 2. As a possible application of above observations, let us express the quotient  = a/b for the ellipse's axes a and b. With a2 = -c¯/1 and b2 = -c¯/2 we get

2

+ 1/2

=

2 1

+

1 2

=

12 + 22 12

=

(trace A)2 - 2 det A det A

=

a211 + a222 + 2a212 a11a22 - a122

and therefore

2 = µ ± µ2 - 1

where

µ = (trace A)2 - 1 . 2 det A

To compute the coefficients u from given points, we insert the coordinates into equation (5.1) and obtain a linear system of equations Bu = 0, which we may solve again as constrained least squares problem: Bu = min subject to u = 1.
The disadvantage of the constraint u = 1 is its non-invariance for Euclidean coordinate transformations

x = Qx¯ + t, where QTQ = I.

For this reason Bookstein [9] recommended solving the constrained least squares problem

(5.3) (5.4)

xTAx + bTx + c  0 12 + 22 = a121 + 2a212 + a222 = 1 .

While [9] describes a solution based on eigenvalue decomposition, we may solve the same problem more efficiently and accurately with a singular value decomposition

Least-Squares Fitting of Circles and Ellipses

69

as described in [12]. In the simple algebraic solution by SVD, we solve the system for the parameter vector

(5.5)

u = (a11, 2a12, a22, b1, b2, c)T

with the constraint u = 1, which is not invariant under Euclidean transformations. If we define vectors

v = (b1, b2, c)T

T

w = (a11, 2 a12, a22)

and the coefficient matrix

 

S = 

x11 ...

x12 ...

1 ...

x121 2 x11x12 ...  ...

x212 ...

 ,

xm1 xm2 1 x2m1 2 xm1xm2 xm2 2

then the Bookstein constraint (5.4) may be written w = 1, and we have the

reordered system

S

v w

 0.

The QR decomposition of S leads to the equivalent system

R11 R12 0 R22

v w

 0,

which may be solved in following steps:

R22w  0 w = 1.

Using the singular value decomposition of R22 = UV T, finding w = v3, and then v = -R11-1R12w.

Note that the problem

v (S1 S2) w  0 where w = 1

is equivalent to the generalized total least squares problem finding a matrix S^2 such that

rank (S1 S^2)  5

(S1 S^2) - (S1 S2)

=

inf
rank (S1 S¯2)5

(S1 S¯2) - (S1 S2)

.

In other words, find a best rank 5 approximation to S that leaves S1 fixed. A description of this problem may be found in [16].

70 W. Gander ­ G. H. Golub ­ R. Strebel
12 10
8 6 4 2 0 -2 -4 -6 -8
-10 -5 0 5 10
Figure 5.1: Euclidean-invariant algorithms -------- Constraint 12 + 22 = 1 - - - - Constraint 1 + 2 = 1

To demonstrate the influence of different coordinate systems, we have computed the ellipse fit for this set of points:

(5.6)

x12579638 y 7 6 8 7 5 7 2 4,

which are first shifted by (-6, -6), and then by (-4, 4) and rotated by /4. See figures 5.1­5.2 for the fitted ellipses.
Since 12 +22 = 0 for ellipses, hyperbolas and parabolas, the Bookstein constraint is appropriate to fit any of these. But all we need is an invariant I = 0 for ellipses-- and one of them is 1 +2. Thus we may invariantly fit an ellipse with the constraint

1 + 2 = a11 + a22 = 1,

which results in the linear least squares problem





2x11x12 ...

x222 - x121 ...

x11

x12

1 ...


 v  

-x121 ...


 .

2xm1xm2 xm2 2 - x2m1 xm1 xm2 1

-xm2 1

See the dashed ellipses in figure 5.1.

Least-Squares Fitting of Circles and Ellipses

71

12 10
8 6 4 2 0 -2 -4 -6 -8
-10 -5 0 5 10
Figure 5.2: Non-invariant algebraic algorithm -------- Fitted ellipses - - - - Originally fitted ellipse after transformation

6 Ellipse: Geometric fit in parametric form

In order to fit an ellipse in parametric form, we consider the equations

x = z + Q()x , x =

a cos  b sin 

, Q() =

cos  - sin  sin  cos 

.

Minimizing the sum of squares of the distances of the given points to the "best" ellipse is equivalent to solving the nonlinear least squares problem:

gi =

xi1 xi2

-

z1 z2

- Q() a cos i b sin i

 0,

i = 1, . . . , m.

Thus we have 2m nonlinear equations for m + 5 unknowns: 1, . . . , m, , a, b, z1, z2. To compute the Jacobian we need the partial derivatives:

 gi  j

= -ijQ()

-a sin i b cos i

gi = -Q () a cos i  b sin i

gi = -Q() cos i a 0

gi = -Q() 0 b sin i

72 W. Gander ­ G. H. Golub ­ R. Strebel

 gi z1  gi z2 where we have used the notation
ij =

= =
1, 0,

-1 0
0 -1

i=j i=j

.

Thus the Jacobian becomes:



J

= 

-Q

-as1 bc1

...

-Q

...

ac1 bs1

-Q

c1 0

...

-Q ...

0 s1

-1 0 0 -1
... ...

-Q

-asm bcm

-Q

acm bsm

-Q

cm 0

-Q

0 sm

-1 0

0 -1

where we have used as abbreviation si = sin i and ci = cos i. Note that

Q () =

- sin  - cos  cos  - sin 

and therefore QTQ =

0 -1 10

.


 ,

Since Q is orthogonal, the 2m × 2m block diagonal matrix U = - diag(Q, . . . , Q) is

orthogonal, too, and


-as1



-bs1

c1

0

cs

U TJ =  bc1

...

ac...1

0
...

s...1

-s
...

c
...

 ,

-asm

-bsm

cm

0

cs

bcm acm 0 sm -s c

where s = sin  and c = cos . If we permute the equations, we obtain a similar

structure for the Jacobian as in the circle fit:

J¯ =

-aS A bC B

.

That is, S = diag(sin i) and C = diag(cos i) are two m × m diagonal matrices and A and B are m × 5 and are defined by:

A(i, 1 : 5) = [ -b sin i cos i 0 cos  sin  ] B(i, 1 : 5) = [ a cos i 0 sin i - sin  cos  ] .
We cannot give an explicit expression for an orthogonal matrix to triangularize the first m columns of J in a similar way as we did in fitting a circle. However, we can use Givens rotations to do this in m steps.
Figure 6.1 shows two ellipses fitted to the points given by

(6.1)

x y

1 7

2 6

5 8

7 7

9 5

3 7

6 2

8 4

.

By minimizing the algebraic distance with u = 1 we obtain the large cigar shaped dashed ellipse with z = (13.8251, -2.1099), a = 29.6437, b = 1.8806 and residual norm r = 1.80. If we minimize the sum of squares of the distances then we obtain the solid ellipse with z = (2.6996, 3.8160), a = 6.5187, b = 3.0319 and r = 1.17. In order to obtain starting values for the nonlinear least squares problem we used the center, obtained by fitting the best circle. We cannot use the approximation b0 = a0 = r, since the Jacobian becomes singular for b = a! Therefore, we used b0 = r/2 as a starting value. With 0 = 0, we needed 71 iteration steps to compute the "best ellipse" shown in Figure 6.1.

Least-Squares Fitting of Circles and Ellipses

73

20 15 10
5 0 -5 -10 -15 -20 -25
-10 -5 0 5 10 15 20 25 30 35 40
Figure 6.1: algebraic versus best fit -------- Best fit - - - - Algebraic fit ( u = 1)

7 Ellipse: Iterative algebraic solutions
In this section, we will present modifications to the algebraic fit of ellipses. The algebraic equations may be weighted depending on a given estimation--thus leading to a simple iterative mechanism. Most algorithms try to weight the points such that the algebraic solution comes closer to the geometric solution. Another idea is to favor non-eccentric ellipses.

7.1 Curvature weights

The solution of

xTAx + bTx + c  0

in the least squares sense leads to an equation for each point. If the equation for point (xi1, xi2) is multiplied by i > 1, the solution will approximate this point more accurately. In [6], i is set to 1/Ri, where Ri is the curvature radius of the ellipse at a point pi associated with (xi1, xi2). The point pi is determined by intersecting the ray from the ellipse's center to (xi1, xi2) and the ellipse.
Tests on few data sets show, that this weighting scheme leads to better shaped ellipses in some cases, especially for eccentric ellipses; but it does not systematically restrict the solutions to ellipses. Lets look at the curvature weight solution for two problems. Figure 7.1 shows the result for the data set (6.1) presented earlier: unluckily, the algorithm finds a hyperbola for the weighted equations in the first step. On the other side, the algorithm is successful indeed for a data set close to an

74 W. Gander ­ G. H. Golub ­ R. Strebel
eccentric ellipse. Figure 7.2 shows the large solid ellipse (residual norm 2.20) found by the curvature weights algorithm. The small dotted ellipse is the solution of the unweighted algebraic solution (6.77); the dashed ellipse is the best fit solution using Gauss-Newton (1.66), and the dash-dotted ellipse (1.69) is found by the geometricweight algorithm described later.
20
15
10
5
0
-5
-10
-15
-20
-25 -10 -5 0 5 10 15 20 25 30 35 40
Figure 7.1: algebraic fit with curvature weights -------- Conic after first curvature-weight step - - - - Unweighted algebraic fit

7.2 Geometric distance weighting

We are interested in weighting schemes which result in a least square solution for the geometric distance. If we define
Q(x) = xTAx + bTx + c ,

then the simple algebraic method minimizes Q for the given points in the least squares sense. Q has the following geometric meaning: Let h(x) be the geometric distance from the center to point x

h(x) = (x1 - z1)2 + (x2 - z2)2

and determine pi by intersecting the ray from the ellipse's center to xi and the ellipse. Then, as pointed out in [9]

(7.1) (7.2)

Q(xi) = ((h(xi)/h(pi))2 - 1)

2 h(xi) - h(pi) , h(pi)

if xi

pi

Least-Squares Fitting of Circles and Ellipses

75

20

18

16

14

12

10

8

6

4

2

0 0

5 10 15 20

Figure 7.2: comparison of different fits

-------- Curvature weights solution - - - - Best fit · · · · · · · Unweighted algebraic fit - · - · - Geometric weights solution

for some constant . This explains why the simple algebraic solution tends to neglect points far from the center.
Thus, we may say that the algebraic solution fits the ellipse with respect to the relative distances, i.e. a distant point has not the same importance as a near point. If we prefer to minimize the absolute distances, we may solve a weighted problem with weights
i = h(pi)
for a given estimated ellipse. The resulting estimated ellipse may then be used to determine new weights i, thus iteratively solving weighted least squares problems.
Consequently, we may go a step further and set weights so that the equations are solved in the least squares sense for the geometric distances. If d(x) is the geometric distance of x from the currently estimated ellipse, then weights are set

i = d(xi)/Q(xi).

See the dash-dotted ellipse in figure 7.2 for an example. The advantage of this method compared to the non-linear method to compute
the geometric fit is, that no derivatives for the Jacobian or Hessian matrices are needed. The disadvantage of this method is, that it does not generally minimize the geometric distance. To show this, let us restate the problem:

(7.3)

G(x)x 2 = min where x = 1.

76 W. Gander ­ G. H. Golub ­ R. Strebel

An iterative algorithm determines a sequence (yi), where yk+1 is the solution of

(7.4)

G(yk) y 2 = min where y = 1.

The sequence (yi) may have a fixed point y~ = y without solving (7.3), since the conditions for critical points x~ and y~ are different for the two equations. To show
this, we shall use the notation dz for an infinitesimal change of z. For all dx with x~Tdx = 0 the following holds

2(x~TGTdGx~ + x~TGTGdx) = d Gx~ 2 = 0

for equation (7.3). Whereas for equation (7.4) and y~Tdy = 0 the condition is 2(y~TGTGdy) = d Gy~ 2 = 0.

This problem is common to all iterative algebraic solutions of this kind, so no matter how good the weights approximate the real geometric distances, we may not generally expect that the sequence of estimated ellipses converges to the optimal
solution. We give a simple example for a fixed point of the iteration scheme (7.4), which
does not solve (7.3). For z = (x, y)T consider

G=

20 -4y 4

;

then z0 = (1, 0)T is a fixed point of (7.4), but z = (0.7278, 0.6858)T is the solution of (7.3).
Another severe problem with iterative algebraic methods is the lack of convergence in the general case--especially if the problem is ill-conditioned. We will shortly examine the solution of (7.4) for small changes to G. Let

G = U V T G¯ = G + dG = U¯ ¯ V¯ T

and denote with 1, . . . , n the singular values in descending order, with vi the associated right singular vectors--where vn is the solution of equation (7.4) for G. Then we may bound dvn = v¯n - vn as follows. First, we define

 = V¯ Tvn µ = 1 - n2
 = dG

thus  = 1

and note that We may conclude and thus

i -   ¯i  i +  for all i.
¯ = U¯ ¯  = G¯vn
G¯vn  Gvn + dGvn  n + ,
n
i2¯i2  n2 + 2n + 2.
i=1

Least-Squares Fitting of Circles and Ellipses

77

Using that ¯i  ¯n-1 for i  n - 1, and that  = 1, we simplify the above expression to

(7.5)

(1 - 2n)¯n2-1 + n2 ¯n2  n2 + 2n + 2.

Assuming that n = 0 (otherwise the solution is exact) and   n, we have

i2 - 2i + 2  ¯i2.

Applying this to inequality (7.5), we get

µ



4n ¯n2-1 - ¯n2

.

Note that

vn - v¯n 2 =  - (0, . . . , 1)T 2 = (n - 1)2 + (1 - 2n) = 2(1 - n).

Assuming that vn - v¯n is small (and thus n  1, µ  0), then we may write  for ¯ and µ = (1 + n)(1 - n)  2(1 - n); thus we finally get

vn - v¯n 

4n n2-1 - n2



2 .
n-1 - n

This shows that the convergence behavior of iterative algebraic methods depends on

how well--in a figurative interpretation--the solution vector v~n is separated from its hyper-plane with respect to the residual norm Gv . If ~n-1  ~n, the solution is poorly determined, and the algorithm may not converge.

While the analytical results are not encouraging, we obtained solutions close to

the optimum using the geometric-weight algorithm for several examples. Figure 7.3

shows the geometric-weight (solid) and the best (dashed) solution for such an ex-

ample. Note that the calculation of geometric distances is relatively expensive, so

a pragmatic way to limit the cost is to perform a fixed number of iterations, since

convergence is not guaranteed anyway.

xi 2.0143
17.3465 -8.5257 -7.9109 16.3705 -15.3434 -21.5840
9.4111

yi 10.5575
3.2690 -7.2959 -7.6447 -3.8815
5.0513 -0.6013 -9.0697

Table 7.1: Given points close to ellipse

Table 7.1 lists the points to be approximated, resulting in a residual norm of 2.784, compared to 2.766 for the best geometric fit. Since the algebraic method minimizes wiQi in the least squares sense, it remains to check that wiQi is proportional to the geometric distance di for the estimated conic. We compute

(7.6) (7.7)

Mi = (wiQi)/di hi = 1 - Mi/ M 

and find--as expected--that h = 1.1E-5.

78 W. Gander ­ G. H. Golub ­ R. Strebel

15 10
5 0 -5 -10 -15

-25 -20 -15 -10

-5

0

5 10 15 20 25

Figure 7.3: geometric weight fit vs. best fit

-------- Geometric weight solution - - - - Best fit

7.3 Circle weight algorithm

The main difficulty with above algebraic methods is that the solution may be any conic--not necessarily an ellipse. To cope with this case, we extend the system by weighted equations, which favour circles and non-eccentric ellipses:

(7.8) (7.9)

 (a11 - a22)  0  2a12  0 .

Note that these equations are Euclidean-invariant only if  is the same in both equations, and the problem is solved in the least squares sense. What we are really minimizing in this case is

2((a11 - a22)2 + 4a212) = 2(1 - 2)2;

hence, the constraints (7.8) and (7.9) are equivalent to the equation

 (1 - 2)  0.

The weight  is fixed by

(7.10)

 = f ((1 - 2)2),

where is a parameter representing the badness of eccentric ellipses, and

f : [0, [  [0, [ continuous, strictly increasing.

Least-Squares Fitting of Circles and Ellipses

79

The larger is chosen, the larger will  be, and thus the more important are equations (7.8­7.9), which make the solution be more circle-shaped. The parameter  is determined iteratively (starting with 0 = 0), where following conditions hold

(7.11)

0 = 0  2  . . .    . . .  3  1.

Thus, the larger the weight , the less eccentric the ellipse; we prove this in the following. Given weights  <  and

F=

1 0 -1 0 0 0 01 0 000

,

then we find solutions x and z for the equations

B x
F B
z F

= min = min

respectively. It follows that

Bx 2 + 2 F x 2  Bz 2 + 2 F z 2 Bz 2 + 2 F z 2  Bx 2 + 2 F x 2

and by adding

2 F x 2 + 2 F z 2  2 F z 2 + 2 F x 2

and since 2 - 2 > 0

Fz 2  Fx 2 ,

so that

¯ =  f ( F z 2)   f ( F x 2) = ¯ .

This completes the proof, since f was chosen strictly increasing. One obvious choice for f is the identity function, which was used in our test programs.

8 Comparison of geometric algorithms
The discussion of algorithms minimizing the geometric distance is somewhat different from the algebraic distance problems. The problems in the latter are primarily stability and "good-looking" solutions; the former must be viewed by their efficiency, too. Generally, the simple algebraic solution is orders of magnitude cheaper than the geometric counterparts (for accurate results about a factor 10­100); thus iterative algebraic methods are a valuable alternative. But a comparison between algebraic and geometric algorithms would not be very enlightening--because there is no objective criterion to decide which estimate is better. However, we may compare different nonlinear least squares algorithms to compute the geometric fit with respect to stability and efficiency.

8.1 Algorithms Several known nonlinear least squares algorithms have been implemented:

80 W. Gander ­ G. H. Golub ­ R. Strebel
1. Gauss-Newton (gauss)
2. Newton (newton)
3. Gauss-Newton with Marquardt modification (marq)
4. Variable projection (varpro)
5. Orthogonal distance regression (odr)
The odr algorithm (see [13], [14]) solves the implicit minimization problem
f (xi + i, ) = 0 i 2 = min
i
where f (x, ) = 3(x1 - 1)2 + 24(x1 - 1)(x2 - 2) + 5(x2 - 2)2 - 1 .
Whereas the gauss, newton, marq and varpro algorithms solve the problem
m
Q(x, 1, 2, . . . , m, z1, z2, r) = (xi1 - x(i))2 + (xi2 - y(i))2 = min .
i=1
For a  b , the Jacobian matrix is nearly singular, so the gauss and newton algorithms are modified to apply Marquardt steps in this case. Not surprising, this modification makes all algorithms behave similar with respect to stability if the initial parameters are accurate and the problem is well posed.
8.2 Results
To appreciate the results given in table 8.1, it must be said that the varpro algorithm is written for any separable functional and cannot take profit from the sparsity of the Jacobian. The algorithms were tested with example data--each consisting of 8 points--for following problems
1. Special set of points (6.1)
2. Uniformly distributed data in a square
3. Points on a circle
4. Points on an ellipse with a/b = 2
5. Points on hyperbola branch
The tests with points on a conic were done both with and without perturbations. For table 8.1, the initial parameters were derived from the algebraically best fitting circle (radius ra, center za); initial center z0 = za, axes a0 = ra, b0 = ra and 0 = 0. Note that these initial values are somewhat rudimentary, so they serve to check the algorithms' stability, too. Table 8.1 shows the number of flops (in 1000) for the respective algorithm and problem; the smallest number is underlined. If the algorithm didn't terminate after 100 steps, it was assumed non-convergent and a

Least-Squares Fitting of Circles and Ellipses

81

Special Random Circle Circle+ Ellipse Ellipse+ Hyperbola Hyperbola+

gauss newton 146 85
22 22 86 67 30 37 186 22 22

marq 468
22 189 67 633 22

varpro 1146 2427 36 717 143 1977 36

odr
7 69 41 103 10

Table 8.1: Geometric fit with initial parameters of algebraic circle
#flops/1000, minimum is underlined ` ' if non-convergence

Special Random Circle Circle+ Ellipse Ellipse+ Hyperbola Hyperbola+

gauss newton 165 896
32 32 76 63 22 22 161 40

marq 566
32 145 22 435

varpro 1506 2819 102 574 112 1870 1747 2986

odr
7 66 7 74

Table 8.2: Geometric fit with initial parameters of algebraic ellipse
#flops/1000, minimum is underlined ` ' if non-convergence

82 W. Gander ­ G. H. Golub ­ R. Strebel
` ' is shown instead. Table 8.2 contains the results if the initial parameters were obtained from the Bookstein algorithm.
Table 8.2 shows that all algorithms converge quickly with the more accurate initial data for exact conics. For the perturbed ellipse data, it's primarily the newton algorithm which profits from the starting values close to the solution. Note further that the newton algorithm does not find the correct solution for the special data, since the algebraic estimation--which serves as initial approximation--is completely different from the geometric solution.
General conclusions from this (admittedly) small test series are
· All algorithms are prohibitively expensive compared to the simple algebraic solution (factor 10­100).
· If the problem is well posed, and the accuracy of the result should be high, the newton method applied to the parameterized algorithm is the most efficient.
· The odr algorithm--although a simple general-purpose optimizing scheme--is competitive with algorithms specifically written for the ellipse fitting problem. If one takes into consideration further, that we didn't use a highly optimized odr procedure, the method of solution is surprisingly simple and efficient.
· The varpro algorithm seems to be the most expensive. Reasons for its inefficiency are that most parameters are non-linear and that the algorithm does not make use of the special matrix structure for this problem.
The programs on which these experiments have been based are given in [17]. The report [17] and the Matlab sources for the examples are available via anonymous ftp from ftp.inf.ethz.ch.

Least-Squares Fitting of Circles and Ellipses

83

References
[1] Vaughan Pratt, Direct Least Squares Fitting of Algebraic Surfaces, ACM J. Computer Graphics, Volume 21, Number 4, July 1987
[2] M. G. Cox, A. B. Forbes, Strategies for Testing Assessment Software, NPL Report DITC 211/92
[3] G. Golub, Ch. Van Loan, Matrix Computations (second ed.), The Johns Hopkins University Press, Baltimore, 1989
[4] D. Sourlier, A. Bucher, Normgerechter Best-fit-Algorithmus fu¨r FreiformFl¨achen oder andere nicht-regula¨re Ausgleichs-Fla¨chen in Parameter-Form, Technisches Messen 59, (1992), pp. 293­302
[5] H. Spa¨th, Orthogonal Least Squares Fitting with Linear Manifolds, Numer. Math., 48:441­445, 1986.
[6] Lyle B. Smith, The use of man-machine interaction in data fitting problems, TR No. CS 131, Stanford University, March 1969 (thesis)
[7] Y. Vladimirovich Linnik, Method of least squares and principles of the theory of observations, New York, Pergamon Press, 1961
[8] Charles L. Lawson, Contributions to the Theory of Linear Least Maximum Approximation, Dissertation University of California, Los Angeles, 1961
[9] Fred L. Bookstein, Fitting Conic Sections to Scattered Data, Computer Graphics and Image Processing 9, (1979), pp. 56­71
[10] G. H. Golub, V. Pereyra, The Differentiation of Pseudo-Inverses and Nonlinear Least Squares Problems whose Variables Separate, SIAM J. Numer. Anal. 10, No. 2, (1973); pp. 413­432
[11] M. Heidari, P. C. Heigold, Determination of Hydraulic Conductivity Tensor Using a Nonlinear Least Squares Estimator , Water Resources Bulletin, June 1993, pp. 415­424
[12] W. Gander, U. von Matt, Some Least Squares Problems, Solving Problems in Scientific Computing Using Maple and Matlab, W. Gander and J. Hreb´icek ed., 251-266, Springer-Verlag, 1993.
[13] Paul T. Boggs, Richard H. Byrd and Robert B. Schnabel, A stable and efficient algorithm for nonlinear orthogonal distance regression, SIAM Journal Sci. and Stat. Computing 8(6):1052­1078, November 1987.
[14] Paul T. Boggs, Richard H. Byrd, Janet E. Rogers and Robert B. Schnabel, User's Reference Guide for ODRPACK Version 2.01--Software for Weighted Orthogonal Distance Regression, National Institute of Standards and Technology, Gaithersburg, June 1992.
[15] P. E. Gill, W. Murray and M. H. Wright, Practical Optimization, Academic Press, New York, 1981.

84 W. Gander ­ G. H. Golub ­ R. Strebel
[16] Gene H. Golub, Alan Hoffmann, G. W. Stewart, A Generalization of the Eckart-Young-Mirsky Matrix Approximation Theorem, Linear Algebra and its Appl. 88/89:317­327(1987)
[17] Walter Gander, Gene H. Golub, and Rolf Strebel, Fitting of circles and ellipses--least squares solution, Technical Report 217, Institut fu¨r Wissenschaftliches Rechnen, ETH Zu¨rich, June 1994. Available via anonymous ftp from ftp.inf.ethz.ch as doc/tech-reports/1994/217.ps.
Institut fu¨r Wissenschaftliches Rechnen Eidgeno¨ssische Technische Hochschule CH-8092 Zu¨rich, Switzerland email: {gander,strebel}@inf.ethz.ch Computer Science Department Stanford University Stanford, California 94305 email: golub@sccm.stanford.edu

