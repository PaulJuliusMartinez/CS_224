The Sandwich Theorem
Donald E. Knuth
Abstract: This report contains expository notes about a function (G) that is popularly known as the Lova´sz number of a graph G. There are many ways to define (G), and the surprising variety of different characterizations indicates in itself that (G) should be interesting. But the most interesting property of (G) is probably the fact that it can be computed efficiently, although it lies "sandwiched" between other classic graph numbers whose computation is NP-hard. I have tried to make these notes self-contained so that they might serve as an elementary introduction to the growing literature on Lova´sz's fascinating function.

The Sandwich Theorem

DEK notes last revised 6 December 1993

0. Preliminaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1. Orthogonal labelings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 2. Convex labelings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 3. Monotonicity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 4. The theta function . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 5. Alternative definitions of  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 6. Characterization via eigenvalues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 7. A complementary characterization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 8. Elementary facts about cones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 9. Definite proof of a semidefinite fact . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 10. Another characterization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13 11. The final link . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 12. The main theorem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14 13. The main converse . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 14. Another look at TH . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 15. Zero weights . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 16. Nonzero weights . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 17. Simple examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 18. The direct sum of graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 19. The direct cosum of graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 20. A direct product of graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 21. A direct coproduct of graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 22. Odd cycles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 23. Comments on the previous example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 24. Regular graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 25. Automorphisms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 26. Consequence for eigenvalues . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 27. Further examples of symmetric graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 28. A bound on  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 29. Compatible matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 30. Antiblockers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 31. Perfect graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 32. A characterization of perfection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 33. Another definition of  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 34. Facets of TH . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 35. Orthogonal labelings in a perfect graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42 36. The smallest non-perfect graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43 37. Perplexing questions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

 
 
  
    
The Sandwich Theorem

2

It is NP-complete to compute (G), the size of the largest clique in a graph G, and it is NP-complete to compute (G), the minimum number of colors needed to color the vertices of G. But Gro¨tschel, Lov´asz, and Schrijver proved [5] that we can compute in polynomial time a real number that is "sandwiched" between these hard-to-compute integers:

(G)  (G)  (G) .

()

Lova´sz [13] called this a "sandwich theorem." The book [7] develops further facts about the function (G) and shows that it possesses many interesting properties. Therefore I think it's worthwhile to study (G) closely, in hopes of getting acquainted with it and finding faster ways to compute it.
Caution: The function called (G) in [13] is called (G) in [7] and [12]. I am following the latter convention because it is more likely to be adopted by other researchers--[7] is a classic book that contains complete proofs, while [13] is simply an extended abstract.
In these notes I am mostly following [7] and [12] with minor simplifications and a few additions. I mention several natural problems that I was not able to solve immediately although I expect (and fondly hope) that they will be resolved before I get to writing this portion of my forthcoming book on Combinatorial Algorithms. I'm grateful to many people--especially to Martin Gro¨tschel and La´szl´o Lova´sz--for their comments on my first drafts of this material.
These notes are in numbered sections, and there is at most one Lemma, Theorem, Corollary, or Example in each section. Thus, "Lemma 2" will mean "the lemma in section 2".

0. Preliminaries. Let's begin slowly by defining some notational conventions and by stating some basic things that will be assumed without proof. All vectors in these notes will be regarded as column vectors, indexed either by the vertices of a graph or by integers. The notation x  y, when x and y are vectors, will mean that xv  yv for all v. If A is a matrix, Av will denote column v, and Auv will be the element in row u of column v. The zero vector and the zero matrix and zero itself will all be denoted by 0.
We will use several properties of matrices and vectors of real numbers that are familiar to everyone who works with linear algebra but not to everyone who studies graph theory, so it seems wise to list them here:

(i) The dot product of (column) vectors a and b is

a · b = aT b ;

(0.1)

 
 
  
    

3

the vectors are orthogonal (also called perpendicular) if a · b = 0. The length of vector a is

 a = a·a.

(0.2)

Cauchy's inequality asserts that

a·b a b ;

(0.3)

equality holds iff a is a scalar multiple of b or b = 0. Notice that if A is any matrix we

have

nn
(ATA)uv = (AT )ukAkv = AkuAkv = Au · Av ;

(0.4)

k=1

k=1

in other words, the elements of ATA represent all dot products of the columns of A.

(ii) An orthogonal matrix is a square matrix Q such that QT Q is the identity matrix I. Thus, by (0.4), Q is orthogonal iff its columns are unit vectors perpendicular to each other. The transpose of an orthogonal matrix is orthogonal, because the condition QT Q = I implies that QT is the inverse of Q, hence QQT = I.

(iii) A given matrix A is symmetric (i.e., A = AT ) iff it can be expressed in the form

A = QDQT

(0.5)

where Q is orthogonal and D is a diagonal matrix. Notice that (0.5) is equivalent to the

matrix equation

AQ = QD ,

(0.6)

which is equivalent to the equations

AQv = Qvv
for all v, where v = Dvv. Hence the diagonal elements of D are the eigenvalues of A and the columns of Q are the corresponding eigenvectors.
Properties (i), (ii), and (iii) are proved in any textbook of linear algebra. We can get some practice using these concepts by giving a constructive proof of another well known fact:

Lemma. Given k mutually perpendicular unit vectors, there is an orthogonal matrix having these vectors as the first k columns.

Proof. Suppose first that k = 1 and that x is a d-dimensional vector with x = 1. If x1 = 1 we have x2 = · · · = xd = 0, so the orthogonal matrix Q = I satisfies the desired condition. Otherwise we let

y1 = (1 - x1)/2 , yj = -xj/(2y1) for 1 < j  d .

(0.7)

 
 
  
    

Then

yTy =

y

2

=

y12

+

x22

+···+ 4y12

x2d

=

1 - x1 2

+

1 - x21 2(1 - x1)

= 1.

And x is the first column of the Householder [8] matrix

Q = I - 2yyT ,

which is easily seen to be orthogonal because QT Q = Q2 = I - 4yyT + 4yyT yyT = I .

4 (0.8)

Now suppose the lemma has been proved for some k  1; we will show how to increase

k by 1. Let Q be an orthogonal matrix and let x be a unit vector perpendicular to its first

k columns. We want to construct an orthogonal matrix Q agreeing with Q in columns 1

to k and having x in column k + 1. Notice that

0

QT

x

=



... 0



y

by hypothesis, where there are 0s in the first k rows. The (d - k)-dimensional vector y has
squared length y 2 = QT x · QT x = xT QQT x = xT x = 1 ,

so it is a unit vector. (In particular, y = 0, so we must have k < d.) Using the construction

above, we can find a (d - k) × (d - k) orthogonal matrix R with y in its first column. Then

the matrix

1 

Q = Q 

. . . 1 0 

0R

does what we want.

1. Orthogonal labelings. Let G be a graph on the vertices V . If u and v are distinct elements of V , the notation u -- v means that they are adjacent in G; u -- v means they are not.
An assignment of vectors av to each vertex v is called an orthogonal labeling of G if au · av = 0 whenever u -- v. In other words, whenever au is not perpendicular to av in the labeling, we must have u -- v in the graph. The vectors may have any desired dimension d; the components of av are ajv for 1  j  d. Example: av = 0 for all v always works trivially.

 
 
  
    

5

The cost c(av) of a vector av in an orthogonal labeling is defined to be 0 if av = 0,

otherwise

c(av) =

a12v av 2

=

a21v a21v + · · · + ad2v

.

Notice that we can multiply any vector av by a nonzero scalar tv without changing its

cost, and without violating the orthogonal labeling property. We can also get rid of a zero

vector by increasing d by 1 and adding a new component 0 to each vector, except that

the zero vector gets the new component 1. In particular, we can if we like assume that all

vectors have unit length. Then the cost will be a12v.

Lemma. If S  V is a stable set of vertices (i.e., no two vertices of S are adjacent) and if a is an orthogonal labeling then

c(av)  1 .
vS

(1.1)

Proof. We can assume that av = 1 for all v. Then the vectors av for v  S must be mutually orthogonal, and Lemma 0 tells us we can find a d × d orthogonal matrix Q with these vectors as its leftmost columns. The sum of the costs will then be at most q121 + q122 + · · · + q12d = 1.
Relation (1.1) makes it possible for us to study stable sets geometrically.

2. Convex labelings. An assignment x of real numbers xv to the vertices v of G is

called a real labeling of G. Several families of such labelings will be of importance to us:

The characteristic labeling for U  V has xv =

1 0

if v  U ; if v / U .

A stable labeling is a characteristic labeling for a stable set.

A clique labeling is a characteristic labeling for a clique (a set of mutually adjacent

vertices).

STAB(G) is the smallest convex set containing all stable labelings, i.e., STAB(G) = convex hull { x | x is a stable labeling of G }.
QSTAB(G) = { x  0 | vQ xv  1 for all cliques Q of G } . TH(G) = { x  0 | vV c(av)xv  1 for all orthogonal labelings a of G } .

Lemma. TH is sandwiched between STAB and QSTAB:

STAB(G)  TH(G)  QSTAB(G) .

(2.1)

Proof. Relation (1.1) tells that every stable labeling belongs to TH(G). Since TH(G) is obviously convex, it must contain the convex hull STAB(G). On the other hand, every

 
 
  
    

6

clique labeling is an orthogonal labeling of dimension 1. Therefore every constraint of QSTAB(G) is one of the constraints of TH(G).
Note: QSTAB first defined by Shannon [18], and the first systematic study of STAB was undertaken by Padberg [17]. TH was first defined by Gro¨tschel, Lova´sz, and Schrijver in [6].
3. Monotonicity. Suppose G and G are graphs on the same vertex set V , with G  G (i.e., u -- v in G implies u -- v in G ). Then
every stable set in G is stable in G, hence STAB(G)  STAB(G ); every clique in G is a clique in G , hence QSTAB(G)  QSTAB(G ); every orthogonal labeling of G is an orthogonal labeling of G ,
hence TH(G)  TH(G ). In particular, if G is the empty graph Kn on |V | = n vertices, all sets are stable and all cliques have size  1, hence
STAB(Kn) = TH(Kn) = QSTAB(Kn) = { x | 0  xv  1 for all v }, the n-cube. If G is the complete graph Kn, all stable sets have size  1 and there is an n-clique, so
STAB(Kn) = TH(Kn) = QSTAB(Kn) = { x  0 | v xv  1 }, the n-simplex. Thus all the convex sets STAB(G), TH(G), QSTAB(G) lie between the n-simplex and the n-cube.
Consider, for example, the case n = 3. Then there are three coordinates, so we can visualize the sets in 3-space (although there aren't many interesting graphs). The QSTAB of xs ys zs is obtained from the unit cube by restricting the coordinates to x + y  1 and y + z  1; we can think of making two cuts in a piece of cheese:

The vertices {000, 100, 010, 001, 101} correspond to the stable labelings, so once again we have STAB(G) = TH(G) = QSTAB(G).

4. The theta function. The function (G) mentioned in the introduction is a special case of a two-parameter function (G, w), where w is a nonnegative real labeling:

(G, w) = max{ w · x | x  TH(G) } ; (G) = (G, 1l) where 1l is the labeling wv = 1 for all v.

(4.1) (4.2)

 
 
  
    

7

This function, called the Lov´asz number of G (or the weighted Lov´asz number when w = 1l), tells us about 1-dimensional projections of the n-dimensional convex set TH(G).
Notice, for example, that the monotonicity properties of §3 tell us

G  G  (G, w)  (G , w)

(4.3)

for all w  0. It is also obvious that  is monotone in its other parameter:

w  w  (G, w)  (G, w ) .

(4.4)

The smallest possible value of  is

(Kn, w) = max{w1, . . . , wn} ; (Kn) = 1 . The largest possible value is

(4.5)

(Kn, w) = w1 + · · · + wn ; (Kn) = n .

(4.6)

Similar definitions can be given for STAB and QSTAB:

(G, w) = max{ w · x | x  STAB(G) } , (G, w) = max{ w · x | x  QSTAB(G) } ,

(G) = (G, 1l) ; (G) = (G, 1l) .

(4.7) (4.8)

Clearly (G) is the size of the largest stable set in G, because every stable labeling x corresponds to a stable set with 1l · x vertices. It is also easy to see that (G) is at most (G), the smallest number of cliques that cover the vertices of G. For if the vertices can be partitioned into k cliques Q1, . . . , Qk and if x  QSTAB(G), we have

1l · x =

xv + · · · +

xv  k .

vQ1

vQk

Sometimes (G) is less than (G). For example, consider the cyclic graph Cn, with vertices {0, 1, . . . , n - 1} and u -- v iff u  v ± 1 (mod 1). Adding up the inequalities

x0 + x1  1, . . . , xn-2 + xn-1  1, xn-1 + x0  1 of QSTAB gives 2(x0 + · · · + xn-1)  n,

and

this

upper

bound

is

achieved

when

all

x's

are

1 2

;

hence

(Cn) =

n 2

,

if

n

>

3.

But

(G)

is always an integer, and (Cn) =

n 2

is greater than (Cn) when n is odd.

Incidentally, these remarks establish the "sandwich inequality" () stated in the in-

troduction, because

(G)  (G)  (G)  (G)

(4.9)

and (G) = (G), (G) = (G).

 
 
  
    

8

5. Alternative definitions of . Four additional functions 1, 2, 3, 4 are defined in [7], and they all turn out to be identical to . Thus, we can understand  in many different ways; this may help us compute it.
We will show, following [7], that if w is any fixed nonnegative real labeling of G, the inequalities

(G, w)  1(G, w)  2(G, w)  3(G, w)  4(G, w)  (G, w)

(5.1)

can be proved. Thus we will establish the theorem of [7], and all inequalities in our proofs will turn out to be equalities. We will introduce the alternative definitions k one at a time; any one of these definitions could have been taken as the starting point. First,

1(G, w) = min max wv/c(av) , over all orthogonal labelings a.
av

(5.2)

Here we regard wv/c(av) = 0 when wv = c(av) = 0; but the max is  if some wv > 0 has c(av) = 0.

Lemma. (G, w)  1(G, w).

Proof. Suppose x  TH(G) maximizes w · x, and suppose a is an orthogonal labeling that achieves the minimum value 1(G, w). Then

(G, w) = w · x = wvxv 
v

max wv v c(av)

v

c(av )xv



max
v

wv c(av )

=

1(G, w) .

Incidentally, the fact that all inequalities are exact will imply later that every nonzero weight vector w has an orthogonal labeling a such that

c(av )

=

wv (G, w)

for all v.

(5.3)

We will restate such consequences of (5.1) later, but it may be helpful to keep that future goal in mind.

6. Characterization via eigenvalues. The second variant of  is rather different; this is the only one Lova´sz chose to mention in [13].
We say that A is a feasible matrix for G and w if A is indexed by vertices and

A is real and symmetric;
Avv = wv for all v  V ; 
Auv = wuwv whenever u -- v in G

(6.1)

 
 
  
    

9

The other elements of A are unconstrained (i.e., they can be anything between - and +).
If A is any real, symmetric matrix, let (A) be its maximum eigenvalue. This is well defined because all eigenvalues of A are real. Suppose A has eigenvalues {1, . . . , n}; then A = Q diag(1, . . . , n)QT for some orthogonal Q, and Qx = x for all vectors x, so there is a nice way to characterize (A):

(A) = max{ xTAx | x = 1 } .

(6.2)

Notice that (A) might not be the largest eigenvalue in absolute value. We now let

2(G, w) = min{ (A) | A is a feasible matrix for G and w } .

(6.3)

Lemma. 1(G, w)  2(G, w).

Proof. Note first that the trace tr A = v wv  0 for any feasible matrix A. The trace is also well-known to be the sum of the eigenvalues; this fact is an easy consequence of the

identity

mn

tr XY =

xjkykj = tr Y X

(6.4)

j=1 k=1

valid for any matrices X and Y of respective sizes m×n and n ×m. In particular, 2(G, w) is always  0, and it is = 0 if and only if w = 0 when also 1(G, w) = 0 .

So suppose w = 0 and let A be a feasible matrix that attains the minimum value

(A) = 2(G, w) =  > 0. Let

B = I - A .

(6.5)

The eigenvalues of B are  minus the eigenvalues of A. For if A = Q diag(1, . . . , n)QT then B = Q diag( - 1, . . . ,  - n)QT . Thus they are all nonnegative; such a matrix B
is called positive semidefinite. By (0.5) we can write

B = XT X , i.e., Buv = xu · xv ,

(6.6)

when

X

=

 diag( 

-

1,

..

.

,

 

-

n

)QT .

Let

av

=

 ( wv

, x1v, . . . , xrv)T .

Then

c(av )

=

wv /

av

2 = wv/(wv + x12v + · · · + x2rv)

and x12v +· · · + xr2v = Bvv =  - wv, hence c(av) = wv/. Also if u -- v we have au · av = wuwv + xu · xv = wuwv + Buv = wuwv - Auv = 0. Therefore a is an

orthogonal labeling and maxv wv/c(av) =   1(G, w).

7. A complementary characterization. Still another variation is based on orthogonal labelings of the complementary graph G.

 
 
  
    

10

In this case we let b be an orthogonal labeling of G, normalized so that v bv 2 = 1, and we let

3(G, w) = max

 ( wu bu) · ( wv bv)

u,v

b is a normalized orthogonal labeling of G . (7.1)

A normalized orthogonal labeling b is equivalent to an n×n symmetric positive semidefinite matrix B, where Buv = bu · bv is zero when u -- v, and where tr B = 1.
Lemma. 2(G, w)  3(G, w).
This lemma is the "heart" of the proof that all s are equivalent, according to [7]. It relies on a fact about positive semidefinite matrices that we will prove in §9.

Fact. If A is a symmetric matrix such that A · B  0 for all symmetric positive semidefinite B with Buv = 0 for u -- v, then A = X + Y where X is symmetric positive semidefinite and Y is symmetric and Yvv = 0 for all v and Yuv = 0 for u -- v.

Here C·B stands for the dot product of matrices, i.e., the sum u,v CuvBuv, which can also be written tr CT B. The stated fact is a duality principle for quadratic programming.
 Assuming the Fact, let W be the matrix with Wuv = wuwv, and let 3 = 3(G, w).
By definition (7.1), if b is any nonzero orthogonal labeling of G (not necessarily normalized),

we have

 ( wu bu) · ( wv bv)  3

bv 2 .

u,v v

(7.2)

In matrix terms this says W · B  (3I) · B for all symmetric positive semidefinite B with Buv = 0 for u -- v. The Fact now tells us we can write

3I - W = X + Y

(7.3)

where X is symmetric positive semidefinite, Y is symmetric and diagonally zero, and Yuv = 0 when u -- v. Therefore the matrix A defined by

A = W + Y = 3I - X

is a feasible matrix for G, and (A)  3. This completes the proof that 2(G, w)  3(G, w), because (A) is an upper bound on 2 by definition of 2.

 
 
  
    

11

8. Elementary facts about cones. A cone in N -dimensional space is a set of vectors closed under addition and under multiplication by nonnegative scalars. (In particular, it is convex: If c and c are in cone C and 0 < t < 1 then tc and (1 - t)c are in C, hence tc + (1 - t)c  C.) A closed cone is a cone that is also closed under taking limits.

F1. If C is a closed convex set and x / C, there is a hyperplane separating x from C. This means there is a vector y and a number b such that c · y  b for all c  C but x · y > b.
Proof. Let d be the greatest lower bound of x - c 2 for all c  C. Then there's a sequence of vectors ck with x - ck 2 < d + 1/k; this infinite set of vectors contained in the sphere { y | x - y 2  d + 1 } must have a limit point c, and c  C since C is closed. Therefore x - c 2  d; in fact x - c 2 = d, since x - c  x - ck + ck - c and the right-hand side can be made arbitrarily close to d. Since x / C, we must have d > 0. Now let y = x - c and b = c · y. Clearly x · y = y · y + b > b. And if c is any element of C and is any small positive number, the vector c + (1 - )c is in C, hence
x - c + (1 - )c 2  d. But
x - c + (1 - )c 2 - d = x - c - (c - c) 2 - d = - 2 y · (c - c) + 2 c - c 2
can be nonnegative for all small only if y · (c - c)  0, i.e., c · y  b.
If A is any set of vectors, let A = { b | a · b  0 for all a  A }. The following facts are immediate:
F2. A  A implies A  A .
F3. A  A.
F4. A is a closed cone.
From F1 we also get a result which, in the special case that C = { Ax | x  0 } for a matrix A, is called Farkas's Lemma:
F5. If C is a closed cone, C = C.
Proof. Suppose x  C and x / C, and let (y, b) be a separating hyperplane as in F1. Then (y, 0) is also a separating hyperplane; for we have x · y > b  0 because 0  C, and we cannot have c · y > 0 for c  C because (c) · y would then be unbounded. But then c · (-y)  0 for all c  C, so -y  C; hence x · (-y)  0, a contradiction.
If A and B are sets of vectors, we define A + B = { a + b | a  A and b  B }.

 
 
  
    

12

F6. If C and C are closed cones, (C  C ) = C + C .

Proof. If A and B are arbitrary sets we have A + B  (A  B), for if x  A + B
and y  A  B then x · y = a · y + b · y  0. If A and B are arbitrary sets including 0 then (A + B)  A  B by F2, because A + B  A and A + B  B. Thus for arbitrary A and B we have (A + B)  A  B, hence

(A + B)  (A  B) .

Now let A and B be closed cones; apply F5 to get A + B  (A  B).
F7. If C and C are closed cones, (C + C ) = C  C . (I don't need this but I might as well state it.) Proof. F6 says (C  C ) = C + C ; apply F5 and  again.
F8. Let S be any set of indices and let AS = { a | as = 0 for all s  S }, and let S be all the indices not in S. Then
AS = AS .

Proof. If bs = 0 for all s / S and as = 0 for all s  S, obviously a · b = 0; so AS  AS . If bs = 0 for some s / S and at = 0 for all t = s and as = -bs then a  AS and a · b < 0; so b / AS , hence AS  AS.

9. Definite proof of a semidefinite fact. Now we are almost ready to prove the result needed in the proof of Lemma 7.

Let D be the set of real symmetric positive semidefinite matrices (called "spuds"

henceforth

for

brevity),

considered

as

vectors

in

N -dimensional

space

where

N

=

1 2

(n

+1)n.

Weuse the inner product A · B = tr AT B; this is justified if we divide off-diagonal elements

by 2. For example, if n = 3 the correspondence between 6-dimensional vectors and 3 × 3

symmetric matrices is



(a, b, c, d, e, f )





a d/2

e/ 2

 d/ 2
b f/ 2



e/2 f/ 2



c

preserving sum, scalar product, and dot product. Clearly D is a closed cone.
F9. D = D.
Proof. If A and B are spuds then A = XT X and B = Y T Y and A · B = tr XT X Y T Y = tr XY T Y XT = (Y XT ) · (Y XT )  0; hence D  D. (In fact, this argument shows that A · B = 0 iff AB = 0, for any spuds A and B, since A = AT .)

 
 
  
    

13

If A is symmetric but has a negative eigenvalue  we can write A = Q diag (, 2, . . . , n) QT
for some orthogonal matrix Q. Let B = Q diag (1, 0, . . . , 0)QT ; then B is a spud, and A · B = tr AT B = tr Q diag (, 0, . . . , 0) QT =  < 0 .
So A is not in D; this proves D  D.

Let E be the set of all real symmetric matrices such that Euv = 0 when u -- v in a graph G; let F be the set of all real symmetric matrices such that Fuv = 0 when u = v or u -- v. The Fact stated in Section 7 is now equivalent in our new notation to

Fact. (D  E)  D + F . But we know that (D  E) = D + E =D+F

by F6 by F9 and F8.

10. Another characterization. Remember , 1, 2, and 3? We are now going to introduce yet another function

4(G, w) = max

c(bv)wv b is an orthogonal labeling of G .

v

(10.1)

Lemma. 3(G, w)  4(G, w).

Proof. Suppose b is a normalized orthogonal labeling of G that achieves the maximum 3;

and suppose the vectors of this labeling have dimension d. Let

xk =

 bkv wv ,

for 1  k  d ;

(10.2)

v

then



3(G, w) =

wu bu · bv wv =

 wuwv bkubkv =

x2k .

u,v

u,v,k

k

Let

Q

be

an

orthogonal

d

×

d

matrix

whose

first

row

is

 (x1/ 3,

.

.

.

,

xd/3)T

,

and

let

bv = Qbv. Then bu · bv = bTu QT Qbv = buT bv = bu · bv, so b is a normalized orthogonal

labeling of G. Also

xk =

 bkv wv =

 Qkj bjv wv

v v,j
 = Qkjxj = 3 , k = 1;
j 0 , k > 1.

(10.3)

 
 
  
    

14

Hence by Cauchy's inequality

3(G, w) =

2 b1v wv 
v

bv 2
v

v bv =0

b12v bv 2

wv

= c(bv)wv  4(G, w)
v

(10.4)

because v bv 2 = v bv 2 = 1. 11. The final link. Now we can close the loop:

Lemma. 4(G, w)  (G, w).

Proof. If b is an orthogonal labeling of G that achieves the maximum 4, we will show that the real labeling x defined by xv = c(bv) is in TH(G). Therefore 4(G, w) = w · x is  (G, w).

We will prove that if a is any orthogonal labeling of G, and if b is any orthogonal

labeling of G, then

c(av)c(bv)  1 .
v

(11.1)

Suppose a is a labeling of dimension d and b is of dimension d . Then consider the d × d

matrices

Av = avbvT

(11.2)

as elements of a vector space of dimension dd . If u = v we have

Au · Av = tr AuT Av = tr buauT avbTv = tr auT avbvT bu = 0 , because auT av = 0 when u -- v and bTv bu = 0 when u -- v. If u = v we have
Av · Av = av 2 bv 2 .

(11.3)

The upper left corner element of Av is a1vb1v, hence the "cost" of Av is (a1vb1v)2/ Av 2 = c(av)c(bv). This, with (11.3), proves (11.1). (See the proof of Lemma 1.)
12. The main theorem. Lemmas 5, 6, 7, 10, and 11 establish the five inequalities claimed in (5.1); hence all five variants of  are the same function of G and w. Moreover, all the inequalities in those five proofs are equalities with the exception of (11.1) . We can summarize the results as follows.

 
 
  
    

15

Theorem. For all graphs G and any nonnegative real labeling w of G we have

(G, w) = 1(G, w) = 2(G, w) = 3(G, w) = 4(G, w) .

(12.1)

Moreover, if w = 0, there exist orthogonal labelings a and b of G and G, respectively, such that

c(av) = wv/ ; c(av)c(bv) = 1 .

(12.2) (12.3)

Proof. Relation (12.1) is, of course, (5.1); and (12.2) is (5.3). The desired labeling b is what we called b in the proof of Lemma 10. The fact that the application of Cauchy's inequality in (10.4) is actually an equality,

2  = b1v wv =

bv 2

vv

v bv =0

b12v bv 2

wv

,

(12.4)

tells us that the vectors whose dot product has been squared are proportional: There is a

number t such that



bv

= t b1v wv , bv

if bv = 0 ;

 bv = 0 iff b1v wv = 0 .

(12.5)

The labeling in the proof of Lemma 10 also satisfies

 hence t = ±1/  .
We can now show

bv 2 = 1 ;
v

(12.6)

c(bv) = bv 2 /wv , when wv = 0 .

(12.7)

This relation is obvious if bv = 0; otherwise we have

c(bv) =

b21v bv 2

=

bv 2 t2wv

by (12.5). Summing the product of (12.2) and (12.7) over v gives (12.3).

13. The main converse. The nice thing about Theorem 12 is that conditions (12.2) and (12.3) also provide a certificate that a given value  is the minimum or maximum stated in the definitions of , 1, 2, 3, and 4.

 
 
  
    

16

Theorem. If a is an orthogonal labeling of G and b is an orthogonal labeling of G such that relations (12.2) and (12.3) hold for some  and w, then  is the value of (G, w).

Proof. Plugging (12.2) into (12.3) gives wvc(bv) = , hence   4(G, w) by definition

of 4. Also,

max wv =  , v c(av)

hence   1(G, w) by definition of 1.

14. Another look at TH. We originally defined (G, w) in (4.1) in terms of the convex set TH defined in section 2:

(G, w) = max{ w · x | x  TH(G) } , when w  0 .

(14.1)

We can also go the other way, defining TH in terms of :

TH(G) = { x  0 | w · x  (G, w) for all w  0 } .

(14.2)

Every x  TH(G) belongs to the right-hand set, by (14.1). Conversely, if x belongs to the right-hand set and if a is any orthogonal labeling of G, not entirely zero, let wv = c(av), so that w · x = v c(av)xv. Then

1(G, w)



max
v

wv/c(av)

=1

by definition (5.2), so we know by Lemma 5 that belongs to TH(G).
Theorem 12 tells us even more.

c(av)xv  1. This proves that x

Lemma. TH(G) = { x  0 | (G, x)  1 }.

Proof. By definition (10.1),

4(G, w) = max

c(av)wv | a is an orthogonal labeling of G .

v

(14.3)

Thus x  TH(G) iff 4(G, x)  1, when x  0.

Theorem. TH(G) = { x | xv = c(bv) for some orthogonal labeling b of G }.

Proof. We already proved in (11.1) that the right side is contained in the left.
Let x  TH(G) and let  = (G, x). By the lemma,   1. Therefore, by (12.2), there is an orthogonal labeling b of G such that c(bv) = xv/  xv for all v. It is easy to reduce

 
 
  
    

17

the cost of any vector in an orthogonal labeling to any desired value, simply by increasing the dimension and giving this vector an appropriate nonzero value in the new component while all other vectors remain zero there. The dot products are unchanged, so the new labeling is still orthogonal. Repeating this construction for each v produces a labeling with c(bv) = xv.
This theorem makes the definition of 4 in (10.1) identical to the definition of  in (4.1).
15. Zero weights. Our next result shows that when a weight is zero, the corresponding vertex might as well be absent from the graph.
Lemma. Let U be a subset of the vertices V of a graph G, and let G = G|U be the graph induced by U (i.e., the graph on vertices U with u -- v in G iff u -- v in G). Then if w and w are nonnegative labelings of G and G such that

wv = wv when v  U , wv = 0 when v / U ,

(15.1)

we have

(G, w) = (G , w ) .

(15.2)

Proof. Let a and b satisfy (12.2) and (12.3) for G and w. Then c(av) = 0 for v / U, so a|U and b|U satisfy (12.2) and (12.3) for G and w . (Here a|U means the vectors av for v  U.) By Theorem 13, they determine the same .

16. Nonzero weights. We can also get some insight into the significance of nonzero weights by "splitting" vertices instead of removing them.

Lemma. Let v be a vertex of G and let G be a graph obtained from G by adding a new

vertex v and new edges

u -- v iff u -- v .

(16.1)

Let w and w be nonnegative labelings of G and G such that

Then

wu = wu , when u = v ; wv = wv + wv .
(G, w) = (G , w ) .

(16.2) (16.3)
(16.4)

Proof. By Theorem 12 there are labelings a and b of G and G satisfying (12.2) and (12.3). We can modify them to obtain labelings a and b of G and G as follows, with the

 
 
  
    

vectors of a having one more component than the vectors of a:

au =

au 0

,

bu = bu ,

when u = v ;

18 (16.5)

av =

av 

,

av =

av -

,

=

wv wv

av ,

=

wv wv

av ;

(16.6)

bv = bv = bv .

(16.7)

(We can assume by Lemma 15 that wv and wv are nonzero.) All orthogonality relations are preserved; and since v -- v in G , we also need to verify

av · av = av 2 -  = 0 .

We have

c(av) =

c(av) av 2 av 2 + 2

=

c(av ) 1 + wv /wv

=

c(av)wv wv

=

wv 

,

and similarly c(av ) = wv /; thus (12.2) and (12.3) are satisfied by a and b for G and w .

Notice that if all the weights are integers we can apply this lemma repeatedly to

establish that

(G, w) = (G ) ,

(16.8)

where G is obtained from G by replacing each vertex v by a cluster of wv mutually nonadjacent vertices that are adjacent to each of v's neighbors. Recall that (G ) = (G , 1l), by definition (4.2). In particular, if G is the trivial graph K2 and if we assign the weights M and N , we have  K2, (M, N )T = (KM,N ) where KM,N denotes the complete bipartite graph on M and N vertices.
A similar operation called "duplicating" a vertex has a similarly simple effect:

Corollary. Let G be constructed from G as in the lemma but with an additional edge between v and v . Then (G, w) = (G , w ) if w is defined by (16.2) and

wv = max(wv, wv ) .

(16.9)

Proof. We may assume that wv = wv and wv = 0. Most of the construction (16.5)­ (16.7) can be used again, but we set  = 0 and bv = 0 and

=

wv - wv wv

av .

 
 
  
    

19

Once again the necessary and sufficient conditions are readily verified.

If the corollary is applied repeatedly, it tells us that (G) is unchanged when we replace the vertices of G by cliques.

17. Simple examples. We observed in section 4 that (G, w) always is at least

min = (Kn, w) = max{w1, . . . , wn}

(17.1)

and at most

max = (Kn, w) = w1 + · · · + wn .

(17.2)

What are the corresponding orthogonal labelings?

For Kn the vectors of a have no orthogonal constraints, while the vectors of b must

satisfy bu · bv = 0 for all u = v. We can let a be the two-dimensional labeling



av =

 wv  - wv

,

 = min

(17.3)

so that av 2 =  and c(av) = wv/ as desired; and b can be one-dimensional,

bv =

(1) , if v = vmax (0) , if v = vmax

(17.4)

where vmax is any particular vertex that maximizes wv. Clearly

c(av)c(bv) =

c(avmax ) 

=

wvmax 

= 1.

v

For Kn the vectors of a must be mutually orthogonal while the vectors of b are

unrestricted. We can let the vectors a be the columns of any orthogonal matrix whose top

row contains the element

wv/ ,  = max

(17.5)

in column v. Then av 2 = 1 and c(av) = wv/. Once again a one-dimensional labeling suffices for b; we can let bv = (1) for all v.

18. The direct sum of graphs. Let G = G + G be the graph on vertices

V =V V

(18.1)

where the vertex sets V and V of G and G are disjoint, and where u -- v in G if and only if u, v  V and u -- v in G , or u, v  V and u -- v in G . In this case

(G, w) = (G , w ) + (G , w ) ,

(18.2)

 
 
  
    

20

where w and w are the sublabelings of w on vertices of V and V . We can prove (18.2) by constructing orthogonal labelings (a, b) satisfying (12.2) and (12.3).
Suppose a is an orthogonal labeling of G such that

av 2 = 

a1v = wv ,

(18.3)

and suppose a is a similar orthogonal labeling of G . If a has dimension d and a has dimension d , we construct a new labeling a of dimension d = d + d as follows, where j runs from 2 to d and j runs from 2 to d :

if v  V
a1v = wv = a1v , aj v = / aj v , a(d +1)v =  wv/ , a(d +j )v = 0 ,
Now if u, v  V we have

if v  V
a1v = wv = a1v , aj v = 0 , a(d +1)v = -  wv / , a(d +j )v = / aj v .

(18.4)

au · av =

 wuwv + 

au · av -



wuwv

+ 

wuwv

=

 

au

· av ;

(18.5)

thus au · av = 0 when au · av = 0, and

av

2=  

av 2 =  .

(18.6)

It follows that c(av) = wv/ as desired. A similar derivation holds for u, v  V . And if u  V , v  V , then

au · av = wuwv - wuwv = 0 .

(18.7)

The orthogonal labeling b of G + G is much simpler; we just let bv = bv for v  V and bv = bv for v  V . Then (12.2) and (12.3) are clearly preserved. This proves (18.2).
There is a close relation between the construction (18.4) and the construction (16.6), suggesting that we might be able to define another operation on graphs that generalizes both the splitting and direct sum operation.

19. The direct cosum of graphs. If G and G are graphs on disjoint vertex sets V and V as in section 18, we can also define

G = G + G  G = G + G .

(19.1)

 
 
  
    

21

This means u -- v in G if and only if either u -- v in G or u -- v in G or u and v belong to opposite vertex sets. In this case

(G, w) = max (G , w ), (G , w )

(19.2)

and again there is an easy way to construct (a, b) from (a , b ) and (a , b ) to prove (19.2). Assume "without lots of generality" that

(G , w )  (G , w )

(19.3)

and suppose again that we have (18.3) and its counterpart for a . Then we can define

if v  V 
a1v = wv = a1v , aj v = aj v , a(d +1)v = 0 ,
a(d +j )v = 0 ,

if v  V 
a1v = wv = a1v , aj v = 0 ,
a(d +1)v = ( -  )wv / , a(d +j )v =  / aj v .

(19.4)

Now av is essentially unchanged when v  V ; and when u, v  V we have

au · av =

wuwv +

 -1 

 wuwv + 

au · av -

wu wv

 =


au · av .

(19.5)

Again we retain the necessary orthogonality, and we have c(av) = wv/ for all v. For the b's, we let bv = bv when v  V and bv = 0 when v  V .

20. A direct product of graphs. Now let G and G be graphs on vertices V and V and let V be the n = n n ordered pairs

V =V ×V .

(20.1)

We define the `strong product', on V by the rule

G=G  G

(20.2)

(u , u ) -- (v , v ) or (u , u ) = (v , v ) in G  (u -- v or u = v in G ) and (u -- v or u = v in G ) . (20.3)

In this case we have, for example, Kn  Kn = Kn n and Kn  Kn = Kn n . More generally, if G is regular of degree r and G is regular of degree r , then G  G is regular of degree (r + 1)(r + 1) - 1 = r r + r + r .

 
 
  
    

22

I don't know the value of (G, w) for arbitrary w, but I do know it in the special case

w(v ,v ) = wv wv .

(20.4)

Lemma. If G and w are given by (20.2) and (20.4), then

(G, w) = (G , w ) (G , w ) .

(20.5)

Proof. [12] Given orthogonal labelings (a , b ) and (a , b ) of G and G , we let a be the Hadamard product

a(j ,j )(v ,v ) = aj v aj v ,

1j d , 1j d ,

(20.6)

where d and d are the respective dimensions of the vectors in a and a . Then

a(u ,u ) · a(v ,v ) =

aj u aj u aj v aj v

j ,j

= (au · av )(au · av ) .

(20.7)

Thus a(v ,v ) 2 = av 2 av 2 and

c(a(v v )) = c(av )c(av ) .

(20.8)

The same construction is used for b in terms of b and b . All necessary orthogonalities are preserved, because we have

(u , u ) -- (v , v ) and (u , u ) = (v , v ) in G

 (u -- v and u = v in G ) or (u -- v and u = v in G )  b(u ,u ) · b(v ,v ) = 0 ; (u , u ) -- (v , v ) and (u , u ) = (v , v ) in G

 (u -- v and u = v in G ) or (u -- v and u = v in G )  a(u ,u ) · a(v ,v ) = 0 .

(In fact one of these relations is , but we need only  to make (20.7) zero when it needs to be zero.) Therefore a and b are orthogonal labelings of G that satisfy (12.2) and (12.3).

21. A direct coproduct of graphs. Guess what? We also define G = G  G  G = G  G .

(21.1)

 
 
  
    

23

This graph tends to be "richer" than G  G ; we have

(u , u ) -- (v , v ) and (u , u ) = (v , v ) in G  (u -- v and u = v in G ) or (u -- v and u = v in G ) . (21.2)

Now, for instance, if G is regular of degree r and G is regular of degree r , then

G ¯ G is regular of degree n n - (n - r )(n - r ) = r n + r n - r r .
(This is always  r r + r + r , because r (n - 1 - r ) + r (n - 1 - r )  0.) Indeed, G  G  G  G for all graphs G and G . The Hadamard product construction used in section 20 can be applied word-for-word to prove that

(G, w) = (G , w ) (G , w )

(21.3)

when G satisfies (21.1) and w has the special factored form (20.4). It follows that many graphs have identical 's:

Corollary. If G  G  G  G  G and w satisfies (20.4), then (21.3) holds.

Proof. This is just the monotonicity relation (4.3). The reason it works is that we have a(u ,v ) · a(u ,v ) = b(u ,v ) · b(u ,v ) = 0 for all pairs of vertices (u , u ) and (v , v ) whose adjacency differs in G  G and G  G .

Some small examples will help clarify the results of the past few sections. Let P3 be the path of length 2 on 3 vertices, ·--·--·, and consider the four graphs we get by taking its strong product and coproduct with K2 and K2:

K2  P3 =

 = max(u + w, v) + max(x + z, y)

Since P3 may be regarded as K2 + K1 and K2 is K1 + K2, this graph is (K1 + K1) + K1 + (K1 + K1) + K1
and the formula for  follows from (18.2) and (19.2).

K2  P3 =

 = max(u + w + x + z, v + y)

 
 
  
    

24

(This graph is K2 + K4; we could also obtain it by applying Lemma 16 three times to P3.)

K2  P3 =

 = max max(u, x) + max(w, z), max(v, y)

K2  P3 =

 = max max(u + w, x + z), max(v, y)

If the weights satisfy u = x, v = y, w = z for some parameter , the first two formulas for  both reduce to (1 + ) max(u + w, v), in agreement with (20.5) and (21.3). Similarly, the last two formulas for  reduce to max(1, ) max(u + w, v) in such a case.

22. Odd cycles. Now let G = Cn be the graph with vertices 0, 1, . . . , n - 1 and

u -- v  u - v  ±1 (mod n) ,

(22.1)

where n is an odd number. A general formula for (Cn, w) appears to be very difficult; but we can compute (Cn) without too much labor when all weights are 1, because of the cyclic symmetry.

It is easier to construct orthogonal labelings of Cn than of Cn, so we begin with that.

Given a vertex v, 0  v < n, let bv be the three-dimensional vector

 
bv =  cos v  ,

(22.2)

sin v

where  and  remain to be determined. We have

bu · bv = 2 + cos u cos v + sin u sin v = 2 + cos(u - v) .

(22.3)

Therefore we can make bu · bv = 0 when u  v ± 1 by setting

2 = - cos  ,

 = (n - 1) . n

(22.4)

This choice of  makes n a multiple of 2, because n is odd. We have found an orthogonal labeling b of Cn such that

2 cos /n c(bv) = 1 + 2 = 1 + cos /n .

(22.5)

 
 
  
    

25

Turning now to orthogonal labelings of Cn, we can use (2n - 1)-dimensional vectors

 0 

av

=



1 cos v 1 sin v 2 cos 2v 2 sin 2v
... n-1 cos(n - 1)v



,

(22.6)

n-1 sin(n - 1)v

with  = (n - 1)/n as before. As in (22.3), we find

n-1
au · av = k2 cos k(u - v) ;
k=0

(22.7)

so the result depends only on (u - v) mod n. Let  = ei. We can find values of k such that au · av = x(u-v)modn by solving the equations

n-1

xj =

2kjk .

k=0

(22.8)

Now  is a primitive nth root of unity; i.e., k = 1 iff k is a multiple of n. So (22.9) is just a finite Fourier transform, and we can easily invert it: For 0  m < n we have

n-1

n-1 n-1

-mj xj = 2k j(k-m) = n 2m .

j=0

k=0 j=0

In our case we want a solution with x2 = x3 = · · · = xn-2 = 0, and we can set x0 = 1, xn-1 = x1 = x, so we find

n 2k = x0 + -kx1 + kxn-1 = 1 + 2x cos k .

We must choose x so that these values are nonnegative; this means 2x  -1/ cos , since cos k is most negative when k = 1. Setting x to this maximum value yields

c(av )

=

02

=

1 n

1

-

1 cos



1 + cos /n = n cos /n .

(22.9)

So (22.5) and (22.9) give

c(av)c(bv) = 1/n = 1 .
vv

(22.10)

 
 
  
    

26

This is (12.3), hence from (12.2) we know that (Cn) = . We have proved, in fact, that

n cos /n (Cn, 1l) = 1 + cos /n ;
1 + cos /n (Cn, 1l) = cos /n .

(22.11) (22.12)

When n = 3, Cn = Kn and these values agree with (K3) = 1, (K3) = 3; when n = 5, C5 is isomorphic to C5 so (C5) = 5; when n is large,

(Cn)

=

n 2

-

2 8n

+ O(n-3) ;

(C n )

=

2

+

2 2n2

+

O(n-4) .

(22.13)

Instead of an explicit construction of vectors av as in (22.6), we could also find (Cn) by using the matrix characterization 2 of section 6. When all weights are 1, a feasible A has 1 everywhere except on the superdiagonal, the subdiagonal, and the corners. This suggests that we look at "circulant" matrices; for example, when n = 5,

1

A

=



1

+ 1 1

x

1+x

1+x 1
1+x 1 1

1 1+x
1 1+x
1

1 1 1+x 1 1+x

1+x

1

1 1 +

x



=

J

+

xP

+

xP -1

,

1

(22.14)

where J is all 1's and P is the permutation matrix taking j into (j + 1) mod n. It is well

known and not difficult to prove that the eigenvalues of the circulant matrix a0I + a1P +

· · · + an-1P n-1 are

kjaj , 0  k < n ,

(22.15)

0j<n

where  = e2i/n. Indeed, it suffices to find the eigenvalues of P itself. This  is a different primitive root of unity from the  we used in (22.8). Hence the eigenvalues of (22.14) are

n + 2x , x( + -1) , x(2 + -2) , . . . , x(n-1 + 1-n) .

(22.16)

We minimize the maximum of these values if we choose x so that

n + 2x = -2x cos /n ;

then

(A)

=

-2x cos /n

=

n cos /n 1 + cos /n

(22.17)

 
 
  
    

27

is the value of (G).
If n is even, the graph Cn is bipartite. We will prove later that bipartite graphs are perfect, hence (Cn) = n/2 and (Cn) = 2 in the even case.
23. Comments on the previous example. The cycles Cn provide us with infinitely many graphs G for which (G)( G ) = n, and it is natural to wonder whether this is true in general. Of course it is not: If G = Km + Kn-m then G = Km + Kn-m, hence we know from Lemmas 18 and 19 that

(G) = m + 1 , ( G ) = max(1, n - m) .

(23.1)

In particular, we can make (G)( G ) as high as n2/4 + n/2 when m = n/2 . We can, however, prove without difficulty that (G)( G )  n:

Lemma.

(G, w)( G, w )  w · w .

(23.2)

Proof. By Theorem 12 there is an orthogonal labeling a of G and an orthogonal labeling b

of G such that

c(av) = wv/(G, w) , c(bv) = wv/( G, w ) .

(23.3)

By (11.1) we have QED.

c(av)c(bv)  1 .
v

(23.4)

24. Regular graphs. When each vertex of G has exactly r neighbors, Lova´sz and Hoffman observed that the construction in (22.14) can be generalized. Let B be the adjacency matrix of G, i.e., the n × n matrix with

1 , if u -- v; Buv = 0 , if u = v or u -- v.

(24.1)

Lemma. If G is a regular graph,

(G)



n(-B) (B) + (-B)

.

(24.2)

Proof. Let A be a matrix analogous to (22.14),

A = J + xB .

(24.3)

 
 
  
    

28

Since G is regular, the all-1's vector 1l is an eigenvector of B, and the other eigenvectors are orthogonal to 1l so they are eigenvectors also of A. Thus if the eigenvalues of B are

r = (B) = 1  2  · · ·  n = -(-B) ,

(24.4)

the eigenvalues of A are

n + rx , x2 , . . . , xn .

(24.5)

(The Perron-Frobenius theorem tells us that 1 = r.) We have 1 + · · · + n = tr(B) = 0, so n < 0, and we minimize the maximum of (24.5) by choosing n + rx = xn; thus

(A)

=

xn

=

-nn r - n

,

which is the right-hand side of (24.2). By (6.3) and Theorem 12 this is an upper bound on .

Incidentally, we need to be a little careful in (24.2): The denominator can be zero, but only when G = Kn.

25. Automorphisms. An automorphism of a graph G is a permutation p of the vertices

such that

p(u) -- p(v) iff u -- v .

(25.1)

Such permutations are closed under multiplication, so they form a group.

We call G vertex-symmetric if its automorphism group is vertex-transitive, i.e., if given u and v there is an automorphism p such that p(u) = v. We call G edge-symmetric if its automorphism group is edge-transitive, i.e., if given u -- v and u -- v there is an automorphism p such that p(u) = u and p(v) = v or p(u) = v and p(v) = u .

Any vertex-symmetric graph is regular, but edge-symmetric graphs need not be reg-

ular. For example,

s

tsss¨r¨tss¨rrsttsss

is edge-symmetric, not vertex-symmetric; is vertex-symmetric, not edge-symmetric.

s ( is a maximal clique)
s

The graph Cn is not edge-symmetric for n > 7 because it has more edges than automorphisms. Also, C7 has no automorphism that takes 0 -- 2 into 0 -- 3.

Lemma. If G is edge-symmetric and regular, equality holds in Lemma 24.

Proof. Say that A is an optimum feasible matrix for G if it is a feasible matrix with

(A) = (G)

 
 
  
    

29

as in section 6. We can prove that optimum feasible matrices form a convex set, as follows. First, tA + (1 - t)B is clearly feasible when A and B are feasible. Second,

 tA + (1 - t)B  t(A) + (1 - t)(B) , 0  t  1

(25.2)

holds for all symmetric matrices A and B, by (6.2); this follows because there is a unit vector x such that  tA + (1 - t)B = xT tA + (1 - t)B x = txTAx + (1 - t)xT Bx  t(A) + (1 - t)(B). Third, if A and B are optimum feasible matrices, the right side of (25.2) is (G) while the left side is  (G) by (6.3). Therefore equality holds.
If A is an optimum feasible matrix for G, so is p(A), the matrix obtained by permuting rows and columns by an automorphism p. (I mean p(A)uv = Ap(u)p(v).) Therefore the average, A¯, over all p is also an optimal feasible matrix. Since p(A¯) = A¯ for all automorphisms p, and since G is edge-symmetric, A¯ has the form J + xB where B is the adjacency matrix of G. The bound in Lemma 24 is therefore tight.
(Note: If p is a permutation, let Puv = 1 if u = p(v), otherwise 0. Then (P TAP )uv = PuTj AjkPkv = Ap(u)p(v), so p(A) = P TAP .)
The argument in this proof shows that the set of all optimum feasible matrices A for G has a common eigenvector x such that Ax = (G)x. The argument also shows that, if G has an edge automorphism taking u -- v into u -- v , we can assume without loss of generality that Auv = Au v in an optimum feasible matrix. This simplifies the computation of (A), and justifies our restriction to circulant matrices (22.14) in the case of cyclic graphs.

Theorem. If G is vertex-symmetric, (G)( G ) = n.

Proof. Say that b is an optimum normalized labeling of G if it is a normalized orthogonal labeling of G achieving equality in (7.1) when all weights are 1:

 = bu · bv ,
u,v

bv 2 = 1 ,
v

bu · bv = 0 when u -- v .

(25.3)

Let B be the corresponding spud; i.e., Buv = bu · bv and  = u,v Buv. Then p(B) is also equivalent to an optimum normalized labeling, whenever p is an automorphism; and such
matrices B form a convex set, so we can assume as in the lemma that B = p(B) for all
automorphisms p. Since G is vertex-symmetric, we must have Bvv = 1/n for all vertices v. Thus there is an optimum normalized labeling b with bv 2 = 1/n, and the arguments of Lemma 10 and Theorem 12 establish the existence of such a b with

c(bv) = (G)/n

(25.4)

 
 
  
    

30

for all v. But b is an orthogonal labeling of G, hence

1( G, 1l)  n/(G)
by the definition (5.2) of 1. Thus ( G )(G)  n; we have already proved the reverse inequality in Lemma 23.

26. Consequence for eigenvalues. A curious corollary of the results just proved is the following fact about eigenvalues.

Corollary. If the graphs G and G are vertex-symmetric and edge-symmetric, and if the adjacency matrix of G has eigenvalues

1  2  · · ·  n ,

then

(1 - n)(n - 1 + 2) = -n(2 + 1)n .

Proof. By Lemma 25 and Theorem 25,

n(-B)

n(-B )

(B) + (-B)

= n, ( B ) + (-B )

(26.1) (26.2) (26.3)

where B and B are the adjacency matrices of G and G, and where we interpret 0/0 as 1.

We have

B =J -I-B.

(26.4)

If the eigenvalues of B are given by (26.1), the eigenvalues of B are therefore

n - 1 - 1  -1 - n  · · ·  -1 - 2 .

(26.5)

(We use the fact that G is regular of degree 1.) Formula (26.2) follows if we plug the values (B) = 1, (-B) = -n, ( B ) = n - 1 - 1, (-B ) = 1 + 2 into (26.3).

27. Further examples of symmetric graphs. Consider the graph P (m, t, q) whose

vertices are all

m t

subsets of cardinality t of some given set S of cardinality m, where

u -- v  |u  v| = q .

(27.1)

We want 0  q < t and m  2t - q, so that the graph isn't empty. In fact, we can assume that m  2t, because P (m, r, q) is isomorphic to P (m, m - t, m - 2t + q) if we map each subset u into the set difference S \ u:

|(S \ u)  (S \ v)| = |S| - |u  v| = |S| - |u| - |v| + |u  v| .

(27.2)

 
 
  
    

31

The letter P stands for Petersen, because P (5, 2, 0) is the well known "Petersen graph" on 10 vertices,

12t 34 t&t t&t&t2t5& tt2 &4¢t&¢3&¢5¢¢ftffffdt1d4 tt13t45
15 23

(27.3)

These graphs are clearly vertex-symmetric and edge-symmetric, because every permutation

of S induces an automorphism. For example, to find an automorphism that maps u -- v

into u -- v , let u = (u  v)  u¯, v = (u  v)  v¯, u = (u  v )  u¯ , v = (u  v )  v¯ , and

apply any permutation that takes the q elements of u  v into the q elements of u  v , the

t - q elements of u¯ into the t - q elements of u , and the t - q elements of v¯ into v¯ . Thus

we can determine  P (m, t, q) from the eigenvalues of the adjacency matrix. Lov´asz [12]

discusses the case q = 0, and his discussion readily generalizes to other values of q. It

turns out that  P (m, t, 0)

=

m-1 t-1

.

This

is

also

the

value

of



P (m, t, 0)

,

because

the

m-1 t-1

vertices containing any given point form a stable set.

The special case t = 2, q = 0 is especially interesting because those graphs also satisfy

the condition of Corollary 26. We have

m n= ,
2

m-2 1 = 2 ,

2 = 1 ,

n = 3 - m ,

(27.4)

and (26.2) does indeed hold (but not "trivially"). It is possible to cover P (m, 2, 0) with

disjoint maximum cliques; hence  P (m, 2, 0)

=

m 2

m 2

=

2

m 2

- 1.

In particular,

when G is the Petersen graph we have (G) = (G) = 4, (G) = 5; also (G) = 2,

(G)

=

(G)

=

5 2

.

28. A bound on . The paper [12] contains one more result about  that is not in [7], so we will wrap up our discussion of [12] by describing [12, Theorem 11].

Theorem. If G has an orthogonal labeling of dimension d with no zero vectors, we have (G)  d.

Proof. Given a non-zero orthogonal labeling a of dimension d, we can assume that av 2 = 1 for all v. (The hypothesis about zeros is important, since there is trivially an orthogonal labeling of any desired dimension if we allow zeros. The labeling needn't be

 
 
  
    

32

optimum.) Then we construct an orthogonal labeling a of dimension d2, with c(av ) = 1/d for all v, as follows:
Let av have d2 components where the (j, k) component is ajvakv. Then

au · av = (au · av)2

(28.1)

as in (20.7). Let Q be any orthogonal matrix with d2 rows and columns, such that the (j, k) entry in row (1, 1) is 1/ d for j = k, 0 otherwise. Then we define

av = Qav .

(28.2)

Once again au·av = (au·av)2, so a is an orthogonal labeling. We also have first component

a(1,1)v =
j,k

[j= k] d

a(j,k)v

=

k

a2kv = 1 ; dd

(28.3)

hence c(av ) = 1/d. This proves (G)  d, by definition of 1.

This theorem improves the obvious lower bound (G) on the dimension of an optimum labeling.

29. Compatible matrices. There's another way to formulate the theory we've been developing, by looking at things from a somewhat higher level, following ideas developed by Lova´sz and Schrijver [15] a few years after the book [7] was written. Let us say that the matrix A is -compatible with G and w if A is an (n + 1) × (n + 1) spud indexed by the vertices of G and by a special value 0, having the following properties:
· A00 = ; · Avv = A0v = wv for all vertices v; · Auv = 0 whenever u -- v in G.

Lemma. There exists an orthogonal labeling a for G with costs c(av) = wv/ if and only if there exists a matrix A that is -compatible with G and w.

Proof. Given such an orthogonal labeling, we can normalize each vector so that av 2 = wv. Then when wv = 0 we have

wv 

= c(av) =

a12v , wv

 so we can assume that a1v = wv/  for all v. Add a new vector a0, having a10 = 

and aj0 = 0 for all j > 1. Then the matrix A with Auv = au · av is easily seen to be

-compatible with G and w.

 
 
  
    

33

Conversely, if such a matrix A exists, there are n + 1 vectors a0, . . . , an such that Auv= au · av; in particular, a0 2 = . Let Q be an orthogonal matrix with first row aT0/ , and define av = Qav for all v. Then a10 =  and aj0 = 0 for all j > 1. Also au · av = au · av = Auv for all u and v. Hence a1v = a0 · av = A0v = wv and av 2 = av · av = Avv = wv, for all v  G, proving that c(av) = wv/. Finally a is an orthogonal labeling, since au · av = Auv = 0 whenever u -- v.
Corollary. x  TH(G) iff there exists a matrix 1-compatible with G and x.

Proof. Set  = 1 in the lemma and apply Theorem 14.

The corollary and definition (4.1) tell us that (G, w) is max(w1x1 + · · · + wnxn) over all x that appear in matrices that are 1-compatible for G and x. Theorem 12 tells us that (G, w) is also the minimum  such that there exists a -compatible matrix for G and w. The "certificate" property of Theorem 13 has an even stronger formulation in matrix terms:

Theorem. Given a nonnegative weight vector w = (w1, . . . , wn)T , let A be -compatible with G and w, where  is as small as possible, and let B be 1-compatible with G and x, where w1x1 + · · · + wnxn is as large as possible. Then

ADB = 0 ,

(29.1)

where D is the diagonal matrix with D00 = -1 and Dvv = +1 for all v = 0. Conversely, if A is -compatible with G and w and if B is 1-compatible with G and x, then (29.1) implies that  = w1x1 + · · · + wnxn = (G, w).
Proof. Assume that A is -compatible with G and w, and B is 1-compatible with G and x. Let B = DBD, so that B is a spud with B00 = 1, B0v = Bv0 = -xv, and Buv = Buv when u and v are nonzero. Then the dot product A · B is
 - w1x1 - · · · - wnxn - w1x1 - · · · - wnxn + w1x1 + · · · + wnxn =  - (w1x1 + · · · + wnxn) ,

because AuvBuv = 0 when u and v are vertices of G. We showed in the proof of F9 in section 9 that the dot product of spuds is nonnegative; in fact, that proof implies that the dot product is zero if and only if the ordinary matrix product is zero. So  = w1x1 + · · · + wnxn = (G, w) iff AB = 0, and this is equivalent to (29.1).
Equation (29.1) gives us further information about the orthogonal labelings a and b that appear in Theorems 12 and 13. Normalize those labelings so that a 2 = wv and

 
 
  
    

34

b 2 = xv. Then we have

wt (bt · bv) =  xv ,
tG

(29.2)

xt (at · av) = wv ,
tG

(29.3)

(at · au)(bt · bv) = wuxv ,
tG

(29.4)

for all vertices u and v of G. (Indeed, (29.2) and (29.4) are respectively equivalent to (AB )0v = 0 and (AB )vv = 0; (29.3) is equivalent to (B A)0v = 0.) Notice that if A and B are the n × n spuds; obtained by deleting row 0 and column 0 from optimum matrices A and B, these equations are equivalent to

Bw = x , Ax = w , AB = wxT .

(29.5)

Equation (29.1) is equivalent to (29.5) together with the condition w1x1 + · · · + wnxn = .
Since AB = 0 iff B A = 0 when A and B are symmetric matrices, the optimum matrices A and B commute. This implies that they have common eigenvectors: There is an orthogonal matrix Q such that

A = Q diag (0, . . . , n) QT ,

B = Q diag (µ0, . . . , µn) QT .

(29.6)

Moreover, the product is zero, so

0µ0 = · · · = nµn = 0 .

(29.7)

The number of zero eigenvalues k is n + 1 - d, where d is the smallest dimension for which there is an orthogonal labeling a with Auv = au ·av. A similar statement holds for B , since the eigenvalues of B and B are the same; y is an eigenvector for B iff Dy is an eigenvector

for B . In the case G = Cn, studied in section 22, we constructed an orthogonal labeling (22.3) with only three dimensions, so all but 3 of the eigenvalues µk were zero. When all the weights wv are nonzero and (G) is large, Theorem 28 implies that a large number of k must be nonzero, hence a large number of µk must be zero.

The "optimum feasible matrices" A studied in section 6 are related to the matrices A

of (29.5) by the formula

A = wwT





-  diag (w1, . . . , wn) - diag ( w1, . . . , wn ) A diag ( w1, . . . , wn ) ,

(29.8)

because of the construction following (6.6). If the largest eigenvalue (A) =  of A occurs with multiplicity r, the rank of I - A will be n - r, hence A will have rank n - r or n - r + 1, and the number of zero eigenvalues k in (29.6) will be r + 1 or r.

 
 
  
    

35

30. Antiblockers. The convex sets STAB, TH, and QSTAB defined in section 2 have many special properties. For example, they are always nonempty, closed, convex, and nonnegative; they also satisfy the condition

0  y  x and x  X  y  X .

(30.1)

A set X of vectors satisfying all five of these properties is called a convex corner. If X is any set of nonnegative vectors we define its antiblocker by the condition

abl X = { y  0 | x · y  1 for all x  X } .

(30.2)

Clearly abl X is a convex corner, and abl X  abl X when X  X .

Lemma. If X is a convex corner we have abl abl X = X.
Proof. (Compare with the proof of F5 in section 8.) The relation X  abl abl X is obvious by definition (30.2), so the lemma can fail only if there is some z  abl abl X with z / X. Then there is a hyperplane separating z from X, by F1; i.e., there is a vector y and a number b such that x · y  b for all x  X but z · y > b. Let y be the same as y but with all negative components changed to zero. Then (y , b) is also a separating hyperplane. [Proof: If x  X, let x be the same as x but with all components changed to zero where y has a negative entry; then x  X, and x · y = x · y  b. Furthermore z · y  z · y > b.] If b = 0, we have y  abl X for all  > 0; this contradicts z · y  1. We cannot have b < 0, since 0  X. Hence b > 0, and the vector y /b  abl X. But then z · (y /b) must be  1, a contradiction.

Corollary. If G is any graph we have

STAB(G) = abl QSTAB(G) ,
TH(G) = abl TH(G) , QSTAB(G) = abl STAB(G) .

(30.3) (30.4) (30.5)

Proof. First we show that

abl X = abl convex hull X.

(30.6)

The left side surely contains the right. And any element y  abl X will satisfy
(1x(1) + · · · + kx(k)) · y  1
when the 's are nonnegative scalars summing to 1 and the x(j) are in X. This proves (30.6), because the convex hull of X is the set of all such 1x(1) + · · · + kx(k).

 
 
  
    

36

Now (30.6) implies (30.5), because the definitions in section 2 say that
QSTAB(G) = abl { x | x is a clique labeling of G }
= abl { x | x is a stable labeling of G } ,
STAB(G) = convex hull { x | x is a stable labeling of G } .
And (30.5) is equivalent to (30.3) by the lemma, because STAB(G) is a convex corner. (We must prove (30.1), and it suffices to do this when y equals x in all but one component; and in fact by convexity we may assume that y is 0 in that component; and then we can easily prove it, because any subset of a stable set is stable.)
Finally, (30.4) is equivalent to Theorem 14, because TH(G) = abl { x | xv = c(av) for some orthogonal labeling of G }.

The sets STAB and QSTAB are polytopes, i.e., they are bounded and can be defined by a finite number of inequalities. But the antiblocker concept applies also to sets with curved boundaries. For example, let

X = {x  0 x  1}

(30.7)

be the intersection of the unit ball and the nonnegative orthant. Cauchy's inequality implies that x · y  1 whenever x  1 and y  1, hence X  abl X. And if y  abl X we have y  X, since y = 0 implies y = y · (y/ y )  1. Therefore X = abl X.
In fact, the set X in (30.7) is the only set that equals its own antiblocker. If Y = abl Y and y  Y we have y · y  1, hence Y  X; this implies abl Y  X.

31. Perfect graphs. Let (G) be the size of a largest clique in G. The graph G is called perfect if every induced subgraph G of G can be colored with (G ) colors. (See section 15 for the notion of induced subgraph. This definition of perfection was introduced by Claude Berge in 1961.)
Let G+ be G with vertex v duplicated, as described in section 16. This means we add a new vertex v with the same neighbors as v and with v -- v .
Lemma. If G is perfect, so is G+.
Proof. Any induced subgraph of G+ that is not G+ itself is either an induced subgraph of G (if it omits v or v or both), or has the form G + for some induced subgraph G of G (if it retains v and v ). Therefore it suffices to prove that G+ can be colored with (G+) colors.
Color G with (G) colors and suppose v is red. Let G be the subgraph induced from G by leaving out all red vertices except v. Recolor G with (G ) colors, and assign a

 
 
  
    

37

new color to the set G+\G , which is stable in G+. This colors G+ with (G ) + 1 colors, hence (G+)  (G ) + 1.
We complete the proof by showing that (G+) = (G ) + 1. Let Q be a clique of size (G ) in G .
Case 1. v  Q. Then Q  {v } is a clique of G+.
Case 2. v / Q. Then Q contains no red element. In both cases we can conclude that (G+)  (G ) + 1.

Theorem. If G is perfect, STAB(G) = QSTAB(G).

Proof. It suffices to prove that every x  QSTAB(G) with rational coordinates is a member of STAB(G), because STAB(G) is a closed set.
Suppose x  QSTAB(G) and qx has integer coordinates. Let G+ be the graph obtained from G by repeatedly duplicating vertices until each original vertex v of G has been replaced by a clique of size qxv. Call the vertices of that clique the clones of v.
By definition of QSTAB(G), if Q is any clique of G we have

xv  1 .
vQ

Every clique Q of G+ is contained in a clique of size vQ qxv for some clique Q of G. (Including all clones of each element yields this possibly larger clique.) Thus (G+)  q,

and the lemma tells us that G+ can be colored with q colors because G+ is perfect.

For each color k, where 1  k  q, let x(vk) = 1 if some clone of v is colored k, otherwise xv(k) = 0. Then x(k) is a stable labeling. Hence

1

q
x(k)  STAB(G) .

q

k=1

But every vertex of G+ is colored, so

q k=1

xv(k)

=

qxv

for

all

v,

so

q-1

q k=1

x(k)

=

x.

32. A characterization of perfection. The converse of Theorem 31 is also true; but before we prove it we need another fact about convex polyhedra.

Lemma. Suppose P is the set { x  0 | x · z  1 for all z  Z } = abl Z for some finite

set Z and suppose y  abl P , i.e., y is a nonnegative vector such that x · y  1 for all

x  P . Then the set

Q = {x  P | x·y = 1}

(32.1)

is contained in the set { x | x · z = 1 } for some z  Z (unless Q and Z are both empty).

Proof. This lemma is "geometrically obvious"--it says that every vertex, edge, etc., of a convex polyhedron is contained in some "facet"--but we ought also to prove it. The

 
 
  
    

38

proof is by induction on |Z|. If Z is empty, the result holds because P is the set of all nonnegative x, hence y must be 0 and Q must be empty.
Suppose z is an element of Z that does not satisfy the condition; i.e., there is an element x  P with x · y = 1 and x · z = 1. Then x · z < 1. Let Z = Z \ {z} and P = abl Z . It follows that x · y  1 for all x  P . For if x · y > 1, a convex combination x = x + (1 - )x will lie in P for sufficiently small , but x · y > 1.
Therefore by induction, Q = { x  P | x · y = 1 } is contained in { x | x · z = 1 } for some z  Z , unless Q is empty, when we can take z = z. And Q  Q , since P  P .

Theorem. G is perfect if and only if STAB(G) = QSTAB(G).

Proof. As in section 15, let G|U be the graph induced from G by restriction to vertices U.

If X is a set of vectors indexed by V and if U  V , let X|U be the set of all vectors indexed

by U that arise from the vectors of X when we suppress all components xv with v / U.

Then it is clear that

QSTAB(G|U) = QSTAB(G)|U ,

(32.2)

because every x  QSTAB(G|U ) belongs to QSTAB(G) if we set xv = 0 for v / U , and every x  QSTAB(G) satisfies vQ xv  1 for every clique Q  U . Also

STAB(G|U) = STAB(G)|U ,

(32.3)

because every stable labeling of G|U is a stable labeling of G if we extend it with zeros, and every stable labeling of G is stable for G|U if we ignore components not in U.
Therefore STAB(G) = QSTAB(G) iff STAB(G ) = QSTAB(G ) for all induced graphs. By Theorem 31 we need only prove that STAB(G) = QSTAB(G) implies G can be colored with (G) colors.
Suppose STAB(G) = QSTAB(G). Then by Corollary 30,

STAB(G) = QSTAB(G) .

(32.4)

Let P = STAB(G), and let y = 1l/(G). Then x · y  1 whenever x is a clique labeling of G, i.e., whenever x is a stable labeling of G; so x · y  1 for all x  P . Let Z be the set of all stable labelings of G, i.e., clique labelings of G. Then P = QSTAB(G) = abl Z and Z is nonempty. So the lemma applies and it tells us that the set Q defined in (32.1) is contained in { x | x · z = 1 } for some stable labeling z of G. Therefore every maximum clique labeling x satisfies x · z = 1; i.e., every clique of size (G) intersects the stable set S corresponding to z. So (G ) = (G) - 1, where

G = G|(V \ S) .

(32.5)

 
 
  
    

39

By induction on |V | we can color the vertices of G with (G ) colors, then we can use a new color for the vertices of S; this colors G with (G) colors.

Lova´sz states in [13] that he knows no polynomial time algorithm to test if G is perfect; but he conjectures ("guesses") that such an algorithm exists, because the results we are going to discuss next suggest that much more might be provable.

33. Another definition of . The following result generalizes Lemma 9.3.21 of [7].

Lemma. Let a and b be orthogonal labelings of G and G that satisfy the conditions of Theorem 12, normalized so that

av 2 bv 2 = wvc(bv) , a1v  0 , and b1v  0 ,

(33.1)

for all v. Then

ajvbkv =

(G, w) , 0,

if j = k = 1; otherwise.

v

(33.2)

 Proof. Let a0 = ( , 0, . . . , 0)T and b0 = (-1, 0, . . . , 0)T . Then the (n + 1) × (n + 1)

matrices A = aT a and B = bT b are spuds, and A · B = 0. (In the special case av 2 = wv,

bv 2 = c(bv), matrix B is what we called B in the proof of Theorem 29.) Therefore

0 = tr AT B = tr aT abT b = tr baT abT = (abT ) · (abT ), and we have abT = 0. In other words

for all j and k.

aj0bk0 + ajvbkv = 0
v

We now can show that  has yet another definition, in some ways nicer than the one we considered in section 6. (Someday I should try to find a simpler way to derive all these facts.) Call the matrix B dual feasible for G and w if it is indexed by vertices and

B is real and symmetric; Bvv = wv for all v  V ; Buv = 0 whenever u -- v in G;

(33.3)

and define

6(G, w) = max{ (B) | B is positive semidefinite and dual feasible for G and w } . (33.4)

Compare with the analogous definitions in (6.1) and (6.3).

 
 
  
    

40

Theorem. (G, w) = 6(G, w).

Proof. If B is positive semidefinite and dual feasible, and if  is any eigenvalue of B, we can write B = QDQT where Q is orthogonal and D is diagonal, with D11 = . Let b = D QT ; then b is an orthogonal labeling of G with bv 2 = wv for all v. Furthermore c(bv) = b21v/wv =  qv21/wv, where (q11, . . . , qn1) is the first column of Q. Therefore
v c(bv)wv =  v qv21 = , and we have   4(G, w) by (10.1). This proves that 6  .
Conversely, let a and b be orthogonal labellings of G and G that satisfy the conditions of Theorem 12. Normalize them so that av 2 = c(bv) and bv 2 = wv. Then a12v = c(av)c(bv) = wvc(bv)/ = b12v/. The lemma now implies that (b11, . . . , b1n)T is an eigenvector of bT b, with eigenvalue . This proves that   6.
Corollary. (G) = 1 + max{ (B)/(-B) | B is dual feasible for G and 0 }.

Proof. If B is dual feasible for G and 0, its eigenvalues are 1  · · ·  n where 1 = (B) and n = -(-B). Then B = I + B/(-B) has eigenvalues 1 - 1/n, . . . , 1 - n/n = 0. Consequently B is positive semidefinite and dual feasible for G and 1l, and 1 + (B)/(-B) = (B )  6(G).
Conversely, suppose B is positive semidefinite and dual feasible for G and 1l, with (B ) =  = (G). Let B = B - I. Then B is dual feasible for G and 0, and 0  (-B)  1 since the sum of the eigenvalues of B is tr B = 0. It follows that  - 1 = (B)  (B)/(-B).

34. Facets of TH. We know that TH(G) is a convex corner set in n-dimensional space, so it is natural to ask whether it might have (n - 1)-dimensional facets on its nontrivial boundary--for example, a straight line segment in two dimensions, or a region of a plane in three dimensions. This means it has n linearly independent vectors x(k) such that

x(vk)c(av) = 1
v
for some orthogonal labeling a of G.

(34.1)

Theorem. If TH(G) contains linearly independent solutions x(1), . . . , x(n) of (34.1), then there is a maximal clique Q of G such that

c(av) =

1, 0,

v  Q; v / Q.

(34.2)

Proof. Theorem 14 tell us that every x(k)  TH(G) has xv(k) = c(b(vk)) for some orthogonal labeling of G. Set wv = c(av); then (G, w) = 1, by Theorem 13. We can normalize the

 
 
  
    

41

labelings so that

av 2 = a1v = wv and bv(k) 2 = b1(kv) = x(vk). Hence, by Lemma 33,

1

v

x(vk)av

=



0 ...



=

e1

.

0

(34.3)

Let Q = { v | a1v = 0 } = { v | c(av) = 0 }

(34.4)

and suppose Q has m elements. Then (34.3) is equivalent to the matrix equation

Ax(k) = e1

(34.5)

where A is a d × m matrix and x(k) has m components x(vk), one for each v  Q. By

hypothesis there are m linearly independent solutions to (34.5), because there are n linearly

independent solutions to (34.3). But then there are m - 1 linearly independent solutions

to Ax = 0, and it follows that A has rank 1: Every row of A must be a multiple of the top

row (which is nonzero). And then (34.5) tells us that all rows but the top row are zero.

We have proved that

c(av) = 0  c(av) = 1 .

(34.6)

Therefore if u and v are elements of Q we have au · av = 0, hence u -- v; Q is a clique.
Moreover, Q is maximal. For if v / Q is adjacent to all elements of Q, there is a k such that x(vk) > 0. But the characteristic labeling of Q  {v} is an orthogonal labeling a such that u x(uk)c(au) = 1 + xv(h) > 1, hence x(k) / TH(G).

Conversely, it is easy to see that the characteristic labeling of any maximal clique Q
does have n linearly independent vectors satisfying (34.1), so it does define a facet. For each vertex u we let xu(u) = 1, and xv(u) = 0 for all v = u except for one vertex v  Q with v -- u (when u / Q). Then x(u) is a stable labeling so it is in TH(G). The point
of the theorem is that a constraint v xvc(av)  1 of TH(G) that is not satisfied by all x  QSTAB(G) cannot correspond to a facet of TH(G).

Corollary.

TH(G) is a polytope  TH(G) = QSTAB(G)  TH(G) = STAB(G)  G is perfect.

Proof. If TH(G) is a polytope it is defined by facets as in the theorem, which are nothing more than the constraints of QSTAB(G); hence TH(G) = QSTAB(G). Also the antiblocker of

 
 
  
    

42

a convex corner polytope is a polytope, so TH(G) is a polytope by (30.4); it must be equal to QSTAB(G). Taking antiblockers, we have TH(G) = STAB(G) by (30.3). The converses are easy since STAB and QSTAB are always polytopes. The connection to perfection is an immediate consequence of Theorem 32 and Lemma 2.

We cannot strengthen the corollary to say that (G) = (G) holds if and only if (G) = (G); the Petersen graph (section 27) is a counterexample.

35. Orthogonal labelings in a perfect graph. A perfect graph has

(G, w) = (G, w) = max{x · w | x is a stable labeling of G} ,

(35.1)

and Theorem 12 tells us there exist orthogonal labelings of G and G such that (12.2) and (12.3) hold. But it isn't obvious what those labelings might be; the proof was not constructive.

The problem is to find vectors av such that au · av = 0 when u -- v and such that (12.2) holds; then it is easy to satisfy (12.3) by simply letting b be a stable labeling where the maximum occurs in (35.1).

The following general construction gives an orthogonal labeling (not necessarily op-

timum) in any graph: Let g(Q) be a nonnegative number for every clique Q, chosen so

that

g(Q) = wv ,
vQ

for all v .

(35.2)

Furthermore, for each clique Q, let

aQv =

g(Q), if v  Q; 0, otherwise.

(35.3)

Then

au · av =

g(Q) ,

{u,v}Q

hence au · av = 0 when u -- v. If we also let aQ0 = g(Q) for all Q, a00 = 0, we find

a0 · av = av · av = g(Q) = wv .
vQ

We have constructed a matrix A that is -compatible with G and w, in the sense of

section 29, where

 = a0 · a0 = g(Q) .

(35.4)

Q

 
 
  
    

43

An orthogonal labeling with costs c(av) = wv/ can now be found as in the proof of Lemma 29.
The duality theorem of linear programming tells us that the minimum of (35.4) subject to the constraints (35.2) is equal to the maximum value of w·x over all x with vQ xv  1 for all Q. When x maximizes w · x, we can assume that x  0, because a negative xv can be replaced by 0 without decreasing w · x or violating a constraint. (Every subset of a clique is a clique.) Thus, we are maximizing w · x over QSTAB(G); the construction in the previous paragraph allows us to reduce  as low as (G, w). But (G, w) = (G, w) in a perfect graph, so this construction solves our problem, once we have computed g(Q).
The special case of a bipartite graph is especially interesting, because its cliques have only one or two vertices. Suppose all edges of G have the form u -- v where u  U and v  V , and consider the network defined as follows: There is a special source vertex s connected to all u  U by a directed arc of capacity wu, and a special sink vertex t connected from all v  V by a directed arc of capacity wv. The edges u -- v of G are also present, directed from u to v with infinite capacity. Any flow from s to t in this network defines a suitable function g, if we let
g({u, v}) = the flow in u  v ,
g({u}) = wu minus the flow in s  u ,
g({v}) = wv minus the flow in v  t ,
for all u  U and v  V . Let S be a subset of U  V . If we cut the edges that connect s or t with vertices not in S, we cut off all paths from s to t if and only if S is a stable set. The minimum cut (i.e., the minimum sum of capacities of cut edges) is equal to the maximum flow; and it is also equal to

wu + wv - max{w · x | x is a stable labeling} = wu + wv - (G, w) .

uU

vV

uU

vV

Thus the value of  = Q g(Q) is uU wu - {flow from s} + vV wv - {flow to t} + {flow in u  v arcs} = (G, w) = (G, w) as desired.

For general perfect graphs G, a solution to (35.4) with  = (G, w) can be found in polynomial time as shown in equation (9.4.6) of [7]. However, the methods described in [7] are not efficient enough for practical calculation, even on small graphs.

36. The smallest non-perfect graph. The cyclic graph C5 is of particular interest because it is the smallest graph that isn't perfect, and the smallest case where the function (G, w) is not completely known.
The discussion following Theorem 34 points out that TH(G) always has facets in common with QSTAB(G), when those facets belong also to STAB(G). It is not hard to see that

 
 
  
    

44

QSTAB(C5) has ten facets, defined by xj = 0 and xj + xjmod5 = 1 for 0  j < 5; and STAB(C5) has an additional facet defined by x0 + x1 + x2 + x3 + x4 = 2. The weighted functions  and  of section 4 are evaluated by considering the vertices of STAB and QSTAB:

(C5, {w0, . . . , w4}T ) = max(w0 + w2, w1 + w3, w2 + w4, w3 + w0, w4 + w1) ; (36.1)

(C5, {w0, . . . , w4}T ) = max (C5, {w0, . . . , w4}T ), (w0 + · · · + w4)/2 .

(36.2)

Where these functions agree, they tell us also the value of .

For example, let f (x) = (C5, {x, 1, 1, 1, 1, 1}T ). Relations (36.1) and (36.2) imply that f (x) = x + 1 when x  2. Clearly f (0) = 2, and section 22 tells us that f (1) = 5.

Other values of f(x) are not yet known. Equation (23.2) gives the lower bound f (x)2 

x2 + 4. Incidentally, the a vectors



 x





1 0 0





 x





1 x+1
(x - 2)(x

+

1)



 1 



- 0 0

x



 1 



- 0 0

x





 x





1 - x+1
0



00

0 0 (x - 2)(x + 1)

and b = (1) (0) (0) (0) (0) establish f (x) for x  2 in the fashion of Theorems 12 and 13. 
Let  = (1 + 5 )/2 be the golden ratio. The matrices A and B of Theorem 29, when

G = C5 and w = 1l, are



 5

1

1

1

1

1

A = 

1 1 1 1

1 -1
0 0

-1 1
-1 0

0 -1
1 -1

0 0 -1 1

 

- 0 0 -

1 1



;

1 -1 0

0 -1 1



 5

-1

-1

-1

-1

-1 

B

=

1 5



-1 -1 -1 -1

1 0 -1 -1

0 1 0 -1

-1 0 1 0

-1 -1
0
1

 

0 - - 0

1 1



.

-1 0  - 1  - 1 0

1

They have the common eigenvectors



 5





 5



0



1 1 1 1





-1 -1 -1 -1






1 -1 -



1 -1 0

0



0  1 -1



-

0



1 -  -1



0

0



0 1 - 



,

-1

 
 
  
    

45

  with respective eigenvalues (0, . . . , 5) = (2 5, 0, 5/, 5/, 0, 0) and (µ0, . . . , µ5) = (0, 2, 0, 0, 1/, 1/). (Cf. (29.6) and (29.7).)

37. Perplexing questions. The book [7] explains how to compute (G, w) with given tolerance , in polynomial time using an ellipsoid method, but that method is too slow and numerically unstable to deal with graphs that have more than 10 or so vertices. Fortunately, however, new "interior-point methods" have been developed for this purpose, especially by Alizadeh [1,2], who has computed (G) when G has hundreds of vertices and thousands of edges. He has also shown how to find large stable sets, as a byproduct of evaluating (G, w) when w has integer coordinates. Calculations on somewhat smaller cyclically symmetric graphs have also been reported by Overton [16]. Further computational experience with such programs should prove to be very interesting.

Solutions to the following four concrete problems may also help shed light on the subject:

P1. Describe TH(C5) geometrically. This upright set is isomorphic to its own antiblocker. (Namely, if (x0, x1, x2, x3, x4)  TH(C5), then so are its cyclic permutations (x1, x2, x3, x4, x0), etc., as well as the cyclic permutations of (x0, x4, x3, x2, x1); TH(C5) contains the cyclic permutations of (x0, x2, x4, x1, x3) and (x0, x3, x1, x4, x2).) Can the values f (x) = (C5, {x, 1, 1, 1, 1}T ), discussed in section 36, be expressed in closed form when 0 < x < 2, using familiar functions?

P2. What is the probable value of (G, w) when G is a random graph on n vertices,

where each of the

n 2

possible edges is independently present with some fixed probability p?

(Juha´sz [9] has solved this problem in the case w = 1l, showing that (G)/ (1 - p)n/p

lies

between

1 2

and

2

with

probability

approaching

1

as

n



.)

P3. What is the minimum d for which G almost surely has an orthogonal labeling

of dimension d with no zero vectors, when G is a random graph as in Problem P2? (Theorem 28 and the theorem of Juha´sz [9] show that d must be at least of order n. But Lova´sz

tells me that he suspects the correct answer is near n. Theorem 29 and its consequences

might be helpful here.) 
P4. Is there a constant c such that (G)  c n (G) for all n-vertex graphs G?

(This conjecture was suggested by Lov´asz in a recent letter. He knows no infinite family of graphs where (G)/(G) grows faster than O( n/ log n). The latter behavior occurs

for random graphs, which have (G) = log1/p n with high probability [4, Chapter XI].)

Another, more general, question is to ask whether it is feasible to study two- or threedimensional projections of TH(G), and whether they have combinatorial significance. The function (G, w) gives just a one-dimensional glimpse.
Lova´sz and Schrijver have recently generalized the topics treated here to a wide variety

 
 
  
    

46

of more powerful techniques for studying 0­1 vectors associated with graphs [15]. In
particular, one of their methods can be described as follows: Let us say that a strong orthogonal labeling is a vector labeling such that av 2 = c(av) and au · av  0, also satisfying the relation

c(au) + c(av) + c(aw) - 1  au · av + av · aw  c(av)

(37.1)

whenever u -- w. In particular, when w = v this relation implies that au · av = 0, so the labeling is orthogonal in the former sense.
Notice that every stable labeling is a strong orthogonal labeling of G. Let S be a stable set and let u and w be vertices such that u -- w. If u and w are not in S, condition (37.1) just says that 0  c(av)  1, which surely holds. If u is in S, then w / S and (37.1) reduces to c(av)  c(av)  c(av); this holds even more surely.
Let

TH-(G) = { x | xv = c(bv) for some strong orthogonal labeling of G }.

(37.2)

(This set is called N+(FR(G)) in [15].) We also define -(G, w) = max{ w · x | x  TH-(G) } .

(37.3)

The argument in the two previous paragraphs implies that

STAB(G)  TH-(G)  TH(G) ,

hence

(G, w)  -(G, w)  (G, w) .

(37.4)

The authors of [15] prove that -(G, w) can be computed in polynomial time, about as easily as (G, w); moreover, it can be a significantly better approximation to (G, w). They show, for example, that TH-(G) = STAB(G) when G is any cyclic graph Cn. In fact, they prove that if x  TH-(G) and if v0 -- v1, v1 -- v2, . . . , v2n -- v0 is any circuit or multicircuit of G, then xv0 + xv1 + · · · + xv2n  n. This suggests additional research problems:
P5. What is the smallest graph such that STAB(G) = TH-(G)?
P6. What is the probable value of -(G) when G is a random graph as in Problem P2?

A recent theorem by Arora, Lund, Motwani, Sudan, and Szegedy [3] proves that there is an > 0 such that no polynomial algorithm can compute a number between (G) and

 
 
  
    

47

n (G) for all n-vertex graphs G, unless P = NP . Therefore it would be surprising if the answer to P6 turns out to be that -(G) is, say, O(log n)2 with probability  1 for random G. Still, this would not be inconsistent with [3], because the graphs for which
(G) is hard to approximate might be decidedly nonrandom.

Lova´sz has called my attention to papers by Kashin and Konyagin [10, 11], which

prove (in a very disguised form, related to (6.2) and Theorem 33) that if G has no stable

set with 3 elements we have

(G)  22/3n1/3 ;

(37.5)

moreover, such graphs exist with

(G) = (n1/3/ log n ) .

(37.6)

Further study of methods like those in [15] promises to be exciting indeed. Lova´sz has sketched yet another approach in [14].
References [1] Farid Alizadeh, "A sublinear-time randomized parallel algorithm for the maximum
clique problem in perfect graphs," ACM-SIAM Symposium on Discrete Algorithms 2 (1991), 188­194.
[2] Farid Alizadeh, "Interior point methods in semidefinite programming with applications to combinatorial optimization," preprint, 1993, available from alizadeh@icsi. berkeley.edu.
[3] Sanjeev Arora, Carsten Lund, Rajeev Motwani, Madhu Sudan, and Mario Szegedy, "Proof verification and intractability of approximation problems," Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science (1992), 14­23.
[4] B´ela Bolloba´s, Random Graphs (Academic Press, 1985).
[5] Martin Gro¨tschel, L. Lov´asz, and A. Schrijver, "The ellipsoid method and its consequences in combinatorial optimization," Combinatorica 1 (1981), 169­197.
[6] M. Gro¨tschel, L. Lov´asz. and A. Schrijver, "Relaxations of vertex packing," Journal of Combinatorial Theory B40 (1986), 330­343.
[7] Martin Gro¨tschel, L´aszl´o Lova´sz, and Alexander Schrijver, Geometric Algorithms and Combinatorial Optimization (Springer-Verlag, 1988), §9.3.
[8] A. S. Householder, "Unitary triangularization of a nonsymmetric matrix," Journal of the Association for Computing Machinery 5 (1958), 339­342.
[9] Ferenc Juha´sz, "The asymptotic behaviour of Lova´sz'  function for random graphs," Combinatorica 2 (1982), 153­155.

 
 
  
    

48

[10] B. S. Kashin and S. V. Koniagin, "O sistemakh vektorov v Gil'bertovom prostranstve," Trudy Matematicheskogo Instituta imeni V. A. Steklova 157 (1981), 64­67. English translation, "On systems of vectors in a Hilbert space," Proceedings of the Steklov Institute of Mathematics (American Mathematical Society, 1983, issue 3), 67­70.
[11] S. V. Koniagin, "O sistemakh vektorov v Evclidovom prostranstve i odnoi ´ekstremal'noi zadache dlia mnogochlenov," Matematicheskie Zametki 29 (1981), 63­74. English translation, "Systems of vectors in Euclidean space and an extremal problem for polynomials," Mathematical Notes of the Academy of Sciences of the USSR 29 (1981), 33­39.
[12] L. Lov´asz, "On the Shannon capacity of a graph," IEEE Transactions on Information Theory IT­25 (1979), 1­7.
[13] L. Lov´asz, An Algorithmic Theory of Numbers, Graphs, and Convexity. CBMS Regional Conference Series in Applied Mathematics (SIAM, 1986), §3.2.
[14] L. Lov´asz, "Stable sets and polynomials," to appear in Discrete Mathematics.
[15] L. Lov´asz and A. Schrijver, "Cones of matrices and set functions and 0­1 optimization," SIAM Journal on Optimization 1 (1991), 166­190.
[16] Michael Overton, "Large-scale optimization of eigenvalues," SIAM Journal on Optimization 2 (1992), 88­120.
[17] M. W. Padberg, "On the facial structure of set packing polyhedra," Mathematical Programming 5 (1973), 199­215.
[18] Claude E. Shannon, "The zero error capacity of a channel," IRE Transactions on Information Theory 2, 3 (Sep 1956), 8­19.

