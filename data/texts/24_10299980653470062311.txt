Better Pasting via Quasi-Interpolation
Blair Conrad and Stephen Mann pAathrlaybiscsecptsoranfpaetearcortt,ul.rwpeoeSsinudutrersffsaacoccrfeiebtaephtaeotshptpeinabugsatsseeiesdosaufferaqhftauiuecarersaeirw.-icnihtTtihecoraaplapocmplharoitoeidxoveniemlinitangotteestreecatcochnttnithviienequubpietoeyurt.fhnoIadrnt--
mifmmnatcuaeeetncrhhcppoeoaldoflsoawtwrtienihorsgunednrtifesaacucnchosednninpitqgdianuesutetvhiiintsieyseg,sabaawcenmtteuwemaeelneloynucdimifetfanyhbsteteterhfsreeaoatmcfthoupaferenleainttacguhinerednesctobhcsroaieagnsmnietnedras.oulwlrsefpTuaigorchhifeneat.tcsseno,efpwwaqisuttshaiunsriag--

x1. Introduction
Spline curves and surfaces are used in many areas of computer graphics and computer aided geometric design. In particular, tensor product B-spline surfaces are commonly used in modeling and computer animation because they have many attractive properties, such as a compact representation and adjustable levels of internal continuity 7].
Frequently, the user of a piece of modeling or animation software will want to add a region of local detail to a B-spline tensor product surface, but the knot structure will be too coarse to allow the ne-grained control that the user desires. Traditional methods of increasing the complexity of the surface include inserting knots using either Boehm's algorithm 3] or the Oslo algorithm 6]. The insertion of a knot into either of a surface's knot vectors causes an entire row or column of subpatches to be split | rather than increasing the number of subpatches locally, extra subpatches are created across the width or breadth of the surface.
Forsey and Bartels 8] developed hierarchical B-splines to allow the user to add local detail to a tensor product B-spline surface while maintaining Bspline continuity. Hierarchical B-splines su er from several drawbacks: the regions of added detail must remain parametrically aligned with the base, and it is impractical to slide the features or to maintain a library of overlays that may be added to a base surface. Wavelets 10] can be used in a similar

Curve and Surface Design: Saint-Malo 1999

oPCioepryrer-igJheatncL2a0u0r0enbty,

Paul Sablonniere, and Vanderbilt University

Larry Press,

L. Schumaker (eds.), Nashville, TN.

pp.

27{36.

ISBN 0-8265-1356-5.

All rights of reproduction in any form reserved.

27

28 B. Conrad and S. Mann hierarchical modeling technique, but they also require the detail regions to be parametrically aligned with the base.
Displacement mapping is another technique for adding local detail to a surface while adding as few extra control points as possible. Every point on the feature is de ned by a displacement vector relative to a certain point in a reference plane. To evaluate the surface at the detail, you add the displacement vector of the feature to the corresponding point on the base surface. The greatest disadvantage to using displacement mapped surfaces is the computational cost. Multiple surface evaluations must be used to determine each point to be rendered on the composite surface.
Surface pasting, suggested by Forsey and Bartels 2], is a generalization of hierarchical B-splines that was intended to combine the exibility of displacement mapped surfaces with the speed of evaluation enjoyed by hierarchical B-splines. This technique has the exibility of displacement mapping, but it is much cheaper since only the control points of the feature must be mapped, rather than the larger number of surface points to be rendered. This combination of exibility and speed has drawn the attention of the modeling industry to surface pasting | recent versions of ,Houdini a commercial animation tool produced by Side E ects Software, have included support for surface pasting.
However, surface pasting is only an approximation, and as such it does not have the same continuity properties as displacement mapping or hierarchical B-splines. In general, there is no guaranteed continuity between the feature and the base surfaces. By inserting knots into the feature surface, the error between the feature boundary and the base surface can be reduced to any desired tolerance, but many knot insertions may be required to get the desired approximation, and the resulting additional control points in the feature dramatically increase the cost of the pasting operation.
In this paper, we suggest altering the surface pasting technique to improve the approximate continuity between the feature and base surfaces by using quasi-interpolation to set one or more of the outer rings of feature control points.
x2. Surface Pasting
Since the work in this paper is an extension of surface pasting, we will give a quick review of how pasting works. For details on standard surface pasting, see any of the earlier works on the subject 1,2].
The pasting process is illustrated in Figure 1. Surface pasting combines a base surface and a feature surface, each of which is in tensor-product B-spline form. The feature's control points are adjusted so that the boundary of the pasted feature lies on or near the base surface, and the shape of the pasted feature re ects the original shape of the feature imposed as a displacement of the base surface.
To map the feature's control points, the feature's domain is embedded in the feature's range (upper left of Figure 1). Next, a local coordinate frame
Fi;j = fui;j; vi;j; wi;j; Oi;jg is constructed for each feature control point Pi;j

Better Pasting via Quasi-Interpolation
Pij
Fij
Feature Domain
Feature Surface

Pi'j Fi'j

29

Base Domain
Base Surface

Feature Domain Base Domain
Composite Surface

Fig. 1. Surface Pasting.

wPih;je,retwthoeofortihgeinfrOami;je'osf

each basis

frame is the Greville point corresponding to vectors are the parametric domain directions

and the third basis vector is the direction perpendicular to the domain. Each

control point Pi;j as Pi;j = ui;j +

is then vi;j +

expressed relative
wi;j + Oi;j.

to

its

local

coordinate

frame

Fi;j

Next, we associate the feature's domain with a region in the base's domain

(right half of Figure 1). This gives the location on the base surface where we

sovwureiicrlglftaiopncrlesaO,cle0igie;itjvhiiniensgtftehhaaeetuntearevenwa.glueWcanotetoiornpndolaiwnonafemtteohafepfrtbaehaamecsehebascFusoie0ro;jfrasduc=iernfaaaftctuee0iO;fajri;ta;jvm,ti0;hjaea;nFtwdii0p;;tjjow;ioOnont0to,io;fjtthgithesewtbbhhaaoisrssidees

being perpendicular to the tangent plane. We then use the coordinates of

opeafocithnhtef,ePafrti0a;ujmr=eecFouni0;i0tj;rj.o+lTphoviisi0n;jtg+iPvie;jswrui0e;sjla+tthivOee0lito;joc.aFtiio;jnaosfctohoerdpinaastteeds

of the elements feature control

x3. Feature Boundaries
With standard surface pasting, the boundary control points of the pasted feaaitnulsraoencsouanrlmfvaeocnestti(oFCni0gauljloryeinl2o.)cLaatirkeedecwooinnsevt,ehntehtieboansesaeclolsynupdrlfaalaccyeeed,rgooinvfitnfhegaetabunaresaelcmsounortsfrtaocCle1p, rojeoinsiuntsl.taiBnryge inserting knots into the feature surface, the discontinuity between the feature and the base can be made as small as desired.
One disadvantage of using knot insertion to decrease the discontinuity between the feature surface and the base surface is that it greatly increases the number of control points in the feature surface. In addition to increasing the storage requirements of the feature surface, this increases the computational cost for interactive modeling, as each feature control point needs to be mapped with the pasting process described in the previous section. featuTrehceognotarlool fptohinistswtoorkmiisntiomiznedtbheetCte0rasnetdtiCng1sdoisfctohnetbinouuintideas.ryTlhauyes,rswoefwthilel nd better settings of the control points illustrated in Figure 2. In this gure,

30 B. Conrad and S. Mann

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

...

Fig. 2. Approximate C0 boundary points and C1 boundary points.

the circled points are set using quasi-interpolation: the black control points will be set to interpolate position and derivative information sampled from the base surface; the gray control points will be set using quasi-interpolation; and the remaining control points will be set using the standard surface pasting process.

x4. Quasi-Interpolation

Quasi-interpolation is a spline approximation technique developed by de Boor

and Fix 4]. Their method, given a function f de ned over a region of R

and a partition of R, constructs a degree m spline, F f, that approximates

f. F f is called the quasi-interpolant of f. The quasi-interpolant is a local

approximation in that its value at u depends only on the values of f in a small

neighborhood around provides a high order

u, it reproduces polynomials
approximation to f, with jF

of f

defgjrebeeimngoOr l(ejssj,ma+n1d).it

Lyche and Schumaker 9] describe a family of quasi-interpolation opera-

tors Q which include the one of de Boor and Fix. They take

Qf = XM ifBim;
i=0

(1)

where linear

tfuhnecftBioimnaglMis=0caanrebtehechBo-ssepnlinsoestahnadt

f
Q

iigsMi=a0ppalriecalbinleeatrofuancwtiidoneaclsla.sTs hoef

functions, Q is local, and Qf approximates smooth functions with a high order

of accuracy. Then the operator Q can be applied to a real-valued function f

to produce a B-spline curve Qf that approximates f.

The quasi-interpolant Qf approximates a smooth function f with a high

order of accuracy because Q is constructed speci cally to reproduce polynomi-

walist.hTahcceuLrayccyheo-fSuchputmo aOk(ehrmq+ua1)si-foinrtaerfpuonlactnitosnawppitrhoxaimsuatecisemntoloythhigfuhndcetgiornees

of continuity. In addition, quasi-interpolants can be constructed using linear

functionals that can be quickly evaluated, resulting in a fast approximation op-

erator. The combination of high accuracy and speed make quasi-interpolation

a tting tool to improve the approximate continuity around the boundary of

pasted features.

Better Pasting via Quasi-Interpolation

31

The quasi-interpolant Qf is in B-spline form. Each control point of Qf is a weighted sum of linear functionals applied to f:

Pi = Xm i;j i;jf:
j=0

One particular choice of the Lyche-Schumaker quasi-interpolants corresponds to
i;jf = i;0; i;1; :::; i;j]f; where the 's are locations at which to evaluate f, and i;j is the blossom 11] of
pi;j(u) = (u i;0)(u i;1) (u i;j 1) evaluated at ui; :::; ui+m 1, where the ui are the knots of Qf. This results in a quasi-interpolant where Qf = f when f is a degree m or lower polynomial
and if Qf 6= f, then the error has the best possible order.

x5. Modi ed Quasi-interpolant

The Lyche-Schumaker quasi-interpolant uses cheap coe cients and expensive

linear functionals. For interactive modeling using surface pasting, the linear

functionals are recalculated frequently (i.e., when we slide the feature across

the base) and perform knot

the coe insertion

cients are to reduce

trheecaClc0uldaitsecdonletisnsufirteyq)u. eTnthluys(,otnolymwathcehn

we the

quasi-interpolant to our application, we made new, cheaper linear functionals,

i;jf = f( i;j):

This choice of i;j results in more expensive i;j, which are now the blossom

of

pi;j(u) = Y
k=6 j

u
i;j

i;k i;k

(2)

evaluated at ui; :::; ui+m 1, where the ui are the knots of Qf. Note that the Lyche-Schumaker linear functionals require computing a divided di erence of the samples while ours do not, but the denominator term of (2) makes our coe cients more expensive than theirs.
To use the quasi-interpolant on all four boundaries of a feature, the ends of the connecting boundary curves must match. This is most easily achieved by modifying Q to reproduce position and (to use the quasi-interpolant on the cross-boundary derivatives) d derivatives at its endpoints.
Thus, we devised a quasi-interpolant that we call Qd, where the linear functionals for the control points near the ends of the curves are derivatives of the original curve at the endpoints. This quasi-interpolant is actually a special case of the Lyche-Schumaker quasi-interpolant. The Qd quasi-interpolant requires di erent 's and p's at the endpoints, which in turn require new 's.

32 B. Conrad and S. Mann

For 0 i M, and 0 j m, we de ne Qd as

Qdf = XM PiBim = XM Xm i;j i;jf Bim;
i=0 i=0 j=0

(3)

where

i;j f

=

><>>8Df (j

i;j ), f (um

:>>>D0, j f (uM

1), ),

if d < i < M d if i d and j i if i M d and
otherwise

j

M

i

pi;j

(u)

=

8 >>>>><>> >>:>>>>>

Y
k=6 j
(u
(u

u
i;j

i;k i;k

,

if

um j!

1)j ,

if

uM j!

)j

,

if

d<i<M i d and iMd

d ji and j

M

i

8<0, if i d and j > i

i;j

= :p0i,;j(ui; :::; ui+m

if i M 1); otherwise

d and j > M

i

where the M d, the

pii;j;jss

are are

amserdeelynLeadgrinantgheepnoelyxntosmeciatilosn. .ThNisotqeuatshia-itntfoerrpdola<ntiQ<d

interpolates the position and derivatives at the endpoints and has optimal

error bounds as discussed by Conrad 5].

Sampling discipline

The above equations require us to sample the function f to be approximated at some values i;j, and (3) suggests that we require about m + 1 samples of the base surface for each boundary control point of the feature. Since the

quasi-interpolant error bounds hold for most choices of 's, we managed to

reduce the number of samples of the base surface by selecting the i;j in the following way:

Place the rst d and last d control points in groups of their own; divide

the remaining control points into groups as indicated by the pseudo-code

of Figure where Nk

3; =

Peack`h=01gnro`uapndk

will contain control nk is the number of

points control

PNk; :::; PNk+nk points in group

1, k;

Let i be the Greville point associated with control point Pi; then for

each group k, choose the interval from which to sample as

Set

i;j

=aakk;

bk +

]= ( j(bk

Nakk

1+ )=m,

fNork

)=2; i=

(NkN;k:+::1;

1+ Nk+1

Nk1+1a)n=2d];j

= 0; :::; m;

Sample f at the i;j; note that you can share the rst and last samples between groups,

Better Pasting via Quasi-Interpolation

33

I := M 2 d + 1
numFullGroups := bI=mc
L := I m numFullGroups if L = 0
make numFullGroups groups of m else if numFullGroups 0 (mod 2)
put leftovers in middle group; all others have m else there are an odd number of full groups
if L 0 (mod 2) rst and last groups contain L=2 each; all others
else move one control vertex from middle full group to the leftovers the rst and last groups each contain (L + 1)=2, the middle group contains m 1, and the others contain m

Fig. 3. Pseudo-code for grouping.

Fig. 4. Sampling discipline for quasi-interpolated surface pasting.
Pseudo-code for our grouping scheme appears in Figure 3, and the sampling is illustrated in Figure 4. The white and gray points are samples of the base surface; the black points represent the control points for the quasi-interpolant (the actual quasi-interpolant control points will lie much closer to the curve; we have moved them away from their actual position for illustrative purposes); the dotted lines indicate the boundaries between the groups, with the gray points being shared by two groups; and the triangles indicate the position of the Greville points.
This sampling method reduces the number of base surface evaluations to about one sample per control point.
Quasi-interpolated surface pasting
Ideally, we would be able to integrate quasi-interpolation into surface pasting by running four independent quasi-interpolations to set the boundary control points, then four more independent quasi-interpolations to set the second layer of control points, and so on. However, as seen in Figure 2, the boundary layers

34 B. Conrad and S. Mann

of control points overlap, and while the gray control points in this gure can

be set independently, the black ones are shared by two boundaries. To build

a tensor-product patch, we need the two quasi-interpolation solutions that

compute a group of black points to give these points the same settings.

Our solution is to sample the base surface at the corners of the embed-

ded feature domain for position and as many derivatives as we are trying to

taopparcohxiiemveataepaplroonxgimthaeteboCu1ndcaornyt.inIunitoyu,rsiomwpleemsaemntpalteidonf,owr epowseirtieoonnalyndtryirnsgt

derivatives (including mixed partial derivatives).

Next, we used the Qd operator to set d + 1 outermost rings of control

points. With d applications of

=1 the

(Qth1e

right side operator,

of Figure 2), four for the

and four for the next layer of control points.

this means that we make eight

outer layer of control In each application,

tphoeinQts1,

operator interpolates four values (those indicated by the black points) and

quasi-interpolates the remaining values.

Note that while we quasi-interpolate points to compute the rst layer of

control points, to compute the second layer of control points, we rst quasi-

interpolate cross-boundary derivative vectors. The vector coe cients of this

second quasi-interpolant are then scaled and added to the rst layer control

points to produce the second layer of control points.

We set the remaining interior control points, which do not a ect the

cross-boundary derivatives, using the standard pasting method.

Results

We integrated the Q0 and Q1 quasi-interpolants into surface pasting. In our

tpthoairsatpipcpaurploaexrriimsmhaoptuleelmda ehCna2tvaectuiOornv(he, .3th)Tioshrredeoesrruelottifscaaincllcyau, rctahucebyi,qcwuqahusiaic-shiin-mitneatretpcrohpleoadlnatonduterbseecimrnibgpeiurdisceiandl

Ote(shts2.)

This is an improvement over accuracy on the same data.

standard

pasting,

which

empirically

had

(impWroevinagchfireovmedOa(hs1im) itloarOi(mhp2)r)o,vaemndentthefoQr 1thmeecthroosds-hbaosunadnaardydditeiroinvaatliavdes-

apvmoantaehndrteatharCmog1dpeet,adroriiinvacsesmcderoreinsrtttteirinacincntguidodkiatninyrroedtatocsltpodiiaonnesngctoritnntehoagees:pdebfaeotocrhruareenmsatCdaesaetn0rrdyidtca.hisrdecdiorCpnecat1tisnitdouiinnsitgcwyo,,inylatlonidundeuiciinnrtsyese.aersrtetWkkbninotooththtsstthiihnneeotQChne10e

Visually, the quasi-interpolation surface pasting method gives signi cant

improvements in the approximate Cd continuity around the feature bound-

aries. An example appears in Figure 5. In all three images, the feature

QQsthu11erfppsataacasesnttheedddaasrssdutuhrrsfefuaarsccfaeeamssc,ehebapnuvautesmtabinbe\tgectroeerroxnfaaemcpro"ppnrlhtoeraxohsilmaapspaoatpilenmetacsoor.sentdTtidhniineusaitltpahypreg(eQbeaor0getahdspuwCrtfhi0atahcatent.ahdpHeCpoQew1a0)eraavsnneirddn,

are cheaper to paste than standard having the same number of control

pasting, assuming we use points for both standard

afneadtuQr1e

surfaces pasting.

Better Pasting via Quasi-Interpolation

35

Fig. 5. Standard pasted feature, Q0 pasting, and Q1 pasting.

This computational gain for Q1 pasting is a result of quasi-interpolating

the cross-boundary vector eld when computing the second layer of control

points. We obtain the vectors to quasi-interpolate when we evaluate the base

surface for quasi-interpolating the boundary curve. Thus, we avoid having to

evaluate the base surface when computing the second layer of control points.

trol

pTohinetbsifgogreQst1cfoematpuuretastuiorfnaaclegsatihna,nhfoowresvtaern,dcaormdepsafsrtoinmg

needing surfaces

fewer conto achieve

ttehsetesda,mtehetolQer1anmceethaloodngretqhueirbeoduonndeartiehsi.rdInthpearntuicmublaerr,

in of

the examples we boundary points

as the standard surface pasting method to achieve the same error along the

boundary. This results in one-ninth the total number of control points in the

feature, resulting in roughly a factor of ten speedup for quasi-interpolated

surface pasting over standard surface pasting.

Conclusion

Surface pasting is a exible modeling technique that allows the creation of

msrpBueryudrofluxrtaeciicm-deeruseat.cshtoieenTlluygChtCtei0oh1rnea.enssCIduun0rltCftaiahnn1cigdesdscpiCsboac1ympodnehpritios,eiscnrwioautneeritctdisihenueisucvrafbieatlleiloceytepwsc,eieodswemneoqpnuctloaahysnseiian-ufipgensapetttereuforneprxwseioomelraarantpctidrooeonlnbydtaoruCsopcelte0prsBaauont-risonfdpartslcsaienptisnoe-.

the representation of the feature surfaces, resulting in a signi cant speedup of

the pasting technique.

We implemented the technique described in this paper for pasted surfaces

of arbitrary degree, While we have only

raendducetedstCed0

the and

Cm1etehrorodrso,nthceubexicteannsidonqutoarhtiicghseurrlfeavceelss.

of approximate continuity is straightforward, but calculating the coe cients

that weight the linear functionals will be more complicated.

Acknowledgments. Many thanks to Richard Bartels and Kirk Haller, who
have provided many valuable insights during the course of our research. We also thank Tom Lyche, who originally suggested the topic of this research. Financial support for this research was provided by NSERC, CITO, and the University of Waterloo.

36 B. Conrad and S. Mann
References

1. Barghiel, C., R. Bartels, and D. Forsey, Pasting spline surfaces, in Mathematical Methods for Curves and Surfaces, Morten D hlen, Tom Lyche, Larry L. Schumaker (eds), Vanderbilt University Press, Nashville & London, 1995, 31-40.

2. Bartels, R. and D. Forsey, Spline overlay surfaces, University of Waterloo

Report CS-92-08, 1991.

3. Boehm, Wolfgang, Inserting new knots into B-spline curves, Computer-
Aided Design 12(4) (1980), 199{201.

4. Boor, C. de and G. J. Fix, Spline approximation by quasi-interpolants,
J. Approx. Theory 8 (1973), 19{45.

5. Conrad, B., Better pasting through quasi-interpolation, University of Waterloo Report CS-99-14, 1999.

6. Cohen, E., T. Lyche, and R. Riesenfeld, Discrete B-splines and subdivision techniques in computer-aided geometric design and computer graph-
ics, Comp. Graphics and Image Proc. 14 (1980), 87{111.

7. Farin, G., Curves and Surfaces for Computer Aided Geometric Design, Fourth Edition, Academic Press, NY, 1994.

8. Forsey, D. and R. Bartels, Hierarchical B-spline re nement, Computer
Graphics 22(4) (1988), 205{212.

9.

LAypcphreo,xT. T. ahnedorLy.1L5.

Schumaker, Local (1975), 294{325.

spline

approximation

methods,

J.

10. Stollnitz, E., T. DeRose, and D. Salesin, Wavelets for Computers Graphics, Academic Press, Boston, 1996.

11. Ramshaw, L., Blossoming: a connect-the-dots approach to splines, Techn. Rep., Digital Systems Research Center, Palo Alto, 1987.

Blair Conrad and Stephen Mann Computer Science Department University of Waterloo Waterloo, Ontario, Canada N2L 3G1
beconrad@cgl.uwaterloo.ca
smann@cgl.uwaterloo.ca

