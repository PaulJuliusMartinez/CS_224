Xenos: XBOX360 GPU

Michael Doggett
Architect
November 14, 2005

Overview

• Xenos

• Rendering performance
• GPU architecture
• Unified shader
• Memory Export
• Texture/Vertex Fetch
• HDR rendering 
• Displaced subdivision surfaces

• Graphics Hardware 

• GPU Realities
• Graphics APIs
• GPU Research

2

ATI - Driving the Visual 
Experience Everywhere

• Products from cell phones to super 

computers

Gaming Console

Integrated

Gaming

Notebook

Digital TV

Multimedia

Workstation

Multi Monitor Display

Embedded 

Display

Color
Phone
Display

3

System architecture

CPU

2x 10.8 GB/s

Southbridge

2x PCIE
500MB/s

GPU
Northbridge

UNIFIED
MEMORY

22.4GB/s

700MHz
128bit
GDDR3

32GB/s

DAUGHTER

DIE

4

Rendering performance

• GPU to Daughter Die interface

• 8 pixels/clk

• 32BPP color
• 4 samples Z - Lossless compression

• 16 pixels/clk – Double Z

• 4 samples Z - Lossless compression

GPU

32GB/s

DAUGHTER

DIE

5

Rendering performance

• Alpha and Z logic to EDRAM interface

• 256GB/s
• Color and Z - 32 samples

• 32bit color, 24bit Z, 8bit stencil

• Double Z - 64 samples

• 24bit Z, 8bit stencil

DAUGHTER DIE

8pix/clk, 4x MSAA, Stencil and Z test, Alpha blending

256GB/s

10MB EDRAM

6

GPU architecture

GPU

Primitive Setup

Clipper

Rasterizer

Hierarchical Z/S

Index Stream 

Generator
Tessellator

Vertex Pipeline
Pixel Pipeline
Display Pixels

Unified Shader

Texture/Vertex Fetch

Output
Buffer

Memory Export

DAUGHTER

DIE

UNIFIED
MEMORY

7

Unified Shader

• A revolutionary step in Graphics 

Hardware 

• One hardware design that performs 

both Vertex and Pixel shaders

• Vertex processing power

Vertices

Vertex Shader

Pixels

Pixel Shader

Vertices

Pixels

Unified Shader

8

Unified Shader

• GPU based vertex and pixel load 

balancing
• Better vertex and pixel resource usage

• Union of features 

• E.g. Control flow, indexable constant, …

• DX9 Shader Model 3.0+

3 SIMDs

48 ALUs

Vec4

Scalar

Vertices

Pixels

Unified Shader

9

Memory Export

• Shader output to a computed address
• Virtualize shader resources - multipass
• Shader debug
• Randomly update data structures from 

Vertex or Pixel Shader

• Scatter write

GPU

UNIFIED
MEMORY

Memory
Export

EDRAM

10

Texture/Vertex Fetch

• Shader fetch can be either:

• Texture fetch (16 units)

• LOD computation
• Linear, Bi-linear, Tri-linear Filtering
• Uses cache optimized for 2D, 3D texture data 

with varying pixel sizes

• Unified texture cache
• Vertex fetch (16 units)

• Uses cache optimized for vertex-style data

11

Texture Arrays

• Generalization of 6 faced 

cube maps to 64 faces
• Each face is a 2D mip

mapped surface

• Not volume texture
• Applications

• Animation frames
• Varying skins for 

instanced characters / 
objects

• Character shadow 

texture flipbook 
animations

0

1

…

63

12

Texture array application :
Unique seeds for instanced shading

13

Texture array application :
Hundreds of instanced characters

14

Texture compression

• All of the old DXT formats

• DXT1, DXT2/3, DXT4/5

• Several new formats (variations on 

above formats)
• DXT3A
• DXT3A as 1111
• DXT5A
• DXN 
• CTX1

15

32 Bits

32 Bits

DXT1

Color Block

RRRRRGGGGGGBBBBB
RRRRRGGGGGGBBBBB

• Two 565 colors
• Each texel lies on line 

segment connecting these 
two colors in RGB space

• Optionally has 1-bit alpha 

channel depending on relative 
ordering of RGB colors

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

16

DXT2  DXT3

Color Block

RRRRRGGGGGGBBBBB
RRRRRGGGGGGBBBBB

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

32 Bits

32 Bits

Alpha Block

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

64 Bits

17

DXT4  DXT5

Color Block

RRRRRGGGGGGBBBBB
RRRRRGGGGGGBBBBB

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

Alpha Block
AAAAAAAA
AAAAAAAA

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

32 Bits

32 Bits

16 Bits

48 Bits

18

DXT3A

• 4-bit scalar replicated into all channels in pixel 

shader

Scalar Block

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

xxxx

64 Bits

19

DXT3A as 1111

1 bit per channel texture
Filters as you would expect

•
•
• Useful for concise masks / logical textures

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

RGBA

64 Bits

20

DXT5A

Scalar Block
XXXXXXXX
XXXXXXXX

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

16 Bits

48 Bits

21

DXN

x Block

XXXXXXXX
XXXXXXXX

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

16 Bits

48 Bits

• Same as 3Dc normal compression 
• Two-channel  version of DXT5A
• Good for tangent-space normal maps

y Block

YYYYYYYY
YYYYYYYY

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

xxx

16 Bits

48 Bits

22

CTX1

XY Block

XXXXXXXXYYYYYYYY
XXXXXXXXYYYYYYYY

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

xx

32 Bits

32 Bits

• Two-channel format with 
channels sharing two-bit 
interpolation value

• Lower quality but more 

concise tangent-space normal 
maps than DXN

23

CTX1 vs. DXN

Upper 
hemisphere 
of normals

CTX1

• Both have 8.8 anchor points
• CTX1

• x and y share 2-bit 
interpolation value

• 4 representable normals per 

4×4 block of texels

• 4 bits per texel

DXN

•

• DXN

Independent 3-bit 
interpolation values for x and 
y

• 64 representable normals per 

4×4 block of texels

• 8 bits per texel

24

High Dynamic Range Rendering

• Special compact HDR render target 

format:
• Just 32 bits: 7e3 7e3 7e3 2
• Compatible with multisample antialiasing
• R, G and B are unsigned floating point 

numbers

• 7 bits of mantissa
• 3 bits of exponent
• Range of 0..16

• 2 bits of alpha channel

• 16-bit fixed point at half speed

• With full blending

25

Displaced subdivision surfaces

• Prototype algorithm
• Vineet Goel, ATI research Orlando

26

Displaced subdivision surface 
algorithm

• Tessellator: 

• Generates 64 vertices for each patch that are 

fed into the VS.
• Vertex Shader: 

• Reads in one-ring, computes Stam’s method 

using precomputed table lookup 

• Adds Displacement map

• Pixel Shader

• Adds bump mapping and surface color

27

Displaced subdivision surfaces

Base mesh

• Used by Tessellator
to generate vertices

Subdivision surface

Displaced subdivision surface

28

Graphics Hardware

29

GPU realities

• Die size/cost/yield
• One die, multiple products
• Decreasing technology, increasing 

power

• How to cool large chips ?
• Ensure design is scalable
• Refinements and enhancements of the 

current pipeline

30

Graphics APIs

• Windows Vista
• Virtual Memory
•

Improved state change efficiency

• Vista DirectX9

• ClearType
• DirectX10

• Unified shader programming model
• Geometry Shader

• Access to entire triangle and adjacent vertices
• Output to array of render targets, cube maps

• Stream output from Geometry Shader

31

GPU research

•

Improved multi-GPU performance and 
antialiasing
• CrossFire
• Multi-chip, multi-core

• Higher Order Surfaces 

• Subdivision surfaces, NURBS

• General Purpose GPU (GPGPU)

• Driving improved 32bit float performance
• Xenos shader scatter write

32

GPU research - Shadows

• Performance enhancements for stencil 

shadows and shadow buffers

• Hierarchical rendering

• User low resolution shadow map to find areas 

that require detail rasterization

• Chan, Durand EGSR04

• Stencil shadow volumes using 8x8 pixel tiles

• Aila, Akenine-Möller GH04 

•

Improving Z, stencil performance

33

GPU research – Ray Tracing

• Accelerating ray tracing on GPUs

• Build and update acceleration structures

• Xenos shader scatter write

• GPU evolution affected by ray tracing

34

Conclusion

• Xenos

• Architecture
• Features

• Graphics Hardware

• Future
• Research

35

Questions ?

36

