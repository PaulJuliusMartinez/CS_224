Overview
Lecture 1

Computer Science andEngineering  College of Engineering  The Ohio State University

What is Java?
Computer Science and Engineering  The Ohio State University
 Developed by Sun Microsystems
 James Gosling  Birth: 1994 (progenesis from Oak)
 Based on C/C++
 Similar syntax, control, data structures  Imperative, object-oriented
 Originally designed for building Web/Internet applications
 Now often viewed as a "general purpose" programming language
 Currently enjoys wide-spread acceptance
 Had immediate impact, then continued success

Resources
Computer Science and Engineering  The Ohio State University
 On line tutorials from Sun ("trails")
 http://java.sun.com/docs/books/tutorial
 On line API documentation
 http://java.sun.com/javase/6/docs/api
 Carmen
 http://carmen.osu.edu  grades
 Class website
 Handouts, lecture notes, lab assignments  Pointers to more resources

The Java Virtual Machine (JVM)
Computer Science and Engineering  The Ohio State University
 An abstract computer architecture
 The software that executes Java programs  Part of Java Runtime Environment (JRE)
 Java program compiled into bytecode  Java bytecode then interpreted by JVM

Java program (text file)

MyProg.java javac

Java bytecode MyProg.class (binary)

compile interpret

java

JVM

OS / architecture

Implications of JVM
Computer Science and Engineering  The Ohio State University
 Portability
 Sun slogan: "Write once, run anywhere"  JVM is ubiquitous
 Environment configuration
 path variable
 for shell to find java / javac executables
 classpath variable
 for JVM to find bytecode at execution time
 Performance
 Extra layer comes at (small) penalty in performance

Environment Setup: JDK 1.5
Computer Science and Engineering  The Ohio State University
 Version 1.5 == version 5  Lab: CL 112 (& Baker 310 if available)
http://www.cse.ohio-state.edu/cs/labs.shtml
 Follow these steps:
 log into the solaris (ie stdsun) or linux (ie stdlogin) environment
 subscribe to JDK-CURRENT $ subscribe JDK-CURRENT
 log out and log back in
 Confirm set-up
$ java ­version java version "1.5.0_08" ...

Install Java Platform at Home
Computer Science and Engineering  The Ohio State University
 Can be installed on different platforms:
 Solaris, Windows, Linux, ...
 Trail: Getting Started > "Hello World!"
 Download OS-specific Java Development Kit (JDK)
 Tools for program development (eg javac)  JRE
 Create simple program (with a text editor)  Compile (with javac)  Run (with java)
 Make sure to download:
 J2SE JDK (not J2EE, not JRE)  Version 6 (latest: 1.6.0_13, ie update 13)

Getting Started: 1. Creating Source File
Computer Science and Engineering  The Ohio State University
 Using any text editor:
 Create a file HelloWorldApp.java  Copy the following code into this file:
public class HelloWorldApp { public static void main(String[] args) { // Display "Hello World!" System.out.println("Hello World!"); }
}
 Note:
 Class name must match file name  Java is CASE SENSITIVE!

Getting Started:
2. Compiling the Program
Computer Science and Engineering  The Ohio State University
 Compile using javac
$ javac HelloWorldApp.java
 Generates a file named HelloWorldApp.class
$ ls HelloWorldApp.class HelloWorldApp.java
 Problem
javac: command not found
 Cause
 Shell can not find javac executable
 Solutions
 Use full path on command line
$ /usr/local/jdk1.5.0_08/bin/javac HelloWorldApp.java
 Set path environment variable
$ export PATH=$PATH:/usr/local/jdk1.5.0_08/bin/javac

Getting Started:
3. Running the Program
Computer Science and Engineering  The Ohio State University
 From same directory, run using java
$ java HelloWorldApp Hello World!
 Note:  argument is HelloWorldApp, not a file (.java or .class)
 Problem
Exception in thread "main" java.lang.NoClassDefFoundError: HelloWorldApp
 Cause  JVM can not find HelloWorldApp bytecode (ie .class file)
 Solutions  Explicitly set classpath on command line
$ java ­classpath ~/459.23/example HelloWorldApp
 Set classpath using environment variable
$ export CLASSPATH=.:~/459.23/example

Object-Oriented Programming
Computer Science and Engineering  The Ohio State University
 Fundamental component is an object
 Encapsulates state and behavior  Contains fields and methods
 Each object is an instance of a class
 Class declaration is a blueprint for objects

instance of

Pencil color

blue

red

black

Object Creation and Deletion
Computer Science and Engineering  The Ohio State University
 Class constructor initializes fields
class Pencil { String color; Pencil (String c) { color = c; }
}
 Explicit object creation with new();
java.util.Date d = new java.util.Date(); Integer count = new Integer(34); Pencil p1 = new Pencil("red");
 Unlike C/C++, references not explicitly freed
 References go out of scope (become null)  Automatic garbage collection (eventually) deletes
unreachable objects

Sample Class Declaration

class Pencil { String color; int length = 14;

Computer Science and Engineering  The Ohio State University

Pencil (String c) { color = c;
}

void setColor (String newColor) { color = newColor;
}

String getDescription () { if (length < 15) { return "small: " + color; } else { return "large: " + color; }
} }

Language Basics: Statements
Computer Science and Engineering  The Ohio State University
 Similar to C/C++  Control flow:
 if, if-else, if-else if  switch  for, while, do-while  break  continue  Statements  Separation with ;  Blocks with { . . . }  Comments with // or /* . . . */
 Operators  arithmetic: + - * / % ++ -- ...  logical (for booleans): & | ^ ! && ||  bit (for integer types): & | ^ ~ << >> >>>  relational: == != < > <= >=

Language Basics: Types
Computer Science and Engineering  The Ohio State University
 Primitive types
 boolean, byte, short, int, long, float, double, char  Size of each defined by language (eg int: 4 bytes)
 Reference types, provided by:
 Java standard libraries
 String, Integer, Date, System, ...
 Programmer
 Person, Animal, HelloWorldApp, ...
 Arrays
 Can contain primitive or class types
 int[], float[], String[], ...
 Indexed starting from 0

Language Basics: Variables
Computer Science and Engineering  The Ohio State University
 Declaration
int counter; boolean isDone; String firstName; Date d; float[] measurements; Animal[] zoo;
 Explicit initialization with declaration
int counter = 3; boolean isDone = false; String firstName = "Nima"; java.util.Date d = new java.util.Date(); Integer c = new Integer(34); float[] measurements = {3, 5, 6.5}; Animal[] zoo = new Animal[50];
 Implicit initialization (for data members only, lecture 2)  Language-defined values for all primitive types
 false for boolean, 0 for int, ...
 Special value (null) for class types

References: Aliasing

Computer Science and Engineering  The Ohio State University

 A reference is a handle to some data
java.util.Date d = new java.util.Date();
d Thu Jan 3 8:40:12 EST 2007

 Assignment copies the handle

 Creates an alias

java.util.Date d2 = d;
d

d2 Thu Jan 3 8:40:12 EST 2007

d.setTime(0);

d

d2 Wed Dec 31 19:00:00 EST 1969

 cf. Basic types: assignment copies the value

int i = 3;

int j = i;

i++; //now i==4 and j==3

Best Practices: Files and Classes
Computer Science and Engineering  The Ohio State University
 Declare one class per file  Give file the same name as the class
declaration it contains
 class HelloWorldApp declaration appears in HelloWorldApp.java
 class Pencil is defined in Pencil.java

Summary
Computer Science and Engineering  The Ohio State University
 JVM
 .java (source) vs .class (bytecode)  javac (compiler) vs java (interpretter)
 Environment configuration
 Setting class and classpath
 Sample program: Hello World  Language basics
 Statements  Types  Variables

