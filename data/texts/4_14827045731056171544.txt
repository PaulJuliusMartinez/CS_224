Jitter Methods for Investigating Spike Train Dependencies

Matthew Harrison
Carnegie Mellon University

Asohan Amarasingham
Rutgers University

Stuart Geman
Brown University

Introduction
Many important questions in neural data analysis revolve around the time scale of statistical dependencies in spike trains. For example, changes in background firing rate across trials introduce broad time scale correlations into spike trains that can be confounded with other dependencies. This is in our terms related to the general issue of how to analyze neural data in cases where standard assumptions of statistical repeatability across trials are not reasonable, or when there is no clear notion of a trial at all.
Resampling Methods for Disambiguating Dependencies
Resampling methods are a useful tool for disambiguating dependencies. They work by resampling the data to create surrogate data sets that preserve some dependencies and destroy others. Comparing the original data set to the surrogate data sets can identify specific types of dependencies. For example, standard descriptive methods, such as the cross-correlogram (CCG) and the joint peri-stimulus time histogram (JPSTH) [1] can be adapted to distinguish event-locked from non-event-locked correlations, as in the shuffle-predictor. The shuffle-predictor creates surrogate data sets by shuffling trial labels, which does not easily disambiguate interactions on multiple time scales, and is confounded by nonrepeating trials.
Here we describe a different class of resampling methods, called jitter methods, that are useful for disambiguating dependencies on different time scales [2][3].

1. Trial Shuffling

trial 1 trial 2 trial 3 trial 4 trial 5

Original Data

Advantages
· disambiguates event-locked from non-event locked dependencies
· accounts for all non-Poisson spiking patterns

3. Shuffle Jitter

trial 1 trial 2 trial 3 trial 4 trial 5

Original Data

Advantages
· disambiguates event-locked from non-event locked dependencies
· disambiguates fine from coarse time scale dependencies

Permute trial labels

Resampled Data

trial 1 trial 2 trial 3 trial 4 trial 5

Disadvantages
· cannot disambiguate timescales · requires multiple trials · assumes repeatable trials

Permute trial labels of single spikes
within jitter windows
Resampled Data
trial 1 trial 2 trial 3 trial 4 trial 5
Disadvantages
· requires multiple trials · does not account for nonPoisson spiking on fine timescales

2. Spike Jitter

trial k

Original Data

Perturb spikes within jitter windows

trial k

Resampled Data

Advantages
· disambiguates fine from coarse time scale dependencies
· applicable for single trials
· does not assume repeatable trials

Jitter Window
Disadvantages
· cannot disambiguate eventlocked from non-event-locked dependencies
· does not account for nonPoisson spiking on fine timescales

4. Pattern Jitter

trial k

Original Data

Perturb spike patterns within jitter windows

trial k

Resampled Data

Advantages
· same as Spike Jitter
· accounts for most non-Poisson spiking patterns

Disadvantages
· cannot disambiguate eventlocked from non-event-locked dependencies
· requires more computation

Corrected Cross-Correlograms

Resampling methods can be used to easily "correct" cross-correlograms (CCGs) and other such descriptive statistics. CCGs are computed for each of the surrogate data sets. Then the average CCG is subtracted from the CCG of the original data set. The result gives a "corrected" CCG that shows only the effects of those dependencies that were destroyed by resampling. The collection of surrogate data sets can also be used to create acceptance bands for zero corrected correlation.

Example A (Simulation)

·Repeatable trials

Not explained by firing rates

·Fast and slow "spiking" correlations

Correlations on two time scales

·Constant firing rates (homogeneous Poisson)

Excess correlation after correction
95% pointwise acceptance bands for no excess correlation
PSTHs

Excursions outside of the bands are significant peaks
95% simultaneous acceptance bands control for testing multiple lags
Raw CCG

Shuffle corrected CCG
Shuffle correction confounds the two
dependencies

Jitter corrected CCG
500ms jitter window

Jitter corrected CCG
25ms jitter window

Jitter corrected CCG
1ms jitter window

Jitter corrects for dependencies on time scales larger than the
jitter window

Example B1 (Simulation)

Example B2 (Simulation)

·Non-repeatable trials (trial-to-trial variability)

·Non-repeatable trials (trial-to-trial variability)

·No spiking correlations (independence)

·Fast spiking correlations

·Slowly varying, correlated firing rates

·Slowly varying, correlated firing rates

(inhomogeneous Poisson)

Can masquerade as (inhomogeneous Poisson)
slow spiking correlation

PSTHs

Do not reflect firing rates

Raw CCG

PSTHs

Raw CCG

Shuffle corrected CCG

Jitter corrected CCG

Shuffle corrected CCG

25ms jitter window
Jitter is not affected

by (slow) trial-to-

trial variability

Jitter corrected CCG
25ms jitter window

Example C1 (Simulation)

·Repeatable trials
·Slow spiking correlations
·Quickly varying, correlated firing rates (inhomogeneous Poisson)

Creates a sharp peak in the raw CCG

PSTHs

Raw CCG

Example C2 (Simulation)

·Repeatable trials

·Fast and slow spiking correlations

Examples A and C2
·Quickly varying, correlated firing are identical, except

rates (inhomogeneous Poisson)

for the PSTHs

PSTHs

Raw CCG

Shuffle corrected CCG
(Slow) non-eventlocked correlations

Spike jitter corrected
25ms jitter window
Fast (event-locked) correlations

Shuffle corrected CCG

Spike jitter corrected
25ms jitter window

Mixtures of several types of correlations

Shuffle jitter corrected
500ms jitter window
Slow non-eventlocked correlations

Shuffle jitter corrected
25ms jitter window
No fast non-eventlocked correlations

These two examples illustrate how various resampling methods can be used together to explore multiple types of confounded dependencies. Shuffle jitter can be especially powerful in situations like this.

Shuffle jitter corrected
25ms jitter window
Fast non-eventlocked correlations

Other Types of Dependence Example D (Real Data)

Jitter methods are applicable for investigating the time scale of arbitrary spatio-temporal dependencies, not just correlations. Simply replace the CCG with another measure of dependence.
Conclusions

·Single neuron

Pattern Jitter

·Are there any unusual repeating spike triplets?

max ISI in

>0 ms: p-value 0.001
>1 ms: p-value 0.001 >2 ms: p-value 0.027

pattern >3 ms: p-value 0.015

>4 ms: p-value 1.000

Spike Jitter: p-value 0.000

>5 ms: p-value 1:000 >5 ms: p-value 1:000

Pattern jitter reveals that the

unusual patterns can be explained

by short ISI effects, like bursting

Resampling methods are a useful and intuitive way to investigate dependencies in neural spiking data. Jitter methods are a specific class of resampling methods that disambiguate dependencies on differing time scales. They nicely complement existing resampling methods, like trial shuffling, and are also useful in situations where trial shuffling is inapplicable, like single trials or strong trial-to-trial variability.

References
[1] Dynamics of neuronal firing correlation: modulation of `effective connectivity'. A. Aertsen, G. Gerstein, M. Habib and G. Palm, J. Neurophysiology 61: 900-917, 1989.
[2] Statistical methods for the assessment of temporal structure in the activity of the nervous system. A. Amarasingham, Ph.D. Dissertation Brown University, 2004.
[3] Discovering compositional structures. M. Harrison, Ph.D. Dissertation Brown University, 2005.

Acknowledgements
The data used in Example D is courtesy of Ben Philip, Wilson Truccolo and Carlos Vargas in John Donoghue's lab at Brown University.
This work was supported in part by the National Science Foundation under Grants DMS0240019 and IIS- 0423031 and a Postdoctoral Fellowship in Biological Informatics to AA, by the Army Research Office under Contract DAAD19-02-1-0337, and by the Office of Naval Research under Contract ONR N000140610749.

