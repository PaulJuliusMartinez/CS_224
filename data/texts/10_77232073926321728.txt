Database Management Systems Lecture : 2
Introduction to Relational Model
1
Why Study the Relational Model?
 Relational Model is the most popular and widely used data model.
 The DB-market is completely dominated by systems supporting the relational data.
 Leading (commercial) manufacturers of relational DB-products:  Oracle  Microsoft (Access, SQL Server)  IBM (DB2, Informix)  MySQL (Freeware)
3

5/21/2012
Relational Data Model
 The relational database was invented by E. F. Codd at IBM in 1970.
 For this pioneering work Codd received the Turing Award in 1982, the `Nobel price of informatics`.

Edgar F. Codd

2

Relational Database
 Relational databases are collections of one or more relations (relation is a two-dimensional table).
 The data or information for the database are stored in these tables. A table is simply a set of rows (tuples, records) and columns (attributes, fields).
 So, A relational database is a collection of data items organized as a set of formally-described tables from which data can be accessed or reassembled in many different ways without having to reorganize the database tables.
4

1

Relational Database (Cont...)
 Any Relation made up of 2 parts:  Schema : specifies name of relation, plus name and type of each column.
If A1, A2, ..., An are attributes and D1,D2, ..., Dn are data types then R = (A1D1, A2D2, ..., AnDn ) is a relation schema.
E.G. Students (Id char, Name char, Address char, Phone char).
 Instance : The current values of a relation are specified by a table (rows and columns).
5

Relational Database (Cont...)
The following table should help navigate relational model terminology:

Relation Model Term
Attribute Domain Tuple Attribute value Entity

Database Term
Column Column Type Row Column value Table

7

5/21/2012

Relational Database (Cont...)

Id 1001 1002 1003

Name Address Phone

Asad

Dhaka 01712-----

attributes (or columns)
tuples / rercord (or rows)

Dipa

Khulna 01925-----

Faisal

Barisal 08361-----

Relation - Student

6

Relational Database (Cont...)
 Information about an enterprise is broken up into parts, with each relation storing one part of the information.
 E.g. account : information about accounts depositor : which customer owns which account customer : information about customers
8

2

The account Relation

The depositor Relation

5/21/2012

9
The customer Relation
11

10
Why Split Information Across Relations?
 Storing all information as a single relation such as bank(account_number, balance, customer_name, ..)
results in
 repetition of information  e.g.,if two customers own an account (What gets repeated?)
 the need for null values  e.g., to represent a customer without an account
 Normalization theory deals with how to design relational schemas.
12

3

Properties of a Relation
A relation is a table which obeys a certain restricted set of rules:
1. Every relation in a database must have a distinct name. 2. Every column in a relation must have a distinct name within the relation. 3. All entries in a particular column must be of the same type. 4. The ordering of columns in a relation is not significant. 5. The ordering of rows in a relation is not significant. 6. Each row in a relation must be distinct. In other word, duplicate rows are not allowed in a relation. 7. Each cell in a relation should contain only atomic value. In other word, multiple-values are not allowed in the cells of a relation.
13

1. Every relation in a database must have a distinct name.

Modules moduleName Relational Database Systems Relational Database Design Deductive Databases Object-oriented Databases Distributed Databases Database Development Data Administration

level 1 1 4 4 2 2 2

courseCode MIS MIS MIS MIS MIS MIS MIS

staffNo 244 244 445 445 247 null null

Lecturers

staffN o
244

staffName Mr. Rakib

247 Mr. Titu

124 Mr. Masum

145 Mr. Faisal

445 Mr. Habib

status
L L SL L P

15

5/21/2012

Next few slides explain the properties

14

2. Every column in a relation must have a distinct name within the relation.

Modules moduleName Relational Database Systems Relational Database Design Deductive Databases Object-oriented Databases Distributed Databases Database Development Data Administration

level 1 1 4 4 2 2 2

courseCode MIS MIS MIS MIS MIS MIS MIS

staffNo 244 244 445 445 247 null null

Lecturers

staffNo 244 247 124 145 445

staffName status

Mr. Rakib L

Mr. Titu

L

Mr. Masum SL

Mr. Faisal L

Mr. Habib P

Names of columns are distinct. It is not possible to have two columns having same name in a table. Since a column specifies a attribute, having two columns with same name mean that we are specifying the same property in two columns, which is not acceptable.

16

4

3. All entries in a particular column must be of the same type.

Lecturers staffNo staffName

status

244 Mr. Rakib 247 Mr. Titu 124 Mr. Masum 145 Mr. Faisal 445 Mr. Habib

L L SL L P

Here, the column staffNo contains only numaric data and the column staffName contains only string/ character type data.

17

6. Each row in a relation must be distinct.

Lecturers staffNo staffName 244 Mr. Rakib 247 Mr. Titu 124 Mr. Masum 145 Mr. Titu 445 Mr. Habib

status L L SL L P

Every table must have a primary key. Primary key is some column of the table whose values are used to distinguish the different records of the table. There must be some column having distinct value in all rows by which one can identify all rows. That is, all rows should be unique.

19

5/21/2012

4. The ordering of columns in a relation is not significant.
5. The ordering of rows in a relation is not significant.

DName

DeptID

Manager

DeptID

DName

Manager

LID 1

Smith

4

EDU

Faisal

HR 2

William

2

HR William

FIN 3 Kamal 1 LID Smith

EDU

4

Faisal

3

FIN Kamal

Table: a

Table: b

Ordering is irrelevant for both rows and columns. Here, Table (a) and (b) represent the same table.

18

7. Each cell in a relation should contain only atomic value.

FirstName Mr. Dr. Md.

MiddleName LastName

Abdur

Rahman

Habibul

Islam

Nasir

Uddin

................. ................. ................. .................

Another important property of table is each item value is atomic. That is, item can`t be further divided. For example, take a name item. It can have first name, middle name, or last name. Since these would be three different strings so they can`t be placed under one column, say Name. All the three parts are placed in three different columns.
20

5

Degree of a Relation

 The total number of columns in a table specifies its degree. A table with n columns is said to have degree n.

 See Figure 1, table represented here is of degree 3.

Lecturers staffNo staffName

status

244 Mr. Rakib 247 Mr. Titu 124 Mr. Masum 145 Mr. Faisal 445 Mr. Habib

L L SL L P

Figure 1

21

Domain

 Domain is set of all possible values for an attribute.

 Attribute values are (normally) required to be atomic; that is, indivisible
 E.g. multivalued attribute values are not atomic  E.g. composite attribute values are not atomic
 The special value null is a member of every domain.

Lecturers staffNo 244 247 436

staffName Abir Mina Faisal

status L SL AP

 For example there is a Lecturers table in which there is a status attribute. Suppose, status attribute can take L, SL or AP. Then we can say all these values make the domain for the attribute Designation.

23

5/21/2012

Cardinality of a Relation

 The total number of rows in a table specifies its cardinality. A table with n rows is said to have cardinality n.
 See Figure 2, table represented here is of cardinality 5.

Lecturers staffNo staffName

status

244 Mr. Rakib

L

247 Mr. Titu

L

124 Mr. Masum SL

145 Mr. Faisal

L

445 Mr. Habib

P

Figure 2

22

Different Types of Keys in Relational Data Model
24
6

Primary Key

 Primary key is one or more fields (columns) whose values uniquely identify each record in a table.
 Each relation must have a primary key. This is to enforce the property that duplicate rows are forbidden in a relation.
 A primary key cannot allow Null values and must always have a unique index.

Employees EmpNo 1001 1002 1003 1004

EName Jon William William Smith

DOJ 20-Jun-2009 12-Jul-2009 20-Jul-2009 20-Jul-2009

 In this table, EmpNo can be used as a primary key. Since, it is the only column where the values are all distinct.

25

Candidate key

 In any relation there may be a number of candidate keys. That is, a column or group of columns which can act in the capacity of a unique identifier. The primary key is chosen from one of the candidate keys.

Lecturers

staffNo

staffName

status

244 Abir

L

247 Mina

SL

436 Faisal

AP

Fig. 3 Lecturers table having "staffNo", "staffName" and "status" as candidate keys

 In this table, the attributes staffNo, staffName and Status are currently candidate keys since the values in these columns are currently unique. But it is possible that we have more than one lecturer named Abir, and more than one lecturer is likely to be a senior lecturer ­ an SL. This leaves staffNo ­ a unique code for each lecturer of a university ­ as the only possible primary key.
27

5/21/2012

Composite primary key

 Not every relation will have single-attribute primary key. There can be a possibility that some combination of attribute when taken together have the unique identification property. These attributes as a group is called composite primary key.

Students stuNo 1001 1002 1001

program BBA BBA MBA

stuName Titu Jamil Riaz

Employees

EmpNo SocSecurityNo Name

Age

1011

2364236

Harry

21

1012

1002365

Sympson 19

1002

MBA Table: a

Jamil

1013

1056300

Larry

Table: b

24

 Combination of stuNo and program in Table a and EmpNo and SocSecurityNo in Table b can be used as a primary key.

26

Candidate key (Cont...)
 Any candidate key, and consequently any primary key, must have two properties:
 It must be unique, and  It must not be null (null is a special
character used to indicate a missing or incomplete datum)

28
7

Alternate key

 A candidate key that is not a primary key is called an alternate key.

Employees EmpNo SocSecurityNo Name

1011

2364236

Kamal

1012

1002365

Dipa

1013

1056300

Faisal

Age 21 19 24

 In this table, if EmpNo is primary key then SocSecurityNo is the alternate key.
29

Different Types of Relationships in Relational Data Model
31

5/21/2012

Foreign Key

 Foreign key is one or more fields (columns) in a table that refer to the primary key field or fields in another table. A foreign key indicates how the tables are related.

Courses courseCode CIT1101 CIT2202
CIT3303

courseName
Introduction to Computer
Computer Application in Business
Management Information Systems

staffNo 247 436
244

Lecturers staffNo staffName 244 Abir 247 Mina 436 Faisal

status L SL AP

Two tables courses and lectures relate through the common field staffNo

 Here, staffNo is a foreign key in the courses` table. This column draws its values from the same domain as the staffNo column ­ the primary key of the lecturers` table.

30

Relationships
 Relationship is an association that is established between common fields (columns) in two tables.
 A relationship can be one-to-one, one-tomany, or many-to-many.

32
8

One-to-One Relationships
 Two tables are related in a one-to-one (1--1) relationship if, for every row in the first table, there is at most one row in the second table.
 In Microsoft Access, one-to-one relationships may be necessary in a database when you have to split a table into two or more tables because of security or performance concerns .
 Tables that are related in a one-to-one relationship should always have the same primary key, which will serve as the join column.
33
One-to-Many Relationships
 A one-to-many relationship is the most common type of relationship.
 Two tables are related in a one-to-many (1--M) relationship if for every row in the first table, there can be zero, one, or many rows in the second table, but for every row in the second table there is exactly one row in the first table.
35

5/21/2012
One-to-One Relationships (Example)
1. EmployeeID appears in both tables -- -as a primary key ...
2. ... and as a foreign key.
34
One-to-Many Relationships (Example)
1. One supplier ... 2. ... can supply more than one product 3. ... but each product has only one
supplier.
36
9

Many-to-Many Relationships
 Two tables are related in a many-to-many (M-- M) relationship when for every row in the first table, there can be many rows in the second table, and for every row in the second table, there can be many rows in the first table.
 Many-to-many relationships can't be directly modeled in relational database programs, including Microsoft Access. These types of relationships must be broken into multiple oneto-many relationships.
37

Data Definition in Relational Model

 Data Definition is a set of principals concerned with how data is structured.
 The two templates below define the current schema for the academic database:

Domains courseNames: CHARACTER(40) courseCodes: CHARACTER(7) staffNos: INTEGER statuses: CHARACTER(6): {L, SL, AP, Prof} staffNames: CHARACTER(20)

Relation Courses Attributes moduleName: moduleNames courseCode: courseCodes staffNo: staffNos Primary Key moduleName Foreign key staffNo references Lecturers

Relation Lecturers Domains Attributes staffNo: staffNos staffName:StaffNames status:statuses Primary Key staffNo

39

5/21/2012
Many-to-Many Relationships (Example)
1. Primary key from the Orders table 2. Primary key from the Products table 3. One order can have many products ... 4. ... and each product can appear on
many orders.

38
Data integrity
 Data integrity refers to the validity of data. Integrity is enforced via integrity rules or constraints.
 In the relational data model there are two integrity rules:  Entity Integrity  Referential Integrity
40

10

Entity Integrity

 Entity Integrity concerns primary keys. Entity integrity is an integrity rule which states that every table must have a primary key and that the column or columns chosen to be primary key should be unique and not null.
 Entity Integrity is enforced by adding a primary key part to a schema definition.

Domains staffNos: INTEGER statuses: CHARACTER(6): {L, SL, AP, Prof} staffNames: CHARACTER(20)

Relation Lecturers Domains Attributes staffNo: staffNos staffName:StaffNames status:statuses Primary Key staffNo
41

Referential Integrity

Modules moduleName Relational Database Systems Relational Database Design Deductive Databases Object-oriented Databases Distributed Databases

level 1 1 4 4 2

courseCode MIS MIS MIS MIS MIS

staffNo 244 244 445 445 247

In case of university database every module is assigned to a lecturer. No module record has a null staffNo value. We enforce this by adding a not null part to the foreign key definition as below:

Domains courseNames: CHARACTER(40) courseCodes: CHARACTER(7) staffNos: INTEGER

Relation Courses Attributes moduleName: moduleNames courseCode: courseCodes staffNo: staffNos Primary Key moduleName Foreign key staffNo references Lecturers Not Null
43

5/21/2012
Referential Integrity
 Referential Integrity concerns foreign keys. The referential integrity rules states that any foreign key value can only be in one of the two states.
 The common state is, foreign key value refers to a primary key value of some table in the database.
 Second state is, foreign key value can be null.
42

Maintaining Referential Integrity
 In our university database, for example, if we delete a row from the Lectures table (our target table) we must decide what should happen to related rows in the Modules table. Three possibilities exists:
1. Restricted delete ­ This is the careful approach. It means we forbid the deletion of the lecturer row until all module rows for that lecturer have been deleted.
2. Cascade delete ­ This is the confident approach. If we delete a lecturer row all associated module rows are deleted.
3. Nullifies delete ­ This is the medium approach. If we delete a lecturer row we set the staff numbers of relevant modules to null.
44

11

Maintaining Referential Integrity (Cont...)

Domains courseNames: CHARACTER(40) courseCodes: CHARACTER(7) staffNos: INTEGER

Relation Courses Attributes moduleName: moduleNames courseCode: courseCodes staffNo: staffNos Primary Key moduleName Foreign key staffNo references Lecturers Not Null Delete Restricted Update Cascades

45

5/21/2012
Data Manipulation in Relational Model
 Data manipulation has four aspects:
1. How we input data into a relation. 2. How we remove data from a relation. 3. How we amend/update data in a relation. 4. How we retrieve data from a relation.  When Codd first proposed the relation data model, by far the most attention was devoted to the final aspect of data manipulation ­ information retrieval. Retrieval in the relational data model is conducted using a series of operations known collectively as the relational algebra.
46

Any Question
?
47

Thanks to All
48
12

