Introduction to Scientific Visualization
Stefan Bruckner
Simon Fraser University / Vienna University of Technology

Visualization ­ Definition
visualization: to form a mental vision, image, or picture of (something not visible or present to the sight, or of an abstraction); to make visible to the mind or imagination
[Oxford Engl. Dict., 1989]
tool to enable a user insight into data

Stefan Bruckner

"The purpose of computing is insight, not numbers."
[R. Hamming, 1962]
1

Visualization ­ Goals
Visualization, ...
... to explore
Nothing is known, Vis used for data exploration
... to analyze There are hypotheses, ?! Vis used for verification or falsification
... to present "everything" known about the data, ?! Vis used for communication of results

Stefan Bruckner

2

Visualization ­ Areas

Three major areas
Volume Visualization Flow Visualization
Information Visualization

inherent spatial reference
Scientific Visualization
2D/3D nD
usually no spatial reference

Stefan Bruckner

3

InfoVis vs. SciVis
N-dimensional vs. 2/3-dimensional SciVis can be N-dimensional too (time series, simulation data, ...)
Abstract data vs. spatial data InfoVis data may also have spatial attributes (country, state, ...)
Discrete data vs. continuous data InfoVis data may be sampled from a continuous domain

Stefan Bruckner

4

SciVis ­ Examples (1) Volume data

Stefan Bruckner

5

1

SciVis ­ Examples (2) Flow data

Medicine

Stefan Bruckner

6

Cartography

isolines to visualize compass deviations

Stefan Bruckner

8

wind flow visualization

Experimental Flow Investigation
Fixation of tufts, ribbons on ... aircraft in wind tunnels ship hull in fluid tanks
Introduction of smoke particles (in wind tunnel) Introduction of dye (in fluids)

Stefan Bruckner

10

sketch from Leonardo Da Vinci`s anatomical notebooks

Stefan Bruckner

7

medical illustrations by Clarice Ashworth Francone

Meteorology map with iso-pressure lines

weather fronts

Stefan Bruckner

map for pilots
9

Visualization Scenarios

complexity, tech. demands

interactive steering

interactive visualization

passive visualization

benefits, possibilities

Stefan Bruckner

11

2

Visualization Pipeline

Acquisition Enhancement
Mapping Rendering
Stefan Bruckner

Data are given
Data are processed Data are mapped to, e.g., geometry
Images generated
12

Data

Focus of visualization, everything is centered around the data
Driving factor (besides user) in choice and attribution of the visualization technique
Important questions
In what domain are the data given? (data space)
What is the type of data? (data characteristics)
Which representation makes sense?

Stefan Bruckner

13

data space

Data Space vs. Data Characteristics
data characteristics
1D 2D 3D

1D y=f(x)

spatial curve x(t)

2D 2D flow v(x)

3D scalar field d(x)

Stefan Bruckner

14

3D flow v(x)

Grids ­ General Information
Important questions Which data organization is optimal? Where do the data come from? Is there a neighborhood relationship? How is the neighborhood information stored? How is navigation within the data possible? Calculations with the data possible ? Are the data structured?

Stefan Bruckner

15

block-structurde grids
}

Grid - Types Cartesian grid Curvilinear grid Unstructured grid Scattered data

dy

x[xmax,0]

dx

x[0,ymax]

x[0,0]

x[0] c[0]
e[0] x[1]

}

Stefan Bruckner

16

Grids - Survey

structured grids

orthogonal grids

equidist. grids

cartesian grids (dx=dy)
regular grids (dxdy)

rectilinear grids

curvi-linear grids

unstructured grids
Stefan Bruckner

hybrid grids
17

miscell.

3

Volume Visualization
VolVis = visualization of volume data Mapping 3D2D
Volume data 3D1D data Scalar data, 3D data space, space filling
User goals Gain insight in 3D data Structures of special interest + context

Stefan Bruckner

18

Volume Data

Medicine CT, MRI, PET, Ultrasound
Biology Confocal microscopy, histological cuts
Geology Seismic surveys
Material testing Industrial CT

Stefan Bruckner

19

3D Data Space
Cartesian/regular grid Most common, e.g., CT/MRI scans
Curvilinear/unstructured grid Less frequently, e.g., simulation data

Stefan Bruckner

20

Concepts and Terms
sampled data (measurement)

analytical data (modelling)

voxel space iso-surfacing geometric surfaces

(discrete)

voxelization

(analytic)

(direct) volume rendering

pixel space (discrete)

surface rendering

Stefan Bruckner

21

Volume Rendering (1)
Deals with the visual representation of 3D functions
Frequently, but not exclusively, functions are scalar-valued
Often aquired using sampling (e.g., medical domain)

Stefan Bruckner

22

Volume Rendering (2)
Initially volumes were visualized using twodimensional cuts
Extraction of surface geometry for isosurfaces in the volume (e.g. Marching Cubes [Lorensen and Cline 1987])
Volume rendering introduced almost simultaneously by [Levoy 1988] and [Drebin et al. 1988]

Stefan Bruckner

23

4

Surface vs. Volume Rendering
Surface rendering Indirect volume visualization Intermediate representation: iso-surface Pros: Less memory, fast rendering
Volume rendering Direct volume visualization Usage of transfer functions Pros: illustrate the interior, semi-transparency

Stefan Bruckner

24

Volume Ray Casting
Volume: 1D value defined in 3D f(x)R1, xR3
Ray: Half-line r(t)R3, tR1>0
Intensity profile: values along a ray f(r(t))R1, tR1>0
Image plane: starting points of rays

Stefan Bruckner

25

Pipeline ­ Overview

volume rendering pipeline

data set

reconstruction classification
shading compositing

final image

Pipeline ­ Reconstruction

volume rendering pipeline

data set

reconstruction classification
shading compositing

final image

Reconstruction (1)
Usually volume data sets are given as a grid of discrete samples For rendering purposes, we want to treat them as continuous three-dimensional functions We need to choose an appropriate reconstruction filter Requirements: high-quality reconstruction, but small performance overhead

Stefan Bruckner

28

Reconstruction (2)
image plane eye

data set

5

Reconstruction (3)
sample point
cell
voxel

Stefan Bruckner

30

Trilinear Interpolation
Simple extension of linear interpolation to three dimensions Advantage: current GPUs automatically do trilinear interpolation of 3D textures

Stefan Bruckner

31

Other Reconstruction Filters
If very high quality is required, more complex reconstruction filters may be required Marschner-Lobb function is a common test signal to evaluate the quality of reconstruction filters [Marschner and Lobb 1994] The signal has a high amount of its energy near its Nyquist frequency Makes it a very demanding test for accurate reconstruction

Stefan Bruckner

32

Comparison of Reconstruction Filters (1)
Marschner-Lobb test signal (analytically evaluated)

Stefan Bruckner

33

Comparison of Reconstruction Filters (2)
Trilinear reconstruction of Marschner-Lobb test signal

Comparison of Reconstruction Filters (3)
Cubic reconstruction of Marschner-Lobb test signal

Stefan Bruckner

34

Stefan Bruckner

35

6

Comparison of Reconstruction Filters (4)
B-Spline reconstruction of Marschner-Lobb test signal

Comparison of Reconstruction Filters (5)
Windowed sinc reconstruction of MarschnerLobb test signal

Stefan Bruckner

36

Comparison of Reconstruction Filters (6)
Marschner-Lobb test signal (analytically evaluated)

Stefan Bruckner

38

Stefan Bruckner

37

Pipeline ­ Classification

volume rendering pipeline

data set

reconstruction classification
shading compositing

final image

Classification (1)
Projecting a 3D data set onto a 2D image is problematic Not all information contained in the volume is relevant to the user Classification allows the user to extract the important parts of the data

Classification (2)
During Classification the user defines the appearence of the data
Which parts are transparent? Which parts have which color?

Stefan Bruckner

40

7

Classification (3)

During Classification the user defines the appearence of the data
Which parts are transparent? Which parts have which color? The user defines a transfer function

scalar S

color RGB opacity A

Transfer Functions (1)
real-time update of the transfer function important

optical properties interpolation
optical properties alpha value

Transfer Functions (2)

Classification Order (2)

PRE-INTERPOLATIVE

POST-INTERPOLATIVE

data value

interpolation data value

Classification Order (1)
Classification can occur before or after reconstruction Pre-interpolative: classify all data values and then interpolate between RGBA-tuples Post-interpolative: interpolate between scalar data values and then classify the result

Stefan Bruckner

45

Classification Order (3)
continuous data

discrete data

scalar value

transfer function

transfer function

supersampling

classified data

supersampling

transfer function

analytical solution

pre-interpolative

post-interpolative

8

Classification Order (4)

Classification Order (5)

pre-interpolative

post-interpolative

same transfer function, resolution, and sampling rate

pre-interpolative

post-interpolative

same transfer function, resolution, and sampling rate

Pipeline ­ Shading

volume rendering pipeline

data set

reconstruction classification
shading compositing

final image

Shading (1)
Make structures in volume data sets more realistic by applying an illumination model Shade each sample in the volume like a surface Any model used in real-time surface graphics suitable Common choice: Blinn-Phong illumination model

Stefan Bruckner

51

Shading (2)
Local illumination, similar to surface lighting
Lambertian reflection light is reflected equally in all directions Specular reflection light is reflected scattered around the direction of perfect reflection

Shading (3)
shaded volume rendering

unhaded volume rendering

Stefan Bruckner

53

9

Gradient Estimation (1)
Normalized gradient vector of the scalar field is used to substitute for the surface normal The gradient vector is the first-order derivative of the scalar field
partial derivative in x-direction
partial derivative in y-direction
partial derivative in z-direction

Gradient Estimation (2) We can estimate the gradient vector using finite differencing schemes, e.g. central differences:
Noisy data may require more complex estimation schemes

Gradient Magnitude
Magnitude of gradient vector can be used to measure the "surfaceness" of a point
Strong changes  high gradient magnitude Homogenity  low gradient magnitude
Applications Use gradient magnitude to modulate opacity of sample Interpolate between unshaded and shaded sample color using gradient magnitude as weight

Stefan Bruckner

56

Pipeline ­ Compositing

volume rendering pipeline

data set

reconstruction classification
shading compositing

final image

Compositing (1)
So far, everything discussed applies to single sample points along a viewing ray How to subsequent sample when traversing the ray? Common models
Maximum Intensity Projection Emission-Absorption Model

Stefan Bruckner

58

Maximum Intensity Projection (1)

Always display the maximum value along a viewing ray
Motivation: visualization of contrast-enhanced tomographic scans
Parameterless rendering, very common in medical domain

Stefan Bruckner

59

10

Maximum Intensity Projection (2)
Probem: loss of spatial relationships between different structures

Stefan Bruckner

60

Emission-Absorption Model (1)
Conventional volume rendering uses an emission-absorption model Scattering effects are usually ignored due to high computational complexity For each pixel on the image plane, a the ray integral has to be solved For each step along he viewing ray, perform accumulate RGBA from transfer function

Stefan Bruckner

61

Emission-Absorption Model (2)

increase

decrease

emission

in-scattering

absorption

out-scattering

Ray Integration (1)
image plane eye

data set

Ray Integration (2)
How do we determine the radiant energy along the ray?
Physical model: emission and absorption, no scattering

viewing ray

Every point along the viewing ray emits additional radiant energy

active emission at point s~

absorption along the distance s -~s

Numerical Solution (1)
image plane eye

data set

11

Numerical Solution (2)

can be computed recursively

radiant energy

radiant energy

observed at position i emitted at position i

absorption at position i

radiant energy observed at position i­1

Numerical Solution (2)

back-to-front compositing
front-to-back compositing

early ray termination: stop the calculation when

Further Reading
M. Levoy. Display of Surfaces from Volume Data. IEEE Computer Graphics and Applications, 8(3):29-37, 1988.
R. Drebin, L. Carpenter, P. Hanrahan. Volume Rendering. ACM SIGGRAPH Computer Graphics, 22(4):65-74, 1988.
W. Lorensen, H. Cline. Marching cubes: A high resolution 3D surface construction algorithm. ACM SIGGRAPH Computer Graphics, 21(4):163-169, 1987.
C. Rezk-Salama, K. Engel, M. Hadwiger, J. Kniss, D. Weiskopf. Real-Time Volume Graphics, AK Peters, 1-56881-266-3, 2006.

Stefan Bruckner

68

Flow Data (1)
Simulation Flow space modelled with grid FEM (finite elements method), CfD (computational fluid dynamics)
Measurements Optical methods + pattern recognition, e.g.: PIV (particle image velocimetry)
Models Differential equation systems dx/dt

Stefan Bruckner

70

Flow Visualization
FlowVis = visualization of flows Visualization of change information
Flow data nDnD data, 1D2 /2D2/nD2 (models), 2D2/3D2 Vector data (nD) in nD data space Steady vs. time-dependent flow
User goals Overview vs. details (with context)

Stefan Bruckner

69

Flow Data (2)

Stefan Bruckner

71

12

Flow Data (3)

experiment

Stefan Bruckner

simulation
72

Direct Flow Visualization
Grid of arrows to visualize flow directions
Normalized arrows vs. scaling with velocity
Quite effective in 2D, problematic in 3D
Sometimes limited expressivity (temporal component missing)

Stefan Bruckner

73

Geometric Flow Visualization
Idea: follow the flow in time (integration) to extract the path of a particle

Stefan Bruckner

74

Streamlines ­ Theory
Flow data v: derivative information
dx/dt = v(x)
spatial points xRn, flow vectors vRn, time tR
Streamline s: integration over time, also called trajectory, solution, curve
s(t) = s0 + 0ut v(s(u)) du
seed point s0, integration variable u
Difficulty: result s also in the integral, analytical solution usually impossible

Stefan Bruckner

75

Streamlines ­ Practice (1)
Solve using numerical integration techniques
Assume that locally the solution is approximately linear
Euler integration
si+1 = si + dt · v(si) Follow the current flow vector v(si) from the current streamline point si for a short time (dt)

Stefan Bruckner

76

Streamlines ­ Practice (2)
Accuracy of results is strongly dependent on step size dt

Stefan Bruckner

77

13

Streamlines ­ Placement (1)
Seed fill with streamlines to achieve equal density

Streamlines ­ Placement (2)
Variations of distance in relation to image width
6% 3% 1.5%

Stefan Bruckner

78

Illuminated Streamlines Illuminated 3D curves improve perception

Stefan Bruckner

80

Flow Volumes
Volumetric equivalents of streamlines, subset of a 3D flow domain is traced in time
Can be visualized with direct volume rendering methods

Stefan Bruckner

82

Stefan Bruckner

79

Stream Surfaces
Natural extension of streamlines to 3D
Surfaces which are tangential to the vector field everywhere
Challenges related to occlusion and visual complexity

Stefan Bruckner

81

Unsteady Flow
Path line Trajectory of an individual particle in the fluid flow
Timeline Joins the positions of particles released at the same instant in time
Streak line Connects particles that have passed through a certain point in space

Stefan Bruckner

83

14

Texture-based Flow Visualization
Idea: exploit visual correlations to provide a dense visualization of the flow

Stefan Bruckner

84

Line Integral Convolution

Calculation of a texture value
look at streamline through point
filter white noise along streamline

flow data streamline white noise

LIC texel

Stefan Bruckner

85

integration convolution results in

Line Integral Convolution ­ Examples (1)
laminar flow

Line Integral Convolution ­ Examples (2)

Stefan Bruckner

turbulent flow
86

Line Integral Convolution on Surfaces

Stefan Bruckner

87

Texture Advection ­ Unsteady Flows

Stefan Bruckner

88

Stefan Bruckner

89

15

Feature-based Flow Visualization
Extract and visualize the abstract structure of a flow

Different elements Checkpoints, defined through v(x)=0 Cycles, defined through sx(t+T)=sx(t) Connecting structures (separatrices, etc.)

Stefan Bruckner

90

Glyphs/Icons
Local/ topological properties

Vector Field Topology

Critical points can be classified by the Eigenvalues of the Jacobian
R = real components, I = imaginary components

Stefan Bruckner

91

Examples (1) Topology of a hurricane simulation

Stefan Bruckner

92

Examples (2)
Visualization of flow past a circular cylinder using critical points and saddle connectors

Stefan Bruckner

93

Further Reading
R. Laramee, H. Hauser, H. Doleisch, B. Vrolijk, F. Post, D. Weiskopf. The State of the Art in Flow Visualization: Dense and Texture-Based Techniques. Computer Graphics Forum, 23(2):203-221, 2004.
F. Post, B. Vrolijk, H. Hauser, R. Laramee, H. Doleisch. The State of the Art in Flow Visualization: Feature Extraction and Tracking. Computer Graphics Forum, 22(4):775-792, 2003.

Stefan Bruckner

94

Stefan Bruckner

95

16

Summary
Scientific visualization is data-driven, but it is crucial to keep the goal of the user in mind
Volume visualization
3D scalar data Important to provide detailed view of structures of interest
Flow visualization
2D/3D vector data Provide overview and characterize flow behavior

Stefan Bruckner

96

Thank you for your attention!
Acknowledgements
Meister Eduard Gröller Heliwg Hauser
Christof Rezk-Salama

17

