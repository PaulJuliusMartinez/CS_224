/11

VoxelOcclusionTesting:A ShadowDetermination Acceleratorfor RaYTracing
AndrewWoo'i JohnAmanatidesf
Departmentof ComputerScience Universiryof Toronto Toronto, Ontario M5S 1A4

1. Abstract
A shadowdeterminationacceleratorfor ray tracing is presented.It is built on top of the uniform voxel traversal grid sfucture. The acceleratorproves to be rather efficient' requires little additionai memory and the worst case scenarlo per shadow determination just reduces down to traditional voxel traversal. It can also be extendedto model linear, area lights, as well as atrnosphericshadows.
Keywords: grid, intersection culling, occlusion, penumbra, ray tracing,shadows,umbra,voxel traversal.
2. Introduction
The presenceof shadows in a scene is important tn genveyingrealism and aiding depth pcrception[Woo89bl lt is scen as a comparative darknesswithin an illuminated arca caused by the interception of light by anothcr object. The dark region produced can provide information such as lhe approximateshapeand relative proximity of the intercepting objcct(s). It can aiso indicatethe approximatelocation,intensity andsizeof the light sources.
Hard shadow determination algorithms for opaquesurfaces have been categorized into six general classes:shadow generation during scanout [Appe68] [Bouk70]' shadow volumes [Crow77] [Brot84] [Berg86] [Max86]' shadow volume binary spacepartition tree [Chin89], areasubdivision lNishT4l [Athe78], depthbuffer [Will78] [Hour85] [Reev8?]' and ray tracing [Appe68] [Gold7l] [Whit80]. The first four approaches have the general constraint that only planar polygons can be easily handled. The deptlt buffer approach twill78l does not have this consraint but introducesadditional aliasingartifacts. However, the alia-singartifaclshave been reduced by filtering, as in the work done by [Hour85] tReev87l.
t Andrcw can be rqched at SAS Institute CanadaInc ' 225 Duncm Mill Road, Don Mills, Ontario, Canada,M3B 3K9. { John can be ruched ar DePafinent of ComPuter Science, York University, North Yo*, Ontario, M3J lP3.

3. ShadorvDetermination in Ray'l'racing
Raycasting[Appe6fi] [Goid71] was introdrtcccal -san elcganmt ethodfor visibilirycalculationsand a sirlple shatlow determinationapproachwithout the previous shadow algorithnr limitations. Ray tracing, as lxrpularizcd by Whitted tWhir8O],useslhe ray castingtechniqueto model reflcctions andrefractions.
The principle behindshadowdetcrminationin ray trachg is simple. A shadowray is shot frorn the visible point Qroint to be shaded)to the light source. lf the shadow ray intersectsany objecs bet*'een thc visible point and the light sourcet,henit is in shadow;othcrwiseit is not. Eachinterscction check is vcrr floating-poinitntensiveand thc naive rly tracingapproaclr,r,:tluircss'rchchcckswith all objcctsin thc scene. Since each ray-surIaceinlcrsectionchcck is vcrl' cxpensivet,hereis a needto calcttlatea smallcandidlttcsctof objccrsthatcan possiblyintcrscct he ray to redtlcecomputa'.iontime. This is refened to n\ intersectionculling
4. IntersectioCnullingAlgorithns
Therc hasbeena greatdcal ofresearchin this aspectof ray tracing acceleral.ion.One class of intcrsection culling algorithmsuses spatia'lsuklivision, oi which thcrc arc t$'o gencrirl approaches: voxel traversal [Glas84] [Fuli86] [Aman87] [Snyd87], and hierarchical bounding t'olumes
[Rubi8O[]Kay86] [Cold87].
Since the new shaclowdeterminationitccclctatorts built on top of thc unitormvoxel travcrsagl rid strtrcttrre*, it is necessaryto go ovcr the lundsilrentalsof voxel travcrsal. Space encompassingail objccts is placcd in a grid of unit cubescalled voxel.s.Each voxel containsa list of all objcct-s which residein that voxel. Eachray iravcrscsthe grid in<-'rclcr andtestsfor intersectiononly with objccLsresidingin thc voxels travcrsed(inorder),until an interscctionis lound or thc rev hascompletelytraversedthc grid.
* There are basically two variations of voxel travcrsal: vanahle srzcii voxels using hterarchrcadl atastruclurc [Glasii4] [Fu.;it6],anLiuniionr'ly sizedvoxels using a gnd strucLurcll"u.1i86IlAmanET] iSnl il67l t''r' fom voxel tnvereai is usedir thc implementationof thc accr:lcr:1":

GraphicsInterface'90

2t4

Voxel traversal culls all ray types (including shadow rays) and tends ro provide small candidateset of objects that a ray needs to intersect with. However, many of the intersections performed when applied to shadow rays are still unnec;ssary and savings related to shadow calculations can prove !o be valuable. Thus shadowray cullers need to be
looked into.

is required: O(N2n) per Iight source,whereNxN is the resolution of one grid plane of the light buffer, and n is the total number of objects. The preprocessing is also expensive: O(max(EnNz, N2nlogn)) per light source, where E is the averagenumber of edges per polygon' EN2 accounts for thc
scan-conversioncostperobject,andn/ognrepresentsthesort
ing required per cell'

5. Shadow Ray Culling

5.2. Hybrid ShadowTesting (HST)

Dealing only with opaque objects and hard shadow generatioq shadow determination is just a binary decision' It

Hybrid Shadow Testing (HST) [Eo89l is another approach to accelerate shadow determination. It applies a

is not concernedwith information about object(s) that occlude it. Thus many intersection checks can be avoided. There have beenonly two attemptsat shadowray cuiling in ray trac-
ng light buffer ar:.dhybrid shadow teslins.

shadow polygon approach [Crow77l [Brot84] [BergS6l
lMaxS6l and voxel traversal [Glas84l lFuji86l [Aman8?] [Snyd8?]. The shadow polygons are placed in thc voxel traversal grid structure, and rtre shadow count is kept up-todateas the ray is traversed.No shadowrays arc gencratcdfor

5.1. The Light Buffer
An observationmade by Haines et al. [Hain86] is that' in many scenes,shadow determination may dominate the ray uacing processingtime. This is especially true when multiple light sourcesare involved. The light buffer lKainS6l is constructed to lower the processing cost of shadow determina-
tion.

this scheme,but intersectioncalculationswith tire shadou polygons,if encounteredin a traversedvoxel, are nccessar) When the closest intersectedsurface is found, the shado* count is checked.If the count is 0, then the surfaccis not ir'
shadow;otherwiseit is in shadow.
Eo et al. [8o89] realize that tlie number of shadorr polygons are large. Thus cach ray may potentially need i" intersectmany shadow polygons. As such, lhe traditionir'

shadowray approachapplyingvoxel traversalis usedif marr

such shadowpolygons need to be interscctcd' The storar:

and runtime mmplexity for the HST algorirhm is O([A'r': per light source,where E is the averagenrlmber of cdgesp''

I polygon, n is the numbcr of objeca in thc sceneand Nx\:'' is theresolutionof the grid strucrure'

Lisht SourceFrustum

6. A New Shadow Determination Accelerator

The new shadow determination accelerator' vr'r'

LightBuffer

occlusiontesfing [Woo89al, possessesfavourablepropcrl in that it usesa dala structurealreadybuilt for fastray trac::-

The light buffer corsiss of six grid planesforming a box sunoundingttrelight sowceorigin (pointlight sourceis

requires little additional storage, models directionai : extendedlight sources'andhas a Soodworst cascscenarr'

assumed)T. he cellsof *re buffer containinforrnationon the smallest/rll occlusion(completefliylls cell)distancefrom the

The implementation of the acceleratoris built on t' :' ruriform voxel traversal,i'e' each voxel is the same '

light source,and sortedapproximatedepthvaluesof candi dite occlusionobjecsobtainedbyprojectingobjectsontothe srufacecells during preprocessingS' eefigrue l' wherethe four sphereswithn the \ght ftustum are sloredin the cell's datastructureof candidateocclusionobjecs'
. For each intersected point in question' if the depth value of the correspondingcell is greaterthan the smallestfull occlusion distance, then the intersection point is in shadow' Similarly, if the cell is void of projected objects' then the surface is not in shadow. Otherwise, shadow determination requires intersection testswith candidateocclusion objects of the cell, performed inorder with respect to the depth values until either an intersection hit is found (in shadow) or the depth value of the candidate occluding object is greater than the intersectionpoint (not in shadow)'
Haines et al' report a substantial improvement in the shaclowdeterminationphase. However, Iarge memory space

Given the uniform grid structure,an extra 2-bit field nec':'

be added per light source in each voxel lts vaiue indic '

the level of opaqueocclusion of the voxel with respecl to c' '

\rght source:fuil, die remainderof

null the

and compllcatedocclusion' Notc proccss description assumesonl)

: ''

light source,though the processis to be performed for ea''

Iight sourcein the scene'

As a preprocessingstcp following objcct placeme:-:

wi*rin the voxel data structure,all empry voxels arc markcc

witlr nall occlusion and non-empty voxels are marked with

complicatedocclusion. For each object' the shadow umbra

tcrowT?] *hi.h res

is id

projecteddown to e,olely within the

thereievantvoxels'The voxels shadowumbra are markcd with

'f"udllg",o*c"clumsaiornk:etdhew\vthoxceolms ptlhicaat tceodonctacilnusthioen.s'Rheafdeorwtoufmigburrae

2,"*h"r" the dotted voxels representcomplicatedocclusion'

and the remainderof the voxels are marked w\th full occlu'

GraphicsInterface'90

215

ston.
Figure2 LightSource
luding Object

/* Voxel Occlusion's Merhod for Shadow Deleminalion */
VoxelOcclusionShadow (poinr, tighr)
i
/* First PassVoxel OcclusionTesting+/ voxel = CalculareCurrentVoxe(lpoinr); if (voxel occlusion value == full occlusion)
retum (in shadou,); elseil (voxel occlusionvalue == null occlusion)
retum (notin shadow);

: ShadowVolume

/* htermediate Voxel OcclusronTesrrng+/ ray = GenerateShadowRa(ypoinr,Light); whilc ((voxel = TraverseNextVoxcl(ray)) != oursidegrid)
t
if (voxel occlusionvalue == full mclusion) retum (in shadow):
elseif (voxel occlusion== null occlusion)
retum (notin shadow);

VoxelStructure
When a ray intersectsa surface in a voxel that has ettherfull or null occlusion (a 2-bit comparison),then any intersectedswface in the voxel is ensuredto be in shadowor not in shadow,respecliveiy. No shadowray nor intersection checks need to be performed; this is rcfcrred to asfrsl par'.t voxel occlusion testing. lf complicated occluston is the voxel occlusionvalue, then the fastestrnethod is to rcsort back to voxel traversal(and intersectionchks with candidatcset of objects) of the shadow ray. Howevcr, as each voxel is traversed,its occlusion value is also checked (another2-bit comparison). If the occlusion value is eithcr full or null occlusion, then traversal can be nalted and the interscctcd point is ensured to be in shadow of this light source or nor, respectively; this is referred to as inJerrnediatevoxel occlusion testing.
At worst, no known occlusion values will bc found during traversal. As a result,consideringrhe negligiblc 2-bit comparisons,the worst scenarioper shadowdetemination is the same as for voxel Eaversal. Refer to the below pseudo code for the different shadow determination proceduresundcr voxel traversaland voxel occlusiontestinr.
/* VoxelTraversal'sMeftod for Shadowl)cterminarion*/
VoxelTraversalShado(pwoint,li ghr)
i
voxel = CalculareCurrentVoxel (point); ra] = Qsnsrarc5hadowRay(pornr,Iighr);
while ((voxel - TraverseNexrVoxel (ray)) != oursidegnd) if (IntenectobjectslnVoxel (ray, voxel) == [i1) retum (in shadow);
retum (not in shadow);
l

if (ntersectObjectslnVoxcl(ray, voxci) =- H1) retum(in shadow);
I retum (not.in shadow); l
6.l. Overheadfor Preprocessing
The additionalstorag.-nL.ccss3riys ?IIj bits per light source,whereA'xVxN is the rcsolution of the grid. Note that the storagcnccessaryis indepcnrlenot f the numbcr of objecrs.
Thc preprocessingmainly involves orojcctionsof shadow unbrac onto voxels. The silhoucttesof the objccts are projected,then scan-convertedto dctemrine the voxcl occlu, sion values. Thus thc complexiry is 0(EnN3), whcrc n is thc mrmber of objects,E is the avcragenumber of vcrLicespcr object and EN'l accounls for rhe projt-ction anrJ scanconversioncostsper object. This preproccssinigs simplefor polygors since the verticescan be projectcil. thcn joined to form the projected silhouctte. Ho*'cvcr, the silhouctre is more difficult to identi! for quadricsurlrces. I)ctailcdprojection mathcmaticsfor prulygonsand quadric surflccs arc discusscdin [Woo89a].
6.2. Non-OccludedRegions
If the exact definition of null occluslonis considered, this occlusionvalue can ncver be found in a voxel that contains a surface,even if the surfaceis completelv unoccludccl. Complicatedoccl*tion will a)ways be found in such voxc'ls and thusfirst passocclusiontestingwill fail. This can be par, tially solved for lhe caseof only one objecr rcsiding in rhe voxel. Thc voxel can be markednull one if the voxcl is nor alreadymarked with other occlusion values. This indicates null occlusionfor first passocclusiontcsting,and complicated occlusion for intermediatcocclusion tcsting. Thus, shaclow rays do not need to be generatcdfor voxels that contain only one convex object. If the object were concave,an inlersection testagainstitself needsto be done before the occlusionstatus is determined.

Graphics Interface '90

216

With more populated voxels, it is inevitable that the occlusion value may be marked with complicated occlusion (to handle the caseof occlusion from objects within the same voxel). For first pass occlusion testinS,the ray borurdingbox approach [Snyd87] is used to reduce intersection checks within the initial voxel. Then hopefully, intermediate voxel occlusion testing can be used to determine the occlusion later

full occlusion,it is assumedthat it is nol near the silhouette region and no work is done to perturbthe shadowray. When the voxel occlusionvalue is complicued occlusion,then the shadowray is perftrrbed. This should save some computations in perturbation of the shadowrays.
7.3. Voxel Occlusionmay not Accelerate

on. 63. Non-Opaque Objects

Our testing suggests that voxel occlusion testing shouldnot be usedon low resolutionimages,e.g. 64x64. The preprocessingtime may dominatc the rendcring process.

Shadows as a result of transparent objecs are much
harder to deal with t. It needs the information of all occluding objecs to generatecoloured shadows. ln addition, due to refraction, a single linear shadow ray is not sufficient.to generatethe correct results. The compromise commonly taken in

However,the larger the resolutionor lhe higher the sampling rate,the better the improvementof the runtime pcrformance since the preprocessingis independent of resolution and becomesmuch less dominant comparedto thc actualrender-
mg process.

ray tracing is to assume no refraction in the transparent occluding objecs. This is also the assumption made in this shadowdetermination accelerator.

Even at reasonableresolutions, this acceleraLomr ar not provide acceleratedruntime pcrfomrancc ovet voxcl traversalat times (on a single frame basis). Some additiona.

A new occlusion value/a/i transparenl occlusion can be added. However, upon reaching such a voxei, shadow determination cannot be stopped since information about all occluding objects are needed. Only ransparent objects need to be checkedfor intersection. However, this has little advan-

work should go into a quick check whether as to use voxel occlusiontestirg during the preprocessingstage(on a singlc frame basis). This can be done sincethe algorithm is just :, simple attachmentonto the voxel traversalapproachafter the
grid srructwcis produccd.

tage and requires the number of bits per voxcl to increaseto three. It is generally recommended that complicated occlusionbe marked for the shadow umbrae of transparentobjccts.
z. Implications of the Accelerator
7.1. View Independence

A simple solution to this problem is to evaluatethc sceneafter the grid initialization for voxel traversalis donc The equation to be evaluated is presentedbelow, where r: represents the total numbcr of objccts, thc numeraLc: representsthe total region occupiedby the objccts,and whcr dividedby ttregrid rcsolutionN2, representsa percentageo:
the total volume used:

In a rendering technique to calculate radiosity
[Gora84], view independencecan be achieved. Ray tracirg is generally a view dependent rendering technique since is

'l^
--=t numberof voxelsoccupiedby oblecr i nN",=

illumination calculations are dependenton the ray shot from the eye. But since shadows from opaque objecs are only fractional value occlusions multiplied with intensity calculations, they can be view independentif desired. In this paper, voxel occlusion testing provides a vicw independentapproach for shadow calculations in ray tracing. Thus the 2-bit voxel occlusion values need only be generated once and can be retained for future frames in any fly-by anirnation. In addi-

andvoxel occlusiontestingis not to be uscd i[ the abovc i: below some thresholdvalue (empirically dcrived), assunritt: that the small objrcts do not project a large shadow untbra Note that this is onJya quick check and may not be valid a.. the time.
8. TestingandAnalysis

tion, changesin the power or spectraldescription of any light sourcerequire no change in the voxel occlusion values since the fractional occlusions are still the same.

8.1. SomeNumerical Results
Testing hasbeen done on a SUN 31280with/pa, ar,: ttre algorithm was implemented on a ray ffacer at the Univc:-

7.2. Shadowson Bump-mapped Surfaces
As statedin [Woo89b], shadowson bump-mapped swfaces look perfectly smooth because the shadow ray is not perhrrbedto reflect the bumpiness. An analytic solution to the perrurbation of the shadow ray was proposed in [Woo89b], but is expersive in general. However, the pemrrbation of the shadow ray only needs to be done near the silhouette of the shadow; the region in the middle usually ends up with the samcshadowresults. Thus, when the voxel occlusion value is

sity of Torontot optik. The voxel traversalimplementationi: optikis described in [Arnan8?l. All test images are renderc.. at aresolutionof 512x512 with one sampieper pixcl.
Table I illustratesthe effcctivenessof voxel occlusio: testing. A couple of imageswere taken from thc proccdur., database[Hain87]. Note that in the column grid, a grid suh.l: vision level of NxNxN is assumedI.n addition,Voxel andOt indicate the total CPU time in seconds taken to render ll-.: imageusing voxel traversaland voxel occlusion,respcctivclr Finally, V"Shadrepresertttshe percentageof shadowrays ovc:

t Actually, thae are not shadows, but filtcing of Iight [Wm89b].

all ray types.

GraphicsInterface'90

2t7

In terms of the savingsacquired,tablc 2 is given for the identicalimagesin table 1. ToKnownis the percentagcof shadowdeterminationrequeststtrat docs not rcquire shadow ray generation. ln addition, #Trcv and #lnt is rhe total number of traversalsand intersectiontests savcd for using voxel occlusion testing,respectively. Finally, #lntermcd is the total number of successcsusing intermediatcvoxel occlusion testing.

H o w e v e r , t h e a b o v c p a r a g r a y r h ' so b s c r v a t i o n s a r c n o t lrue for large number of objcc:ts. Grid sparscncss causcs irtcrscction savings to be few if thc subdivision l*'cl is snrall. By increasingthe subdivision levcl, thc storagc co\L rnercitscs further to causeswapping problcnrs. This is onc print.: rclson t o p r f o m r a q u i c k c h e c k l o c l c t c r r l i n c i f v o x c l o c . c l u s i o nt c s t ing should be uscd on top of voxel travcrslr'I. llo*o,cr, a bcttcr solution to deal wirh this problcrn is proposcd in $9.2.

TableI

Image Graph
Quadric DGP Bars Flakes Tetra

#Iight 2
I I 3 I

Grid 40 50 20 30 50 40

#obj 12
l)
21 88 92 4096

Voxel (Jcc ToShad 1518.2 1220.3 637o t05t.2 880.6 549o 191.5 658.7 4 1 7 o 1419.6 1052.6 497o 3234.'/ 2910.9 '107o 7 4 7 . 5 9 8 5I. l07o

1 1 . 3 .V o x e l O c c l u s i o n v s . l , i g h t I l u f f e r
A s c o m p a r c d t < >t h c l i g h t b L r f l e r ,r , o x e . lo c c l u s i o n . s c c n r s to pcrform bctter under sornc informal anaiy,sis.'l}e lighting frustunr, which encompasscsall candiriatcobjccts pr cell in thc light buffer, grows largcr as rl gcts farLlicra*,rv frorn thc light. Thus thc probability of firrclingknoun occlrision gets nruch smaller as thc distancc to thc- Iight sourcc irrcrcascs. T h i s a l s o r e s u l L si n a l a r g c r c a n d i d a t c s c r o f o b j c c r r sr r r i n L c r , scct with.

Table 2

Image Craph
Quadric DGP Bars FIakes Tetra

ToKrown 587o 6'17a '74qo 687o 369o l9o

#Trav

#lnl #{ntermed

11 2 0 9 1 9 u 3.17ti83 t29013

7rr1098 333625

A 1a a

70l 60E6 t14635 31 3 8

ffi2181 1 4 3 1 4 6 9 5 6099 I ()56370 2t094921 2 4031

12812

97692

0756

8,2. Voxel Occlusionvs. Voxel Traversal
In this section,a slmopsisof the comparisonbclween the two methodsis given. A more indcprhanall,siscan bc found in [Woo89a].
Voxel occlusiontcsl.ing,on avorage,shows a good improvementover voxel traversal:about l5% improvcnrcnt per light sourceon the total CI)U time on our sclcctcd images. The ratio of shadowrays over all ray typcs rcnrlsto play a largerole in the improvcmentievel. The largerthc pcrcentage,the better thc improvemcnt. In particuiar,thc addition of more light sources,thus more shaclowrays,exhibits approximatelylinearrate of improvement.
For a small number of objecs (lessthan 2-50objccrs), different subdivisionlevels scem to htrmlxr voxcl travcrslrl much more than voxel occlusiontesting. Thus tJrencccssrty to find the optimal subdivisionlevcl with voxel occlusionis lessimportant;an educatedguessmay be sufficient. In acldition, the optimal subdivisionlevel for voxcl travcrsnlis Lrsu, ally larger comparedto voxel occlusiontcsring. (irid spruseness with small dcnsely populated regions also scems to hampervoxel traversalmuch morc than voxel occlusionresting. This variablc is importantto analvzcsinceir givesvoxel traversala greatdeal of uoublc: a dccp subdivisionlevcl will rcquire extensivetraversal,but a not dcep enougl-sr ubdivision level may requireintersectionchcckswith many obiccts.

V o x c l o c c l u s i o n r c l i c s t t l t t i t c g r i i ! s t r L t c t r l r ct o l o c a t c

c a n d i c J a t cs e L so f

objccts to rnterscctwrth.

'l'hc c a r r r i i t l r t os et s

tcnci to bc much smaller sincc it clocs not rror.r'ut it gcLs

f a r t h e . ra w a y f r o n r t h c l i g h t s t r u r c e. F o r t l r c s a l n c r c a s o n , t i t c

p r o b a t - . i l i t 1o' f ' f i n d i n g k n o u ' i r o i . : c l r r s i o ni n a v o x c l s h o u l < ib r .

highcr u'hcn comparcd to tlr; lighr bLrlicr.

A ; r o t h c rc l i s a d v a n t l p co l . t i t e l i g h t b r r i l r r rt s t h c n c c t l l ' o r largc storagerequircmcnls. Huincs ct al. rcport intltroventcnt lactorso1'4-10. llowcvcr, Lhisis rnislca,linrsincc it js conrpared to traditional ra,v tracing rvithout intcrscctlon culling (and thc arlclitional str.lragc rccluircnicnts of thc cLriling a p p m a c h l . V o x c l o c c l u s i o n ,a t 2 b i t s p c r v o x c l , r c ( l l i i r c sa l o t lcss ntcntory.

fl.il. Voxel Occlusion vs. Ii,S'l' .\lgorithnr
A s c a n b c s c c n , v r > x o lo c c l u s i o n t o s t i r ' : g. j L r srt c r l u c c s clown to voxel travcrsal at the $.orst (rltsc. Ilvltrid Shaikriv T e s t i n g ( H S T ) a t r c n t p t s k t a c c l L r i r ct h t s L l p p c r b o r r n r i i i l s o b t switching bct.wccn shaclow pol,r'gon lrnci traclitronalsharlo*, ray. Howcver, Lhisripper bound ctrnnot b,: guarantctrti.
On avcragc, thc numbcr o{ intcrsections recluircd sccms to favour voxel occlusion tcstint: thc IIST llroritltnr d c a l s p o o r l y w i t h h i c r a r c h v o f s i t a < i o wv o h i m c s . A p o i n r s h a , do*'ed bv man5, objccts ncecis to intarsccl ugltitrst .lich ol' t h o s c o t - . j c c t s ,w h e r c a s o u r r p p r o r c i l o n l y r c r l u i r c s c i t c c k i n g e s i n g l c o c c l u s i o n v a l u c . I n a d d i l i o n , i t n r t r s rb c n o L c d r l t a r f l S l ' r c q t t i r c sa r t t u c hl l r g c r n t ( . l l o r ) 't l i l l : r .i t 1 .
9 . P r o p u s a l sf o r I n t p r o v e m e n t
9 . 1 .C o m p l e Sx u r f u c e s
Tltis acceleratorncccls to lrro1cctobjccts w,ith kno*.n s i l h o u c l t e s ( l e s s c : x a c t s i l h o , . l c t t c sc a n g c n c r a l l y , b c a c q u i r c d though). Thus, irnplicit antl ptrrallctric s'.:rfaccsi)rcscnt a p r o b l c m i f n u m e r i c a l i r e r a t i o n ( d i r c c t r c n c l e . r ; n g )i s u s c r l r o rcnder thcm. Approximatc sharlou, projccLions har.c to bc considcrcd; i.e. havc a known shaciow rcgion, rrncia small. u n c c r t a i n s h a d o u ' r e t :i o n a l o r r n c lt h c si l h o L r ct t i : .

GraphicsInterface '90

218

Another method to render such surfaces would be polygonization. This does not provide a problem for our acceleratorsince it is just projection of polygons. However, the silhouette of the shadows appearpolygonal-like. Perhaps approximate shadow projections (as discussedabove) can be usedso that the silhouetteregion can be smoothedout.
9.2. Lazy -Evaluation OcclusionTesting
The voxel occlusion preprocessingdone might be a wasteif many of the voxels ile not even traversedduring ray tracing. On the other hand, ttrevoxel may be too large to contain any useful information; i.e. moslly complicated occlusioa. As such, a lazy-evaluation approach should be considered,perhapsalong the lines of the work done by Jevanset al. [Jeva39]. Initially, a small subdivisiongrid formation is created and preprocessedwith the voxel occlusion information. When calculatingshadows,if the voxel occlusionat the visible point is complicated occlusion, then further subdivision of the voxel is required. The newly createdvoxels are then processedwith occlusion information and used for the c u r r e n t a n d f u t u r e s h a d o wc a l c u l a t i o n s .

is just as crucial. This information is necessaryto acquire atmosphericshadowsassumingonly a single scatteringmodel for light diffusion. Seefigure 3, where the two arrowedlines indicate the illuminated segmentsof the incident ray, thus atmosphericillumination needsto be taken into account.
Max [Max86] andNishitaet al. [Nish87]useshadow volumesto calculatethe ray segmentsthat arevisible from the light. Similarly, our acceleratorcan be extended for voxel occlusiontesting:the voxel occlusionvalucs arc checkedas the ray traversesthrough the voxels. Null occlusion voxels indicatesfull illuminanceof the ray seSmentwithin thc voxel, urd complicatedocclusionindicatespartial illuminanceof the ray witlrin the voxel. The fraction of illuminanceof complicatedocclusionvoxels requiressome additionalpartial samplinC.

F'igur3e

C

93. Soft Shadow Generation
Thus far, the discussion has been applied to hard shadows of opaqueobjects. The domain of light sourcesto generatc this type of shadows are directional and point light sources (assumingno inter-reflectionsof light). However, higher dimensionallights (linear, arealights) should produce soft shadows. Thus the problem is no longer a binary decision as to whether a point is in shadow or not, the fraction of occlusionneedsto be calculated.The raditional methodsfor soft shadow generation in ray racing can be seen in work done by Cook et al. [Cook84] and Amanatides[Aman84]. However, both approachestend !o be very expensive computationally.
Nishita et al. [Nish85] proposea methodto identify the umbra and penumbra regions on the projected plane emanating from a light source. This can be appliedto voxel occlusion testing in the following manner: identify the umbra region on the voxel planes and mark the enclosed voxels as full occlusion, then mark the penumbra region as complicated occlusion. The umbra region can be detectedusing voxel occlusion, as before. The penumb'ra regions cannot be preprocessedper voxel since the level of penumbra is different for eachpoint. Thus some shadow rays need to be shot to determine the level of penumbr4 and disrit'uted ray tracing [Cook84] along with intermediatevoxel occlusiontestinS seemsto be the most obvious choice.
9.4. Atmospheric Shadows
Sunlight scattering in ttre air causesthe atmosphereto glow. This glow is particularly visible in a shadowed environment. Thus for a ray shot to calculate the closestvisible surface, the critical problem is not only to determine whether the intersection point is in shadow. Identifying the segmentsof the viewing ray which are visible from the light

I
IlluminatedSegmentof t}reRay
10. Acknowledgements The first authorwishesto thank PierrcPoulin, Caroline
Houle and Alain Foumier for providing some very usefitl suggestionstowardsthis paper. The authorsarc also gratcful to NSERC andITRC for their financialsupport.
11.Conclusions
A new shadow determinationacceleratoris proposed. This acceleratoro, n average,outprrforms voxel traversaland existingshadowray cullers. However, as with all intersection culling algorithms,the acceleratorperforms wcll under some circumstancesand poorly under other circumstances.Lazyevaluationvoxel occlusionmethodsproposedshouldimprove ttre siruationwhen the basic approachperforms poorly. The acceleratorcan also be extendedto modcl linear, arca lights, aswell as atmosphericshadows.
12. References [Aman84] J. Amanatides,"Cone Tracing", Computer Graph-
ics (Proc.SIGGRAPH 84), 18(3),July 1984,pp. 109I 15. [Aman87] J. Amanatides,A. Woo, ''A Fast Voxel Travcrsal Algorithm for Ray Tracing", ConferenceProceedings ofEuroGraphics'87, August1987,pp. 1-10.

GraphicsInterface'90

219

[Appe68] A. Appel, "Some Techniques for Shading Machine Renderingsof Solids", Proc. AFIPS JSCC, vol. 32, 1968,pp. 3745.
[Athe78] P. Athertoru K. Weiler, D. Greenberg,"Polygon Shadow Generation", Computer Graphics (Proc. SIGCRAPH 78), 12(3),Augusr 1978,pp. 275-291.
[Berg86] P. Bergeron,"A CeneralVersionof Crow's Shadow Volumes", IEEE Computer Graphics and Applications, 6(9), September1986,pp. 17-28.
[Bouk70] W. Bouknight, K. Kelley, "An Algorirhm for producing Half-Tone Compurer Graphics ltesenrarions Shadowsand Movable Light Sowces", AFIPS Conf. Proc.vol. 36,1970,pp. 1-10.
[Brot84] L. Brotman, N. Badler, "GeneratingSofr Shadows with a Depth Buffer Algorithm", IEEE Compurer Graphics and Applicarions,5(12), October 1984,pp.
< 1t
[Chin89] N. Chin, S. Feiner,"Near Real-TimeShadowGeneration Using BSP Trees", ComputerGraphics(proc. SIGGRAPH89),23(3),July 1989,pp. 99-106.
[Cook84] R. Coolq T. Porrer,L. Carpenter,"Distributed Ray Tracing", ComputerGraphics(Proc.SIGGRAPH 84), 1 8 ( 3 )J, u l y 1 9 8 4 ,p p . 1 0 9 - 1 1 5 .
[Crow77] F. Crow, "Shadow AlgorirtLms for Computer Graphics",ComputerGraphics(Proc.SIGGRAPH 27), 11(2),Augusr 1977,pp. 242-248.
[Eo89] D. Eo, C. Kyung, "Hybrid ShadowTesring Scheme for Ray Tracing", Compurer Aided Design, 2l(l), January1989,pp. 3848.
[Fuji86] A. Fujimoto, T. Tanaka, K. Iwata, ,'ARTS: Accelerated Ray-Tracing System", IEEE Computer Graphicsand Applications, 6(4), April 1986,pp. 16_
26.
[Glas84]A. Glassner,"SpaceSubdivisionfor Fast Ray Tracing", IEEE Compurer Graphics and Applicarions, 4(10),October1984,pp. t5-22.
[Gold7l] R. Goldstein,R. Nagel, "3-D Visual Simulation,,, Simulation,January1971, pp. 25 -31.
[Gold87] J. Goldsmith, J. Salmon, "Auromaric Crearionof Object Hierarchiesfor Ray Tracing", IEEE Computer Graphicsand Applications,7(5), May 1987,pp. 14-20.
[Gora84] C. Coral, K. Torrence,D. Greenberg,',Mode]ling the Interacrion of Light Between Diffuse Surfaccs',, ComputerGraphics(Proc.SIGCRAPH 84), l8(3), July 1984,pp. 213-222.
[Hain86] E. Haines, D. Greenbcrg,'The Light Buffer: A Shadow-TestingAccelerator",IEEE ComputerGraphics and Applications,6(9), September1986,pp. 6_16.
[Hain87] E. Haines, "A Proposal for Standard Graphics Environmenrs", IEEE Computer Graphics and Appli_ cations,7(11),November 1987,pp. 3-5.
[Hour85] J. Hourcade,A. Nicolas, "Algorittrms for AntialiasedCast Shadows",Computer and Graphics,9(3),

1985.pp. 259-265.
[Jeva89]D. JevansB, . Wyvill, "AdaptiveVoxcl Subdivision for Ray Tracing", Graphics Inrerface,June 1989, pp.
164-172.
[Kay86] T. Kay, J. Kajiya, "Ray Tracing Complex Scenes", Computer Graphics (Proc. SIGGRAPH 86), 20(4), August 1986,pp. 269-278.
[Max86] N. Max, "AtmosphericIlluminationand Shadows", Computer Graphics (Irroc. SIGGRAPH 85), 20(4), August1986,pp. 117-124.
[Nish74] T. Nishita, E. Nakamae,"An Algorirhm for HalfTone Representarionof Tluee-DimensionalObjccts", Information Processingin Japan,vol. 14, 1974, pp. 93-99.
[Nish85] T. Nishita, I. Okamura, E. Nakamae,"shading Models for Point and Linear Sources",ACM Transactionson Graphics4, (2),April 1985,pp. 66-75.
[Nish87l T. Nishita, E. Nakamae, "A Shading Modcl for Atmospheric ScatteringCorsidering Luminous Intensity Distributionof Light Sources",ComputerGraphics ( P r o c .S I C G R A P H8 7 ) , 2 1 ( 4 )J, u l y 1 9 8 7 ,p p . 3 0 3 - 3 1 0 .
[Reev87]W. Reeves,D. Salesin,R. Cook, "RcnclcringAnriAliasedShadowswith DcprhMaps",ConrpLrrcGr raphi c s ( P r o c .S I G G R A P H8 7 ) ,2 i ( 4 ) , J u t y 1 9 8 7 ,p p . 2 8 3 291.
[Rubi80]S. Rubin,T. Whiucd, "A 3-DimensionaRl epresentation for Fast Renderingof Complcx Scenes",Computer Craphics (Proc. SIGGRAPH 80), l4(3), Julv 1 9 8 0p, p . 1 1 0 - 1 1 6 .
[Snyd87]J. Snyder,,{. Ban, "Ray TracingComplexModels C o n t a i n i n gS u r f a c eT e s s e ' l l a t i o n sC" ,o m p u t e rG r a p h i c s ( P r o c .S I G G R A P H8 7 ) ,2 l ( 4 ) , J u l y 1 9 8 7 p, p . 1 1 9 - 1 2 8 .
[Whit80] T. Whiued, "An ImprovedIlluminationModel for ShadedDisplay",Communicarionosf rhc ACM, 23(6), J u n c 1 9 8 0 ,p p . 3 4 3 - 3 4 9 .
[Will78] L. Williams, "CasringCurved Shackrwson Curved Surfaces",ComputerGraphics(Proc.SIGGRAPH 78). 12(3),August1978,pp. 270-274.
[Woo89a] A. Woo, "Accelerarorsfor Shadow Derermination in Ray Tracing",M.Sc. Thesis,Dcpartmenrof ComputerScience,UniversiryofToronto, 1989.
[Woo89b] A. Woo, P. Poulin,A. Fournier,"A Surveyof Shadow Algorithms", Departmenrof Computer Scicnce, Universiryof Toronto, submittedfor publication, 1990.

GraphicsInterface'90

Graph Image

220
F l a k e sI m a g e

DGP Image

Tetra Image

Bars Image

GraphicsInterface'90

