NILS J.  NILSSON  Artificial 
Stanford  Research Institute,  Menlo  Park, California

Intelligence  Group

PROBLEM-SOLVING
METHODS 
ARTIFICIAL
INTElliGENCE

IN 

t
;

:

I
!

I

i
i

..
i
I

~

,v  111(
McGRAW-HILL  BOOK  COMPANY
New York 
Johannesburg 
New  Delhi 
Singapore 

Panama 
Sydney 

Kuala  Lumpur 

Toronto

Rio  de  Janeiro

San Francisco 

St.  Louis 

London 

Dusseldorf
Mexico 

Montreal

~

STATE-SPACE 

SEARCH 

METHODS 

65

A  would  certainly  have missed it  and thus would  be inadmissible,
contrary  to  our  assumption. Thus,  we must  assume that  algorithm
A  "knew" that  there ~as no less costly p.ath through node n.) The 
actual  cost  of  an  optImal  path  constraIned to  go  through  node 
n is 
f(n)  = g(n)  4- h(n) 
from which we can state that 

h(n)  = f(n)  -  g(n)
Now,  as argued  above,  algorithm  A  knows  that  f(n)  ~ f(8)  and
therefore it  knows that
h(n)  ~ f(8)  -  g(n)
Such information  available  to  algorithm  A  would  permit  a  lower
bound estimate of
h(n)  = f(8)  -  g(n) 

On the other hand, algorithm A *  used the  evaluation  function 

j(n)  = O(n) 4- h(n) 
We know from Lemma 3-3 that 

. 

j(n)  ::;: f(8)
Thus we know!

O(n)  4-  h(n)  ::;: f(8) 
Therefore, whatever the h function  used by A * it  must have satisfied 
the  inequality 
h(n)  ::;:  f(8)  -  O(n) 
Now, at the time A*  expanded node n, O(n) = g(n) by  Lemma 3-2
and thus 
k(n)  ::;: f(8)  -  g(n) 

But now we see that, at least for node n, algorithm A used informa- 
tion  permitting  a  lower  bound on h  at  least as large as the  lower 
bound used by  algorithm  A *.  Thus A *  could not  be more informed 
than A,  contradicting our  assumption and proving the  theorem. 

3-10  THE  HEURISTIC POWER OF h 
The selection of h is  crucial  in  determining  the  heuristic  power  of  the 
ordered-search algorithm.  Using h =  0  assures admissibility  but  results

\

i

:Ci;

i.  :
,[
;1
It
, ~
'

!

i .
,
!  I

J

I;
.  I'  J

; 
,

I

!
t
t:
, J
,'I
i

l

I
I

!
I

1

1

1'

1

I

i
1
i
i,I

-

~- 

99

3~N3E>11l3.lNI "v'I~I:JI.l~'v' NI SaOH.l3W E>NI/\'OS-W3'80~d 

~s'aq~1q 'aq~ o~ l'Bnb'a 1,:( ~U!~~'a8 '~u'a1om'au1 An'BnSn snq~ s1 PU'B qOJ'B'as punq u1

J'at.\.°1 'aIq1ssod
'A~111q1ss1Wp'B ~u11I1'B~u1'Bw

'I{ uo punoq 

q~1t.\. ~u'a~s1sUOO s'apou ~S'aM'aJ 'aq~ spu'Bdx'a 

'aq~ "alzznd-g 

J'at.\.°1 'B ~ou s1 ~'Bq~ u01~ounJ 'awos 'I{ JoJ ~u1sn Aq A~n1q1ss1Wp'B
'aAloS o~ sn st.\.°n'B u'aq~ J'at.\.od °1~s1Jn'aq p'apP'B s1qJ.,
'aJ'aqA\) (u)M = (u)1,:( u01~ounJ 
'aq~ uI

dn ~U1A~ Jo 'asu'adx'a 'aq~ ~'B P'au1'B~ 'aq U'BO J8t.\.od °1~s1Jn'aq u'a~JO
"I{ uo punoq 
'sw'alqoJd 
Jo J'aqwnu 
'B 'aP1AOJd ~ou s'aop ~1 ~nq '(u)'I{ uo punoq J'at.\.°1 'B s1 ('aO'Bld ~UOJt.\. 'aq~ u1 s'al1~
'aq~ o~ sd'a~s Jo J'aqwnu Jo SWJ'a~ u1) A~lnom1P 'aq~ Jo 'a~'BW1~s'a  poo~ AJ'aA
'(u)d = (u)1,:( u01~ounJ 'aq~ s1 'a~'BW1~s'a  J'a~~'aq Y 'U01~'BJ~Yuoo 'al1~  'B Jo (y'B0~
'aJ'aqt.\.
"'awoq,, WOJJ s1 'al1~ qO'B'a ~'Bq~ s'aoU'B~S1P 'aq~ Jo wns 
'J'aA'at.\.Oq  'SSOJ~ OO~ s1 ~'BW1~s'a s1q~ U'aAa '(s'ao'a1d ~ul1I'aAJ'a~u1 ~U1JOU~1)
'aq~ ~U~U'Bqox'a Jo A~lnom1P 'aq~ 'as1'BJdd'B Al'a~'BJnoo'B ~ou s'aop ~1 ~'Bq~ u1
's'an~ ~u'aO'Brp'B Ot.\.~ Jo su01~1sod

J'apJ'Bq qonw 
'aq~ s1 (u)M 

'aq~ s1 (u)d 

'aq~ JoJ n'at.\. 'a~1nb S){Jot.\. ~'Bq~ 'a~'BW1~s'a uy

s1 'alzznd-g 

(u)1,:(

(u)8 f.' + (u)d = 

'aq~ punoJ'B ~U1){o'aqo Aq P'au1'B~qo aJo:Js a:Juanbas 'B s1 (u)8 A~1~u'Bnb 'aqJ.,
'al1~ AJ'aA'a JoJ Z ~U1~~On'B 'uJn~ u1 s'aJ'Bnbs I'BJ~u'aouou
s~1 Aq p'aMOnOJ ~ou 
'aq~ u1 'ao'a1d 'B ~'Bq~ ~d'aox'a "al1~ J'aq~o AJ'aA'a JoJ 0 PU'B Joss'aoons J'adoJd
1,:( s1q~ ~'Bq~ 'a~OU 'aM. "1 S'aJOOS J'a~u'ao
J'aMOl 

'B 'aP1AOJd ~OU S'aOp u01~ounJ 

"'I{ JOJ punoq

'aAI0S A[1S'B'a U'BO

'aq~ U1 p'asn 1,:( s1q~ q~1M.
'aJOW qonw 

'at.\. '(U)1,:( + (U)O = (U)f u01~ounJ U01~'Bnl'BA'a 
p'aA[OS 'aM 'aUO 'aq~ U'Bq~ S'alzznd-g ~lnOm1P 
-p'aJ'apJO 'aq~ ~U1Aldd'B WOJJ ~u1~lns'aJ 'a'aJ~ 'aq~ t.\.oqs 'at.\. g-f.' "~1.1 UI 
-SU'BJ~ JO w'alqoJd 

. J'a1p'B'a
'aq~ o~ u01~ounJ U01~'BnI'BA'a s1q~ q~1A\ wq~!JO~I'B qOJ'B'aS 

~U1WJoJ 

.J

j 

f 
, 
J 

, 

I

, 

'(; 

1 

9 

8. t 

E 

1..

g 

--- 

--

O~U! 

1 

8 

- 

1.. 

'(; 

E 

. 

9 

--- 
t 

- 

g 

: ~
~

.' 
, 

..
~
,(

1
";.
~
I.

'aq~ PU'B 'P'al0J1° s1 'apou qO'B'a Jo 'an{'BA f 'aq~ U1'B~y
'aJ'B s'apou qO!q,\\ u1 J'apJO 'aq~

'p'apu'Bdx'a 

t.\.oqs sJ'aqwnu P'aloJ!oun 

'aqJ.,

Jo 'aq o~ su'add'Bq punoJ q~-Bd u01~nlos 

'(sd'a~S-1j51) q~u'all'BW1U1W 

'I{ 'aq~ 'aOU!S q~noq~I'B

~ou 
'B u1 s~lns'aJ u01~ounJ  1,:( s1q~ ~'Bq~ 'a~0 N "q~'Bd I'BW1~do U'B ~U!puy p'a'a~u'BJ'Bn~
P'a~1W11 AJ'aA 'B AluO ~ 1'B0~ 'aq~ pJ'Bt.\.o~ Al~O'aJ1P Jaq~'BJ qoJ'Bas Jo ~u1snooJ

J'at.\.°1 'B ~ou s1 u01~ounJ 

'aJ'at.\. 'at.\. "I{ JoJ punoq 

'

"~J'B~S 'aq~ J'B'aU S'Bt.\. ~'Bt{~ PU'8 'p'aJJnooo ~U1p'B'aJds Jo ~unow'B 

-p'aJ'apJO 'aq~ JO J'at.\.od °1~s1Jn'aq 'aq~ s'au1WJ'a~'aP ~'Bq~ JO~O'BJ J'aq~ouy

--

J 

~ 
W 

f\ 

STATE-SPACE  SEARCH  METHODS  67

1

, 
: 

I
i
i

! 

I

III 

!
I;' I  ,

I:
:
II

j;

i

'!
:1

i 

.II, 

1: 

Ii! ~,
j';.1:
jlIi'
I. I" 
"I' 
! II
III'"
,in: II

I'"
!"

:
i'
'

'
i

: 
'I

I
',

I

'

I i I;

. 

I; 
i

!
i 

/: 
' 
' 
j: 

I 

I . 

: 
,:
I ;' 
I 

"

j!
I
II  : 

.

,

. 

.1

j
I
i

!
.
;

t

1,4 

:  ~

If  ( 

I
!

I.

FIG. 3-8  A  tree produced  by  an  ordered  search. 

68  PROBLEM-SOLVING  METHODS 

IN  ARTIFICIAL 

INTELLIGENCE 

search algorithm  is the  amount  of  effort  involved  in  calculating  h. The
best h would be a function  identically  equal to h, resulting  in  an absolute
minimum  number  of  node expansions. Such an h could, for example, be
determined as a result  of  a separate complete search at  every  node, but
this  obviously  would not  reduce the total  computational  effort.

Sometimes  an h function 

that  is  not  a lower  bound  on  h is  easier to
compute than  one that  is.  In  these cases the  heuristic  power  might  be
doubly  improved-because  the  total  number of  nodes expanded may be
reduced (at  the expense of admissibility)  and the computational  effort  is
reduced. In  certain cases the heuristic power of a given h can be increased
simply by  multiplying  it  by  some positive constant greater than  unity.  If
this  factor  is very large,  the  situation  is as if  O(n)  = O. Such  a selection,  of
course, leads to an inadmissible algorithm  but  one that  might  nevertheless
perform  satisfactorily.  In  fact,  one might  intuitively  suppose that  setting
O(n)  =  0 would increase search efficiency in those cases in which any path
(not necessarily the least costly) to the goal is desired. In  the next section
we shall present some results counter to  such intuition.

;. 
j

: 

'!

To  summarize, there  are  three  important 

factors  influencing  the

heuristic  power of an ordered-search algorithm:

1.  The cost of the path
2.  The number of nodes expanded in  finding  the path
3.  The computational  effort  required to  compute h
The  selection  of  a suitable  h then  permits  one to  choose for  each problem
a desirable compromise among these factors to maximize heuristic power.

3-11  THE  IMPORTANCE OF 0

In  many problems, we merely desire to find  some path  to a goal node and
are unconcerned about the cost of the resulting  path.  (Weare,  of course,
concerned about  the amount  of search effort  required to  find .a path.)  In
such situations,  intuitive  arguments can be given both  for  including  0 in
the evaluation  function  and for  ignoring  it.

Intuitive argument for ignoring 0

When merely any path  to a goal is desired, 0 can be ignored since, at any
stage during  the  search, we don't  care about  the  costs of  the  paths  de-
veloped thus far.  We care only about the  remaining search effort  required
to find a goal node, and this search effort, while possibly dependent on the
h values of the open nodes, is certainly  independent of the 0 values of the
open nodes. Therefore, for  such problems we should use as the evaluation
function J =  h.

r
!

,

